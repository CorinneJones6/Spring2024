Script started on Thu Jan 25 10:51:59 2024
Restored session: Thu Jan 25 10:51:40 MST 2024
[1m[7m%[27m[1m[0m                                                                                ]7;file://corinnes-mbp.lan/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode[0m[27m[24m[Jcorinnejones@corinnes-mbp buggyCode % [K[?2004h[7mclang++ *.cpp  -o program[27m[25D[27mc[27ml[27ma[27mn[27mg[27m+[27m+[27m [27m*[27m.[27mc[27mp[27mp[27m [27m [27m-[27mo[27m [27mp[27mr[27mo[27mg[27mr[27ma[27mm[?2004l
[1m[7m%[27m[1m[0m                                                                                ]7;file://corinnes-mbp.lan/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode[0m[27m[24m[Jcorinnejones@corinnes-mbp buggyCode % [K[?2004hlls -l[?2004l
total 472
-rw-r--r--  1 corinnejones  staff      43 Jan 25 10:51 CorinneJones.txt
-rwxrwxrwx@ 1 corinnejones  staff    4128 Jan  4 16:52 Department.cpp
-rwxrwxrwx@ 1 corinnejones  staff    1486 Oct  8  2018 Department.h
-rwxrwxrwx@ 1 corinnejones  staff    1018 Jan  4 16:59 employeeClass.cpp
-rwxrwxrwx@ 1 corinnejones  staff     621 Jan  4 17:00 employeeClass.h
-rwxrwxrwx@ 1 corinnejones  staff    5085 Jan  4 16:47 main.cpp
-rwxr-xr-x  1 corinnejones  staff  188596 Jan 25 10:52 program
-rwxrwxrwx@ 1 corinnejones  staff     955 Mar 15  2018 programmerClass.cpp
-rwxrwxrwx@ 1 corinnejones  staff     595 Mar 15  2018 programmerClass.h
-rwxrwxrwx@ 1 corinnejones  staff    1072 Mar 15  2018 softwarearchitectClass.cpp
-rwxrwxrwx@ 1 corinnejones  staff     633 Mar 15  2018 softwarearchitectClass.h
[1m[7m%[27m[1m[0m                                                                                ]7;file://corinnes-mbp.lan/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode[0m[27m[24m[Jcorinnejones@corinnes-mbp buggyCode % [K[?2004h[7mclang++ *.cpp -g -O0  -o program[27m[32D[27mc[27ml[27ma[27mn[27mg[27m+[27m+[27m [27m*[27m.[27mc[27mp[27mp[27m [27m-[27mg[27m [27m-[27mO[27m0[27m [27m [27m-[27mo[27m [27mp[27mr[27mo[27mg[27mr[27ma[27mm[?2004l
[1m[7m%[27m[1m[0m                                                                                ]7;file://corinnes-mbp.lan/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode[0m[27m[24m[Jcorinnejones@corinnes-mbp buggyCode % [K[?2004hlls-  -l[?2004l
total 688
-rw-r--r--  1 corinnejones  staff    2557 Jan 25 10:54 CorinneJones.txt
-rwxrwxrwx@ 1 corinnejones  staff    4128 Jan  4 16:52 Department.cpp
-rwxrwxrwx@ 1 corinnejones  staff    1486 Oct  8  2018 Department.h
-rwxrwxrwx@ 1 corinnejones  staff    1018 Jan  4 16:59 employeeClass.cpp
-rwxrwxrwx@ 1 corinnejones  staff     621 Jan  4 17:00 employeeClass.h
-rwxrwxrwx@ 1 corinnejones  staff    5085 Jan  4 16:47 main.cpp
-rwxr-xr-x  1 corinnejones  staff  300068 Jan 25 10:54 program
drwxr-xr-x  3 corinnejones  staff      96 Jan 25 10:54 program.dSYM
-rwxrwxrwx@ 1 corinnejones  staff     955 Mar 15  2018 programmerClass.cpp
-rwxrwxrwx@ 1 corinnejones  staff     595 Mar 15  2018 programmerClass.h
-rwxrwxrwx@ 1 corinnejones  staff    1072 Mar 15  2018 softwarearchitectClass.cpp
-rwxrwxrwx@ 1 corinnejones  staff     633 Mar 15  2018 softwarearchitectClass.h
[1m[7m%[27m[1m[0m                                                                                ]7;file://corinnes-mbp.lan/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode[0m[27m[24m[Jcorinnejones@corinnes-mbp buggyCode % [K[?2004h[7mclang++ *.cpp -g -O0  -o program[27m[32D[27mc[27ml[27ma[27mn[27mg[27m+[27m+[27m [27m*[27m.[27mc[27mp[27mp[27m [27m-[27mg[27m [27m-[27mO[27m0[27m [27m [27m-[27mo[27m [27mp[27mr[27mo[27mg[27mr[27ma[27mm[1C [P[11C [13D1  -o program[12D[1C[1C[1C[1C[1C[1C[1C[1C[1C[1C[1C[1C[?2004l
[1m[7m%[27m[1m[0m                                                                                ]7;file://corinnes-mbp.lan/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode[0m[27m[24m[Jcorinnejones@corinnes-mbp buggyCode % [K[?2004hclang++ *.cpp -g -O1  -o program[32Dls -l               [2C          [27D[?2004l
total 248
-rw-r--r--  1 corinnejones  staff   3985 Jan 25 10:56 CorinneJones.txt
-rwxrwxrwx@ 1 corinnejones  staff   4128 Jan  4 16:52 Department.cpp
-rwxrwxrwx@ 1 corinnejones  staff   1486 Oct  8  2018 Department.h
-rwxrwxrwx@ 1 corinnejones  staff   1018 Jan  4 16:59 employeeClass.cpp
-rwxrwxrwx@ 1 corinnejones  staff    621 Jan  4 17:00 employeeClass.h
-rwxrwxrwx@ 1 corinnejones  staff   5085 Jan  4 16:47 main.cpp
-rwxr-xr-x  1 corinnejones  staff  76820 Jan 25 10:56 program
drwxr-xr-x  3 corinnejones  staff     96 Jan 25 10:54 program.dSYM
-rwxrwxrwx@ 1 corinnejones  staff    955 Mar 15  2018 programmerClass.cpp
-rwxrwxrwx@ 1 corinnejones  staff    595 Mar 15  2018 programmerClass.h
-rwxrwxrwx@ 1 corinnejones  staff   1072 Mar 15  2018 softwarearchitectClass.cpp
-rwxrwxrwx@ 1 corinnejones  staff    633 Mar 15  2018 softwarearchitectClass.h
[1m[7m%[27m[1m[0m                                                                                ]7;file://corinnes-mbp.lan/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode[0m[27m[24m[Jcorinnejones@corinnes-mbp buggyCode % [K[?2004hls -lclang++ *.cpp -g -O1  -o program[1C [P[11C [13D2  -o program[12D[1C[1C[1C[1C[1C[1C[1C[1C[1C[1C[1C[1C[?2004l
[1m[7m%[27m[1m[0m                                                                                ]7;file://corinnes-mbp.lan/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode[0m[27m[24m[Jcorinnejones@corinnes-mbp buggyCode % [K[?2004hclang++ *.cpp -g -O2  -o program[32Dls -l               [2C          [27D[?2004l
total 256
-rw-r--r--  1 corinnejones  staff   5713 Jan 25 10:57 CorinneJones.txt
-rwxrwxrwx@ 1 corinnejones  staff   4128 Jan  4 16:52 Department.cpp
-rwxrwxrwx@ 1 corinnejones  staff   1486 Oct  8  2018 Department.h
-rwxrwxrwx@ 1 corinnejones  staff   1018 Jan  4 16:59 employeeClass.cpp
-rwxrwxrwx@ 1 corinnejones  staff    621 Jan  4 17:00 employeeClass.h
-rwxrwxrwx@ 1 corinnejones  staff   5085 Jan  4 16:47 main.cpp
-rwxr-xr-x  1 corinnejones  staff  76228 Jan 25 10:58 program
drwxr-xr-x  3 corinnejones  staff     96 Jan 25 10:54 program.dSYM
-rwxrwxrwx@ 1 corinnejones  staff    955 Mar 15  2018 programmerClass.cpp
-rwxrwxrwx@ 1 corinnejones  staff    595 Mar 15  2018 programmerClass.h
-rwxrwxrwx@ 1 corinnejones  staff   1072 Mar 15  2018 softwarearchitectClass.cpp
-rwxrwxrwx@ 1 corinnejones  staff    633 Mar 15  2018 softwarearchitectClass.h
[1m[7m%[27m[1m[0m                                                                                ]7;file://corinnes-mbp.lan/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode[0m[27m[24m[Jcorinnejones@corinnes-mbp buggyCode % [K[?2004hlls[?2004l
CorinneJones.txt		program
Department.cpp			program.dSYM
Department.h			programmerClass.cpp
employeeClass.cpp		programmerClass.h
employeeClass.h			softwarearchitectClass.cpp
main.cpp			softwarearchitectClass.h
[1m[7m%[27m[1m[0m                                                                                ]7;file://corinnes-mbp.lan/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode[0m[27m[24m[Jcorinnejones@corinnes-mbp buggyCode % [K[?2004h../program[?2004l
  Here is the List of all the Staff in the R&D Department: 
  ------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

   Josh   0   Technology Specialist   3000.00      2015

   Mary   0         Project Manager   5500.00      2010

   Marc   0    Research Team Leader   8000.00      2007

   Mike   0        Multimedia Prog.   2500.00      2014

  Julie   0     Mainframe Sys.Prog.   2150.00      2013

 Albert   0                OS Prog.   2300.00      2015

   John   0    Senior Software Eng.   4899.00      2011

 Connor   0      Software Developer   1900.00      2017
  Here is the List of all the Staff in the IT Department: 
  ------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

    Roy   0           Network Prog.   1900.00      2016

   Jane   0                  Tester   1500.00      2018

 Removing Mike from the company: Succeeded
 -------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

   Mary   0         Project Manager   5500.00      2010

  Julie   0     Mainframe Sys.Prog.   2150.00      2013

 Connor   0      Software Developer   1900.00      2017

  Here is the List of all the Programmers who know C++ in the R&D Department: 
  ---------------------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

  Julie   0     Mainframe Sys.Prog.   2150.00      2013      Mary         5         C++

 Listing All Project IDs:  5 8
-------------------------
The Highest R&D Employee Salary is: 5500.00
The Highest R&D Programmer Salary is: 2150.00
The Highest R&D Software Architect Salary is: 1900.00

The Average R&D Employee Salary is: 5500
The Average R&D Programmer Salary is: 2150
The Average R&D Software Architect Salary is: 1900

The Average IT Employee Salary is: 0
The Average IT Programmer Salary is: 750
The Average IT Software Architect Salary is: 0

[1m[7m%[27m[1m[0m                                                                                ]7;file://corinnes-mbp.lan/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode[0m[27m[24m[Jcorinnejones@corinnes-mbp buggyCode % [K[?2004h[7mclang++ *.cpp -g -O0  -o program[27m[32D[27mc[27ml[27ma[27mn[27mg[27m+[27m+[27m [27m*[27m.[27mc[27mp[27mp[27m [27m-[27mg[27m [27m-[27mO[27m0[27m [27m [27m-[27mo[27m [27mp[27mr[27mo[27mg[27mr[27ma[27mm[?2004l
[1m[7m%[27m[1m[0m                                                                                ]7;file://corinnes-mbp.lan/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode[0m[27m[24m[Jcorinnejones@corinnes-mbp buggyCode % [K[?2004h[7mlldb program[27m[12D[27ml[27ml[27md[27mb[27m [27mp[27mr[27mo[27mg[27mr[27ma[27mm[?2004l
(lldb) target create "program"
[2mLocating external symbol file for program...[0m[K[2K[2mLoading Apple DWARF index for program...[0m[K[2K[2mLocating external symbol file for dyld...[0m[K[2K[2mParsing symbol table for dyld...[0m[K[2K[2mLocating external symbol file for libc++.1.dylib...[0m[K[2K[2mParsing symbol table for libc++.1.dylib...[0m[K[2K[2mLocating external symbol file for libSystem.B.dylib...[0m[K[2K[2mParsing symbol table for libSystem.B.dylib...[0m[K[2K[2mLocating external symbol file for libc++abi.dylib...[0m[K[2K[2mParsing symbol table for libc++abi.dylib...[0m[K[2K[2mLocating external symbol file for libcache.dylib...[0m[K[2K[2mParsing symbol table for libcache.dylib...[0m[K[2K[2mLocating external symbol file for libcommonCrypto.dylib...[0m[K[2K[2mParsing symbol table for libcommonCrypto.dylib...[0m[K[2K[2mLocating external symbol file for libcompiler_rt.dylib...[0m[K[2K[2mParsing symbol table for libcompiler_rt.dylib...[0m[K[2K[2mLocating external symbol file for libcopyfile.dylib...[0m[K[2K[2mParsing symbol table for libcopyfile.dylib...[0m[K[2K[2mLocating external symbol file for libcorecrypto.dylib...[0m[K[2K[2mParsing symbol table for libcorecrypto.dylib...[0m[K[2K[2mLocating external symbol file for libdispatch.dylib...[0m[K[2K[2mParsing symbol table for libdispatch.dylib...[0m[K[2K[2mLocating external symbol file for libdyld.dylib...[0m[K[2K[2mParsing symbol table for libdyld.dylib...[0m[K[2K[2mLocating external symbol file for libkeymgr.dylib...[0m[K[2K[2mParsing symbol table for libkeymgr.dylib...[0m[K[2K[2mLocating external symbol file for libmacho.dylib...[0m[K[2K[2mParsing symbol table for libmacho.dylib...[0m[K[2K[2mLocating external symbol file for libquarantine.dylib...[0m[K[2K[2mParsing symbol table for libquarantine.dylib...[0m[K[2K[2mLocating external symbol file for libremovefile.dylib...[0m[K[2K[2mParsing symbol table for libremovefile.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_asl.dylib...[0m[K[2K[2mParsing symbol table for libsystem_asl.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_blocks.dylib...[0m[K[2K[2mParsing symbol table for libsystem_blocks.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_c.dylib...[0m[K[2K[2mParsing symbol table for libsystem_c.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_collections.dylib...[0m[K[2K[2mParsing symbol table for libsystem_collections.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_configuration.dylib...[0m[K[2K[2mParsing symbol table for libsystem_configuration.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_containermanager.dylib...[0m[K[2K[2mParsing symbol table for libsystem_containermanager.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_coreservices.dylib...[0m[K[2K[2mParsing symbol table for libsystem_coreservices.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_darwin.dylib...[0m[K[2K[2mParsing symbol table for libsystem_darwin.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_dnssd.dylib...[0m[K[2K[2mParsing symbol table for libsystem_dnssd.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_featureflags.dylib...[0m[K[2K[2mParsing symbol table for libsystem_featureflags.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_info.dylib...[0m[K[2K[2mParsing symbol table for libsystem_info.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_m.dylib...[0m[K[2K[2mParsing symbol table for libsystem_m.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_malloc.dylib...[0m[K[2K[2mParsing symbol table for libsystem_malloc.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_networkextension.dylib...[0m[K[2K[2mParsing symbol table for libsystem_networkextension.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_notify.dylib...[0m[K[2K[2mParsing symbol table for libsystem_notify.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_sandbox.dylib...[0m[K[2K[2mParsing symbol table for libsystem_sandbox.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_secinit.dylib...[0m[K[2K[2mParsing symbol table for libsystem_secinit.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_kernel.dylib...[0m[K[2K[2mParsing symbol table for libsystem_kernel.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_platform.dylib...[0m[K[2K[2mParsing symbol table for libsystem_platform.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_pthread.dylib...[0m[K[2K[2mParsing symbol table for libsystem_pthread.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_symptoms.dylib...[0m[K[2K[2mParsing symbol table for libsystem_symptoms.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_trace.dylib...[0m[K[2K[2mParsing symbol table for libsystem_trace.dylib...[0m[K[2K[2mLocating external symbol file for libunwind.dylib...[0m[K[2K[2mParsing symbol table for libunwind.dylib...[0m[K[2K[2mLocating external symbol file for libxpc.dylib...[0m[K[2K[2mParsing symbol table for libxpc.dylib...[0m[K[2K[2mLocating external symbol file for libobjc.A.dylib...[0m[K[2K[2mParsing symbol table for libobjc.A.dylib...[0m[K[2K[2mLocating external symbol file for liboah.dylib...[0m[K[2K[2mParsing symbol table for liboah.dylib...[0m[K[2K[2mParsing symbol table for program...[0m[K[2KCurrent executable set to '/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode/program' (arm64).
(lldb) [1G[2m(lldb) [0m[8Grun
Process 6245 launched: '/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode/program' (arm64)
  Here is the List of all the Staff in the R&D Department: 
  ------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

   Josh   0   Technology Specialist   3000.00      2015

   Mary   0         Project Manager   5500.00      2010

   Marc   0    Research Team Leader   8000.00      2007

   Mike   0        Multimedia Prog.   2500.00      2014

  Julie   0     Mainframe Sys.Prog.   2150.00      2013

 Albert   0                OS Prog.   2300.00      2015

   John   0    Senior Software Eng.   4899.00      2011

 Connor   0      Software Developer   1900.00      2017
  Here is the List of all the Staff in the IT Department: 
  ------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

    Roy   0           Network Prog.   1900.00      2016

   Jane   0                  Tester   1500.00      2018

 Removing Mike from the company: Succeeded
 -------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

   Mary   0         Project Manager   5500.00      2010

  Julie   0     Mainframe Sys.Prog.   2150.00      2013

 Connor   0      Software Developer   1900.00      2017

  Here is the List of all the Programmers who know C++ in the R&D Department: 
  ---------------------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

  Julie   0     Mainframe Sys.Prog.   2150.00      2013      Mary         5         C++

 Listing All Project IDs:  5 8
-------------------------
The Highest R&D Employee Salary is: 5500.00
The Highest R&D Programmer Salary is: 2150.00
The Highest R&D Software Architect Salary is: 1900.00

The Average R&D Employee Salary is: 5500
The Average R&D Programmer Salary is: 2150
The Average R&D Software Architect Salary is: 1900

The Average IT Employee Salary is: 0
The Average IT Programmer Salary is: 750
The Average IT Software Architect Salary is: 0

Process 6245 exited with status = 0 (0x00000000) 
(lldb) [1G[2m(lldb) [0m[8Gb1
[0;1;31merror: [0m'b1' is not a valid command.
(lldb) [1G[2m(lldb) [0m[8Gls
[0;1;31merror: [0m'ls' is not a valid command.
(lldb) [1G[2m(lldb) [0m[8Grun
Process 6290 launched: '/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode/program' (arm64)
  Here is the List of all the Staff in the R&D Department: 
  ------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

   Josh   0   Technology Specialist   3000.00      2015

   Mary   0         Project Manager   5500.00      2010

   Marc   0    Research Team Leader   8000.00      2007

   Mike   0        Multimedia Prog.   2500.00      2014

  Julie   0     Mainframe Sys.Prog.   2150.00      2013

 Albert   0                OS Prog.   2300.00      2015

   John   0    Senior Software Eng.   4899.00      2011

 Connor   0      Software Developer   1900.00      2017
  Here is the List of all the Staff in the IT Department: 
  ------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

    Roy   0           Network Prog.   1900.00      2016

   Jane   0                  Tester   1500.00      2018

 Removing Mike from the company: Succeeded
 -------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

   Mary   0         Project Manager   5500.00      2010

  Julie   0     Mainframe Sys.Prog.   2150.00      2013

 Connor   0      Software Developer   1900.00      2017

  Here is the List of all the Programmers who know C++ in the R&D Department: 
  ---------------------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

  Julie   0     Mainframe Sys.Prog.   2150.00      2013      Mary         5         C++

 Listing All Project IDs:  5 8
-------------------------
The Highest R&D Employee Salary is: 5500.00
The Highest R&D Programmer Salary is: 2150.00
The Highest R&D Software Architect Salary is: 1900.00

The Average R&D Employee Salary is: 5500
The Average R&D Programmer Salary is: 2150
The Average R&D Software Architect Salary is: 1900

The Average IT Employee Salary is: 0
The Average IT Programmer Salary is: 750
The Average IT Software Architect Salary is: 0

Process 6290 exited with status = 0 (0x00000000) 
(lldb) [1G[2m(lldb) [0m[8Grun b1
Process 6294 launched: '/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode/program' (arm64)
  Here is the List of all the Staff in the R&D Department: 
  ------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

   Josh   0   Technology Specialist   3000.00      2015

   Mary   0         Project Manager   5500.00      2010

   Marc   0    Research Team Leader   8000.00      2007

   Mike   0        Multimedia Prog.   2500.00      2014

  Julie   0     Mainframe Sys.Prog.   2150.00      2013

 Albert   0                OS Prog.   2300.00      2015

   John   0    Senior Software Eng.   4899.00      2011

 Connor   0      Software Developer   1900.00      2017
  Here is the List of all the Staff in the IT Department: 
  ------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

    Roy   0           Network Prog.   1900.00      2016

   Jane   0                  Tester   1500.00      2018

 Removing Mike from the company: Succeeded
 -------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

   Mary   0         Project Manager   5500.00      2010

  Julie   0     Mainframe Sys.Prog.   2150.00      2013

 Connor   0      Software Developer   1900.00      2017

  Here is the List of all the Programmers who know C++ in the R&D Department: 
  ---------------------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

  Julie   0     Mainframe Sys.Prog.   2150.00      2013      Mary         5         C++

 Listing All Project IDs:  5 8
-------------------------
The Highest R&D Employee Salary is: 5500.00
The Highest R&D Programmer Salary is: 2150.00
The Highest R&D Software Architect Salary is: 1900.00

The Average R&D Employee Salary is: 5500
The Average R&D Programmer Salary is: 2150
The Average R&D Software Architect Salary is: 1900

The Average IT Employee Salary is: 0
The Average IT Programmer Salary is: 750
The Average IT Software Architect Salary is: 0

Process 6294 exited with status = 0 (0x00000000) 
(lldb) [1G[2m(lldb) [0m[8Grun b1[1G[2m(lldb) [0m[14G[K[1G[2m(lldb) [0m[11Gls[K[1G[2m(lldb) [0m[10Gb1[1G[2m(lldb) [0m[10Grun[1G[2m(lldb) [0m[11G[1G[2m(lldb) [0m[11Gb1[K[1G[2m(lldb) [0m[10Gls[1G[2m(lldb) [0m[10Grun[1G[2m(lldb) [0m[11G b1[1G[2m(lldb) [0m[14G[8G[K[1G[2m(lldb) [0m[8G[1G[2m(lldb) [0m[8G[1G[2m(lldb) [0m[8G[1G[2m(lldb) [0m[8G[1G[2m(lldb) [0m[8G^C
(lldb) [1G[2m(lldb) [0m[8Gcat Department.cpp
[0;1;31merror: [0m'cat' is not a valid command.
(lldb) [1G[2m(lldb) [0m[8Gbr 5
invalid command 'breakpoint 5'.
(lldb) [1G[2m(lldb) [0m[8Gb main 17
Breakpoint 1: no locations (pending).
WARNING:  Unable to resolve breakpoint to any actual locations.
(lldb) [1G[2m(lldb) [0m[8Grun
Process 6475 launched: '/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode/program' (arm64)
  Here is the List of all the Staff in the R&D Department: 
  ------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

   Josh   0   Technology Specialist   3000.00      2015

   Mary   0         Project Manager   5500.00      2010

   Marc   0    Research Team Leader   8000.00      2007

   Mike   0        Multimedia Prog.   2500.00      2014

  Julie   0     Mainframe Sys.Prog.   2150.00      2013

 Albert   0                OS Prog.   2300.00      2015

   John   0    Senior Software Eng.   4899.00      2011

 Connor   0      Software Developer   1900.00      2017
  Here is the List of all the Staff in the IT Department: 
  ------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

    Roy   0           Network Prog.   1900.00      2016

   Jane   0                  Tester   1500.00      2018

 Removing Mike from the company: Succeeded
 -------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

   Mary   0         Project Manager   5500.00      2010

  Julie   0     Mainframe Sys.Prog.   2150.00      2013

 Connor   0      Software Developer   1900.00      2017

  Here is the List of all the Programmers who know C++ in the R&D Department: 
  ---------------------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

  Julie   0     Mainframe Sys.Prog.   2150.00      2013      Mary         5         C++

 Listing All Project IDs:  5 8
-------------------------
The Highest R&D Employee Salary is: 5500.00
The Highest R&D Programmer Salary is: 2150.00
The Highest R&D Software Architect Salary is: 1900.00

The Average R&D Employee Salary is: 5500
The Average R&D Programmer Salary is: 2150
The Average R&D Software Architect Salary is: 1900

The Average IT Employee Salary is: 0
The Average IT Programmer Salary is: 750
The Average IT Software Architect Salary is: 0

Process 6475 exited with status = 0 (0x00000000) 
(lldb) [1G[2m(lldb) [0m[8Gb main.cpp:17Ca[K[1G[2m(lldb) [0m[22G[K[1G[2m(lldb) [0m[21G[K[1G[2m(lldb) [0m[20G[K[1G[2m(lldb) [0m[19G[K[1G[2m(lldb) [0m[18G[K[1G[2m(lldb) [0m[17G[K[1G[2m(lldb) [0m[16G[K[1G[2m(lldb) [0m[15G[K[1G[2m(lldb) [0m[14G[K[1G[2m(lldb) [0m[13G[K[1G[2m(lldb) [0m[12G[K[1G[2m(lldb) [0m[11G[K[1G[2m(lldb) [0m[10GCalculateAverageSalary
Breakpoint 2: where = program`Department::CalculateAverageSalary(Department::StaffTypes) + 32 at Department.cpp:70:6, address = 0x0000000100002c34
(lldb) [1G[2m(lldb) [0m[8Gb 23
Breakpoint 3: where = program`main + 456 at main.cpp:24:6, address = 0x000000010000d2ec
(lldb) [1G[2m(lldb) [0m[8Gb department.cpp:23
Breakpoint 4: no locations (pending).
WARNING:  Unable to resolve breakpoint to any actual locations.
(lldb) [1G[2m(lldb) [0m[8Gb department.cpp:23
Breakpoint 5: no locations (pending).
WARNING:  Unable to resolve breakpoint to any actual locations.
(lldb) [1G[2m(lldb) [0m[8Gb department.cpp:CalculateAverageSalary
Breakpoint 6: no locations (pending).
WARNING:  Unable to resolve breakpoint to any actual locations.
(lldb) [1G[2m(lldb) [0m[8Grun
Process 6490 launched: '/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode/program' (arm64)
Process 6490 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mbreakpoint 3.1[0m
    frame #0: [33m0x000000010000d2ec[0m program`main at [36mmain.cpp[0m:[33m24[0m:[33m6[0m
[33m  [0m 21  		Employee E2("Mary", [31m2[0m, "Project Manager", [31m5500[0m, [31m2010[0m);
[33m  [0m 22  		Employee E3("Marc", [31m3[0m, "Research Team Leader", [31m8000[0m, [31m2007[0m);
[33m  [0m 23  		[35m//adding the employees to the appropriate vector[0m
[33m->[0m 24  		RnD.[4mEmployees[0m->push_back(E1);
[33m  [0m 25  		RnD.Employees->push_back(E2);
[33m  [0m 26  		RnD.Employees->push_back(E3);
[33m  [0m 27  	
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 6490 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x000000010000d300[0m program`main at [36mmain.cpp[0m:[33m25[0m:[33m6[0m
[33m  [0m 22  		Employee E3("Marc", [31m3[0m, "Research Team Leader", [31m8000[0m, [31m2007[0m);
[33m  [0m 23  		[35m//adding the employees to the appropriate vector[0m
[33m  [0m 24  		RnD.Employees->push_back(E1);
[33m->[0m 25  		RnD.[4mEmployees[0m->push_back(E2);
[33m  [0m 26  		RnD.Employees->push_back(E3);
[33m  [0m 27  	
[33m  [0m 28  		Programmer P1("Mike", [31m11[0m, "Multimedia Prog.", [31m2500[0m, [31m2014[0m, E2.getName(), [31m5[0m, "CSS");
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gc
Process 6490 resuming
  Here is the List of all the Staff in the R&D Department: 
  ------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

   Josh   0   Technology Specialist   3000.00      2015

   Mary   0         Project Manager   5500.00      2010

   Marc   0    Research Team Leader   8000.00      2007

   Mike   0        Multimedia Prog.   2500.00      2014

  Julie   0     Mainframe Sys.Prog.   2150.00      2013

 Albert   0                OS Prog.   2300.00      2015

   John   0    Senior Software Eng.   4899.00      2011

 Connor   0      Software Developer   1900.00      2017
  Here is the List of all the Staff in the IT Department: 
  ------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

    Roy   0           Network Prog.   1900.00      2016

   Jane   0                  Tester   1500.00      2018

 Removing Mike from the company: Succeeded
 -------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

   Mary   0         Project Manager   5500.00      2010

  Julie   0     Mainframe Sys.Prog.   2150.00      2013

 Connor   0      Software Developer   1900.00      2017

  Here is the List of all the Programmers who know C++ in the R&D Department: 
  ---------------------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

  Julie   0     Mainframe Sys.Prog.   2150.00      2013      Mary         5         C++

 Listing All Project IDs:  5 8
-------------------------
The Highest R&D Employee Salary is: 5500.00
The Highest R&D Programmer Salary is: 2150.00
The Highest R&D Software Architect Salary is: 1900.00

Process 6490 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mbreakpoint 2.1[0m
    frame #0: [33m0x0000000100002c34[0m program`Department::CalculateAverageSalary(this=0x000000016fdff1a0, type=EMPLOYEE) at [36mDepartment.cpp[0m:[33m70[0m:[33m6[0m
[33m  [0m 67  	[32mint[0m Department::CalculateAverageSalary(StaffTypes type)
[33m  [0m 68  	{
[33m  [0m 69  	    [32mdouble[0m sum;
[33m->[0m 70  		sum [4m=[0m [31m0.0[0m;
[33m  [0m 71  		[32mint[0m i;
[33m  [0m 72  		[32mswitch[0m (type)
[33m  [0m 73  		{
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gc
Process 6490 resuming
The Average R&D Employee Salary is: 5500
Process 6490 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mbreakpoint 2.1[0m
    frame #0: [33m0x0000000100002c34[0m program`Department::CalculateAverageSalary(this=0x000000016fdff1a0, type=PROGRAMMER) at [36mDepartment.cpp[0m:[33m70[0m:[33m6[0m
[33m  [0m 67  	[32mint[0m Department::CalculateAverageSalary(StaffTypes type)
[33m  [0m 68  	{
[33m  [0m 69  	    [32mdouble[0m sum;
[33m->[0m 70  		sum [4m=[0m [31m0.0[0m;
[33m  [0m 71  		[32mint[0m i;
[33m  [0m 72  		[32mswitch[0m (type)
[33m  [0m 73  		{
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gc
Process 6490 resuming
The Average R&D Programmer Salary is: 2150
Process 6490 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mbreakpoint 2.1[0m
    frame #0: [33m0x0000000100002c34[0m program`Department::CalculateAverageSalary(this=0x000000016fdff1a0, type=SOFTWAREARCHITECTS) at [36mDepartment.cpp[0m:[33m70[0m:[33m6[0m
[33m  [0m 67  	[32mint[0m Department::CalculateAverageSalary(StaffTypes type)
[33m  [0m 68  	{
[33m  [0m 69  	    [32mdouble[0m sum;
[33m->[0m 70  		sum [4m=[0m [31m0.0[0m;
[33m  [0m 71  		[32mint[0m i;
[33m  [0m 72  		[32mswitch[0m (type)
[33m  [0m 73  		{
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gc
Process 6490 resuming
The Average R&D Software Architect Salary is: 1900

Process 6490 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mbreakpoint 2.1[0m
    frame #0: [33m0x0000000100002c34[0m program`Department::CalculateAverageSalary(this=0x000000016fdff140, type=EMPLOYEE) at [36mDepartment.cpp[0m:[33m70[0m:[33m6[0m
[33m  [0m 67  	[32mint[0m Department::CalculateAverageSalary(StaffTypes type)
[33m  [0m 68  	{
[33m  [0m 69  	    [32mdouble[0m sum;
[33m->[0m 70  		sum [4m=[0m [31m0.0[0m;
[33m  [0m 71  		[32mint[0m i;
[33m  [0m 72  		[32mswitch[0m (type)
[33m  [0m 73  		{
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gc
Process 6490 resuming
The Average IT Employee Salary is: 0
Process 6490 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mbreakpoint 2.1[0m
    frame #0: [33m0x0000000100002c34[0m program`Department::CalculateAverageSalary(this=0x000000016fdff140, type=PROGRAMMER) at [36mDepartment.cpp[0m:[33m70[0m:[33m6[0m
[33m  [0m 67  	[32mint[0m Department::CalculateAverageSalary(StaffTypes type)
[33m  [0m 68  	{
[33m  [0m 69  	    [32mdouble[0m sum;
[33m->[0m 70  		sum [4m=[0m [31m0.0[0m;
[33m  [0m 71  		[32mint[0m i;
[33m  [0m 72  		[32mswitch[0m (type)
[33m  [0m 73  		{
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 6490 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100002c38[0m program`Department::CalculateAverageSalary(this=0x000000016fdff140, type=PROGRAMMER) at [36mDepartment.cpp[0m:[33m72[0m:[33m10[0m
[33m  [0m 69  	    [32mdouble[0m sum;
[33m  [0m 70  		sum = [31m0.0[0m;
[33m  [0m 71  		[32mint[0m i;
[33m->[0m 72  		[32mswitch[0m ([4mtype[0m)
[33m  [0m 73  		{
[33m  [0m 74  		[32mcase[0m Department::EMPLOYEE:		
[33m  [0m 75  			[32mfor[0m (i = [31m0[0m; i < Employees->size(); i++)
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 6490 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100002cd8[0m program`Department::CalculateAverageSalary(this=0x000000016fdff140, type=PROGRAMMER) at [36mDepartment.cpp[0m:[33m81[0m:[33m10[0m
[33m  [0m 78  			}
[33m  [0m 79  			[32mbreak[0m;
[33m  [0m 80  		[32mcase[0m Department::PROGRAMMER:
[33m->[0m 81  			[32mfor[0m (i [4m=[0m [31m0[0m; i < Programmers->size(); i++)
[33m  [0m 82  			{
[33m  [0m 83  				sum = Programmers->at(i).getSalary();
[33m  [0m 84  			}
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 6490 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100002d0c[0m program`Department::CalculateAverageSalary(this=0x000000016fdff140, type=PROGRAMMER) at [36mDepartment.cpp[0m:[33m83[0m:[33m10[0m
[33m  [0m 80  		[32mcase[0m Department::PROGRAMMER:
[33m  [0m 81  			[32mfor[0m (i = [31m0[0m; i < Programmers->size(); i++)
[33m  [0m 82  			{
[33m->[0m 83  				sum = [4mProgrammers[0m->at(i).getSalary();
[33m  [0m 84  			}
[33m  [0m 85  			[32mbreak[0m;
[33m  [0m 86  		[32mcase[0m Department::SOFTWAREARCHITECTS:
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 6490 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100002d20[0m program`Department::CalculateAverageSalary(this=0x000000016fdff140, type=PROGRAMMER) at [36mDepartment.cpp[0m:[33m84[0m:[33m3[0m
[33m  [0m 81  			[32mfor[0m (i = [31m0[0m; i < Programmers->size(); i++)
[33m  [0m 82  			{
[33m  [0m 83  				sum = Programmers->at(i).getSalary();
[33m->[0m 84  			[4m}[0m
[33m  [0m 85  			[32mbreak[0m;
[33m  [0m 86  		[32mcase[0m Department::SOFTWAREARCHITECTS:
[33m  [0m 87  			[32mfor[0m (i = [31m0[0m; i < SoftwareArchitects->size(); i++)
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 6490 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100002d24[0m program`Department::CalculateAverageSalary(this=0x000000016fdff140, type=PROGRAMMER) at [36mDepartment.cpp[0m:[33m81[0m:[33m41[0m
[33m  [0m 78  			}
[33m  [0m 79  			[32mbreak[0m;
[33m  [0m 80  		[32mcase[0m Department::PROGRAMMER:
[33m->[0m 81  			[32mfor[0m (i = [31m0[0m; i < Programmers->size(); i[4m++[0m)
[33m  [0m 82  			{
[33m  [0m 83  				sum = Programmers->at(i).getSalary();
[33m  [0m 84  			}
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gc
Process 6490 resuming
The Average IT Programmer Salary is: 750
Process 6490 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mbreakpoint 2.1[0m
    frame #0: [33m0x0000000100002c34[0m program`Department::CalculateAverageSalary(this=0x000000016fdff140, type=SOFTWAREARCHITECTS) at [36mDepartment.cpp[0m:[33m70[0m:[33m6[0m
[33m  [0m 67  	[32mint[0m Department::CalculateAverageSalary(StaffTypes type)
[33m  [0m 68  	{
[33m  [0m 69  	    [32mdouble[0m sum;
[33m->[0m 70  		sum [4m=[0m [31m0.0[0m;
[33m  [0m 71  		[32mint[0m i;
[33m  [0m 72  		[32mswitch[0m (type)
[33m  [0m 73  		{
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gc
Process 6490 resuming
The Average IT Software Architect Salary is: 0

Process 6490 exited with status = 0 (0x00000000) 
(lldb) [1G[2m(lldb) [0m[8Gb [1G[2m(lldb) [0m[9G[K[1G[2m(lldb) [0m[8Ghelp
Debugger commands:
  apropos           -- List debugger commands related to a word or subject.
  breakpoint        -- Commands for operating on breakpoints (see 'help b' for
                       shorthand.)
  command           -- Commands for managing custom LLDB commands.
  disassemble       -- Disassemble specified instructions in the current
                       target.  Defaults to the current function for the
                       current thread and stack frame.
  expression        -- Evaluate an expression on the current thread.  Displays
                       any returned value with LLDB's default formatting.
  frame             -- Commands for selecting and examing the current thread's
                       stack frames.
  gdb-remote        -- Connect to a process via remote GDB server.
                       If no host is specifed, localhost is assumed.
                       gdb-remote is an abbreviation for 'process connect
                       --plugin gdb-remote connect://<hostname>:<port>'
  gui               -- Switch into the curses based GUI mode.
  help              -- Show a list of all debugger commands, or give details
                       about a specific command.
  kdp-remote        -- Connect to a process via remote KDP server.
                       If no UDP port is specified, port 41139 is
                       assumed.
                       kdp-remote is an abbreviation for 'process connect
                       --plugin kdp-remote udp://<hostname>:<port>'
  language          -- Commands specific to a source language.
  log               -- Commands controlling LLDB internal logging.
  memory            -- Commands for operating on memory in the current target
                       process.
  platform          -- Commands to manage and create platforms.
  plugin            -- Commands for managing LLDB plugins.
  process           -- Commands for interacting with processes on the current
                       platform.
  quit              -- Quit the LLDB debugger.
  register          -- Commands to access registers for the current thread and
                       stack frame.
  reproducer        -- Commands for manipulating reproducers. Reproducers make
                       it possible to capture full debug sessions with all its
                       dependencies. The resulting reproducer is used to replay
                       the debug session while debugging the debugger.
                       Because reproducers need the whole the debug session
                       from beginning to end, you need to launch the debugger
                       in capture or replay mode, commonly though the command
                       line driver.
                       Reproducers are unrelated record-replay debugging, as
                       you cannot interact with the debugger during replay.
  script            -- Invoke the script interpreter with provided code and
                       display any results.  Start the interactive interpreter
                       if no code is supplied.
  session           -- Commands controlling LLDB session.
  settings          -- Commands for managing LLDB settings.
  source            -- Commands for examining source code described by debug
                       information for the current target process.
  statistics        -- Print statistics about a debugging session
  swift-healthcheck -- Provides logging related to the Swift expression
                       evaluator, including Swift compiler diagnostics. This
                       makes it easier to identify project misconfigurations
                       that result in module import failures in the debugger.
                       The command is meant to be run after a expression
                       evaluator failure has occurred.
  target            -- Commands for operating on debugger targets.
  thread            -- Commands for operating on one or more threads in the
                       current process.
  trace             -- Commands for loading and using processor trace
                       information.
  type              -- Commands for operating on the type system.
  version           -- Show the LLDB debugger version.
  watchpoint        -- Commands for operating on watchpoints.
Current command abbreviations (type 'help command alias' for more info):
  add-dsym  -- Add a debug symbol file to one of the target's current modules
               by specifying a path to a debug symbols file or by using the
               options to specify a module.
  attach    -- Attach to process by ID or name.
  b         -- Set a breakpoint using one of several shorthand formats.
  bt        -- Show the current thread's call stack.  Any numeric argument
               displays at most that many frames.  The argument 'all' displays
               all threads.
  c         -- Continue execution of all threads in the current process.
  call      -- Evaluate an expression on the current thread.  Displays any
               returned value with LLDB's default formatting.
  continue  -- Continue execution of all threads in the current process.
  detach    -- Detach from the current target process.
  di        -- Disassemble specified instructions in the current target. 
               Defaults to the current function for the current thread and
               stack frame.
  dis       -- Disassemble specified instructions in the current target. 
               Defaults to the current function for the current thread and
               stack frame.
  display   -- Evaluate an expression at every stop (see 'help target
               stop-hook'.)
  down      -- Select a newer stack frame.  Defaults to moving one frame, a
               numeric argument can specify an arbitrary number.
  env       -- Shorthand for viewing and setting environment variables.
  exit      -- Quit the LLDB debugger.
  f         -- Select the current stack frame by index from within the current
               thread (see 'thread backtrace'.)
  file      -- Create a target using the argument as the main executable.
  finish    -- Finish executing the current stack frame and stop after
               returning.  Defaults to current thread unless specified.
  history   -- Dump the history of commands in this session.
               Commands in the history list can be run again using "!<INDEX>". 
               "!-<OFFSET>" will re-run the command that is <OFFSET> commands
               from the end of the list (counting the current command).
  image     -- Commands for accessing information for one or more target
               modules.
  j         -- Set the program counter to a new address.
  jump      -- Set the program counter to a new address.
  kill      -- Terminate the current target process.
  l         -- List relevant source code using one of several shorthand formats.
  list      -- List relevant source code using one of several shorthand formats.
  n         -- Source level single step, stepping over calls.  Defaults to
               current thread unless specified.
  next      -- Source level single step, stepping over calls.  Defaults to
               current thread unless specified.
  nexti     -- Instruction level single step, stepping over calls.  Defaults to
               current thread unless specified.
  ni        -- Instruction level single step, stepping over calls.  Defaults to
               current thread unless specified.
  p         -- Evaluate an expression on the current thread.  Displays any
               returned value with LLDB's default formatting.
  parray    -- parray <COUNT> <EXPRESSION> -- lldb will evaluate EXPRESSION to
               get a typed-pointer-to-an-array in memory, and will display
               COUNT elements of that type from the array.
  po        -- Evaluate an expression on the current thread.  Displays any
               returned value with formatting controlled by the type's author.
  poarray   -- poarray <COUNT> <EXPRESSION> -- lldb will evaluate EXPRESSION to
               get the address of an array of COUNT objects in memory, and will
               call po on them.
  print     -- Evaluate an expression on the current thread.  Displays any
               returned value with LLDB's default formatting.
  q         -- Quit the LLDB debugger.
  r         -- Launch the executable in the debugger.
  rbreak    -- Sets a breakpoint or set of breakpoints in the executable.
  re        -- Commands to access registers for the current thread and stack
               frame.
  repl      -- Evaluate an expression on the current thread.  Displays any
               returned value with LLDB's default formatting.
  run       -- Launch the executable in the debugger.
  s         -- Source level single step, stepping into calls.  Defaults to
               current thread unless specified.
  shell     -- Run a shell command on the host.
  si        -- Instruction level single step, stepping into calls.  Defaults to
               current thread unless specified.
  sif       -- Step through the current block, stopping if you step directly
               into a function whose name matches the TargetFunctionName.
  step      -- Source level single step, stepping into calls.  Defaults to
               current thread unless specified.
  stepi     -- Instruction level single step, stepping into calls.  Defaults to
               current thread unless specified.
  t         -- Change the currently selected thread.
  tbreak    -- Set a one-shot breakpoint using one of several shorthand formats.
  undisplay -- Stop displaying expression at every stop (specified by stop-hook
               index.)
  up        -- Select an older stack frame.  Defaults to moving one frame, a
               numeric argument can specify an arbitrary number.
  v         -- Show variables for the current stack frame. Defaults to all
               arguments and local variables in scope. Names of argument,
               local, file static and file global variables can be specified.
  var       -- Show variables for the current stack frame. Defaults to all
               arguments and local variables in scope. Names of argument,
               local, file static and file global variables can be specified.
  vo        -- Show variables for the current stack frame. Defaults to all
               arguments and local variables in scope. Names of argument,
               local, file static and file global variables can be specified.
  x         -- Read from the memory of the current target process.
For more information on any command, type 'help <command-name>'.
(lldb) [1G[2m(lldb) [0m[8Ginfo b
[0;1;31merror: [0m'info' is not a valid command.
(lldb) [1G[2m(lldb) [0m[8Gb list
Breakpoint 7: no locations (pending).
WARNING:  Unable to resolve breakpoint to any actual locations.
(lldb) [1G[2m(lldb) [0m[8Gbr list
Current breakpoints:
1: name = 'main 17', locations = 0 (pending)

2: name = 'CalculateAverageSalary', locations = 1, resolved = 1, hit count = 6
  2.1: where = program`Department::CalculateAverageSalary(Department::StaffTypes) + 32 at Department.cpp:70:6, address = 0x0000000100002c34, resolved, hit count = 6 

3: file = '/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode/main.cpp', line = 23, exact_match = 0, locations = 1, resolved = 1, hit count = 1
  3.1: where = program`main + 456 at main.cpp:24:6, address = 0x000000010000d2ec, resolved, hit count = 1 

4: file = 'department.cpp', line = 23, exact_match = 0, locations = 0 (pending)

5: file = 'department.cpp', line = 23, exact_match = 0, locations = 0 (pending)

6: name = 'department.cpp:CalculateAverageSalary', locations = 0 (pending)

7: name = 'list', locations = 0 (pending)

(lldb) [1G[2m(lldb) [0m[8Gbr del 1
1 breakpoints deleted; 0 breakpoint locations disabled.
(lldb) [1G[2m(lldb) [0m[8Gbr del 2
1 breakpoints deleted; 0 breakpoint locations disabled.
(lldb) [1G[2m(lldb) [0m[8Gbr del 3
1 breakpoints deleted; 0 breakpoint locations disabled.
(lldb) [1G[2m(lldb) [0m[8Gbr del 4
1 breakpoints deleted; 0 breakpoint locations disabled.
(lldb) [1G[2m(lldb) [0m[8Gbr del 5
1 breakpoints deleted; 0 breakpoint locations disabled.
(lldb) [1G[2m(lldb) [0m[8Gbr del 6
1 breakpoints deleted; 0 breakpoint locations disabled.
(lldb) [1G[2m(lldb) [0m[8Gbr del 7
1 breakpoints deleted; 0 breakpoint locations disabled.
(lldb) [1G[2m(lldb) [0m[8Gb employeeClass.cpp:12
Breakpoint 8: 2 locations.
(lldb) [1G[2m(lldb) [0m[8Grun
Process 6632 launched: '/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode/program' (arm64)
Process 6632 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mbreakpoint 8.2[0m
    frame #0: [33m0x000000010000c244[0m program`Employee::Employee(this=0x000000016fdff0c0, nme="Josh", id=1, jbTtle="Technology Specialist", slry=3000, yr=2015) at [36memployeeClass.cpp[0m:[33m13[0m:[33m76[0m
[33m  [0m 10  	}
[33m  [0m 11  	
[33m  [0m 12  	[35m/* Constructor w/ parameters */[0m
[33m->[0m 13  	Employee::Employee(string nme, [32mint[0m id, string jbTtle, [32mdouble[0m slry, [32mint[0m yr) [4m{[0m
[33m  [0m 14  		name = nme;
[33m  [0m 15  	
[33m  [0m 16  	    [32mif[0m (id > [31m0[0m)
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gframe variable
(Employee *) this = 0x000000016fdff0c0
(std::string) nme = "Josh"
(int) id = 1
(std::string) jbTtle = "Technology Specialist"
(double) slry = 3000
(int) yr = 2015
(lldb) [1G[2m(lldb) [0m[8Gn
Process 6632 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mbreakpoint 8.1[0m
    frame #0: [33m0x000000010000c0bc[0m program`Employee::Employee(this=0x000000016fdff0c0, nme="Josh", id=1, jbTtle="Technology Specialist", slry=3000, yr=2015) at [36memployeeClass.cpp[0m:[33m13[0m:[33m11[0m
[33m  [0m 10  	}
[33m  [0m 11  	
[33m  [0m 12  	[35m/* Constructor w/ parameters */[0m
[33m->[0m 13  	Employee::[4mEmployee[0m(string nme, [32mint[0m id, string jbTtle, [32mdouble[0m slry, [32mint[0m yr) {
[33m  [0m 14  		name = nme;
[33m  [0m 15  	
[33m  [0m 16  	    [32mif[0m (id > [31m0[0m)
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 6632 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x000000010000c0f0[0m program`Employee::Employee(this=0x000000016fdff0c0, nme="Josh", id=1, jbTtle="Technology Specialist", slry=3000, yr=2015) at [36memployeeClass.cpp[0m:[33m14[0m:[33m7[0m
[33m  [0m 11  	
[33m  [0m 12  	[35m/* Constructor w/ parameters */[0m
[33m  [0m 13  	Employee::Employee(string nme, [32mint[0m id, string jbTtle, [32mdouble[0m slry, [32mint[0m yr) {
[33m->[0m 14  		name [4m=[0m nme;
[33m  [0m 15  	
[33m  [0m 16  	    [32mif[0m (id > [31m0[0m)
[33m  [0m 17  	        ID = [31m0[0m;
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 6632 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x000000010000c0f8[0m program`Employee::Employee(this=0x000000016fdff0c0, nme="Josh", id=1, jbTtle="Technology Specialist", slry=3000, yr=2015) at [36memployeeClass.cpp[0m:[33m16[0m:[33m9[0m
[33m  [0m 13  	Employee::Employee(string nme, [32mint[0m id, string jbTtle, [32mdouble[0m slry, [32mint[0m yr) {
[33m  [0m 14  		name = nme;
[33m  [0m 15  	
[33m->[0m 16  	    [32mif[0m ([4mid[0m > [31m0[0m)
[33m  [0m 17  	        ID = [31m0[0m;
[33m  [0m 18  	    [32melse[0m
[33m  [0m 19  	        ID = id;
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 6632 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x000000010000c110[0m program`Employee::Employee(this=0x000000016fdff0c0, nme="Josh", id=1, jbTtle="Technology Specialist", slry=3000, yr=2015) at [36memployeeClass.cpp[0m:[33m17[0m:[33m12[0m
[33m  [0m 14  		name = nme;
[33m  [0m 15  	
[33m  [0m 16  	    [32mif[0m (id > [31m0[0m)
[33m->[0m 17  	        ID [4m=[0m [31m0[0m;
[33m  [0m 18  	    [32melse[0m
[33m  [0m 19  	        ID = id;
[33m  [0m 20  	
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gp ID
(int) $0 = 1876947136
(lldb) [1G[2m(lldb) [0m[8Gp id
error: expression failed to parse:
error: <lldb wrapper prefix>:45:31: no member named 'id' in namespace '$__lldb_local_vars'
    using $__lldb_local_vars::id;
          ~~~~~~~~~~~~~~~~~~~~^
warning: <user expression 1>:1:1: declaration does not declare anything
id
^~
(lldb) [1G[2m(lldb) [0m[8Gp id
error: expression failed to parse:
error: <lldb wrapper prefix>:45:31: no member named 'id' in namespace '$__lldb_local_vars'
    using $__lldb_local_vars::id;
          ~~~~~~~~~~~~~~~~~~~~^
warning: <user expression 2>:1:1: declaration does not declare anything
id
^~
(lldb) [1G[2m(lldb) [0m[8Gi
Commands for accessing information for one or more target modules.

Syntax: target modules <sub-command> ...

The following subcommands are supported:

      add          -- Add a new module to the current target's modules.
      dump         -- Commands for dumping information about one or more target
                      modules.
      list         -- List current executable and dependent shared library
                      images.
      load         -- Set the load addresses for one or more sections in a
                      target module.
      lookup       -- Look up information within executable and dependent
                      shared library images.
      search-paths -- Commands for managing module search paths for a target.
      show-unwind  -- Show synthesized unwind instructions for a function.

For more help on any particular subcommand, type 'help <command> <subcommand>'.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 6632 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x000000010000c16c[0m program`Employee::Employee(this=0x000000016fdff0c0, nme="Josh", id=1, jbTtle="Technology Specialist", slry=3000, yr=2015) at [36memployeeClass.cpp[0m:[33m21[0m:[33m2[0m
[33m  [0m 18  	    [32melse[0m
[33m  [0m 19  	        ID = id;
[33m  [0m 20  	
[33m->[0m 21  		[4mjobTitle[0m = jbTtle;
[33m  [0m 22  	
[33m  [0m 23  		(slry > [31m0[0m) ? salary = slry : salary = [31m0.00[0m;
[33m  [0m 24  		(yr > [31m0[0m) ? HireYear = yr : HireYear = [31m2018[0m;
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn[1G[2m(lldb) [0m[9Gi[1G[2m(lldb) [0m[9Gp id[1G[2m(lldb) [0m[12Gi[K[1G[2m(lldb) [0m[9Gn[1G[2m(lldb) [0m[9G[K[1G[2m(lldb) [0m[8G[1G[2m(lldb) [0m[8Gvim employeeCls[K[1G[2m(lldb) [0m[22Gass.cpp
[0;1;31merror: [0m'vim' is not a valid command.
(lldb) [1G[2m(lldb) [0m[8Gvim employeeClass.cpp[1G[2m(lldb) [0m[29G[8Gn[K[1G[2m(lldb) [0m[9Gi[1G[2m(lldb) [0m[9Gp id[1G[2m(lldb) [0m[12GID[1G[2m(lldb) [0m[12Gn[K[1G[2m(lldb) [0m[9Gframe variable[1G[2m(lldb) [0m[22G[8Grun[K[1G[2m(lldb) [0m[11Gb employeeClass.cpp:12[1G[2m(lldb) [0m[30G[9Gr del 7[K[1G[2m(lldb) [0m[16G6[1G[2m(lldb) [0m[16G5[1G[2m(lldb) [0m[16G4[1G[2m(lldb) [0m[16G3[1G[2m(lldb) [0m[16G2[1G[2m(lldb) [0m[16G1[1G[2m(lldb) [0m[16G[11Glist[K[1G[2m(lldb) [0m[15G[9G[P list[1G[2m(lldb) [0m[14G[8Ginfo b[1G[2m(lldb) [0m[14G[8Ghelp[K[1G[2m(lldb) [0m[12Gc[K[1G[2m(lldb) [0m[9Gn[1G[2m(lldb) [0m[9Gc[1G[2m(lldb) [0m[9Gn[1G[2m(lldb) [0m[9Grun[1G[2m(lldb) [0m[11Gb department.cpp:CalculateAverageSalary[1G[2m(lldb) [0m[47G[25G23[K[1G[2m(lldb) [0m[27G[10G23[K[1G[2m(lldb) [0m[12GCalculateAverageSalary[1G[2m(lldb) [0m[32G[8Grun[K[1G[2m(lldb) [0m[11Gb main 17[1G[2m(lldb) [0m[17G[9Gr 5[K[1G[2m(lldb) [0m[12Gcat Department.cpp[1G[2m(lldb) [0m[26G[8Grun b1[K[1G[2m(lldb) [0m[14G[K[1G[2m(lldb) [0m[11Gls[K[1G[2m(lldb) [0m[10Gb1[1G[2m(lldb) [0m[10Grun[1G[2m(lldb) [0m[11G[1G[2m(lldb) [0m[11G[1G[2m(lldb) [0m[11G[1G[2m(lldb) [0m[11G[1G[2m(lldb) [0m[11G[1G[2m(lldb) [0m[11G[K[1G[2m(lldb) [0m[10G[K[1G[2m(lldb) [0m[9G[K[1G[2m(lldb) [0m[8Gtarget create program
Current executable set to '/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode/program' (arm64).
(lldb) [1G[2m(lldb) [0m[8Grun
Process 6765 launched: '/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode/program' (arm64)
  Here is the List of all the Staff in the R&D Department: 
  ------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

   Josh   0   Technology Specialist   3000.00      2015

   Mary   0         Project Manager   5500.00      2010

   Marc   0    Research Team Leader   8000.00      2007

   Mike   0        Multimedia Prog.   2500.00      2014

  Julie   0     Mainframe Sys.Prog.   2150.00      2013

 Albert   0                OS Prog.   2300.00      2015

   John   0    Senior Software Eng.   4899.00      2011

 Connor   0      Software Developer   1900.00      2017
  Here is the List of all the Staff in the IT Department: 
  ------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

    Roy   0           Network Prog.   1900.00      2016

   Jane   0                  Tester   1500.00      2018

 Removing Mike from the company: Succeeded
 -------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

   Mary   0         Project Manager   5500.00      2010

  Julie   0     Mainframe Sys.Prog.   2150.00      2013

 Connor   0      Software Developer   1900.00      2017

  Here is the List of all the Programmers who know C++ in the R&D Department: 
  ---------------------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

  Julie   0     Mainframe Sys.Prog.   2150.00      2013      Mary         5         C++

 Listing All Project IDs:  5 8
-------------------------
The Highest R&D Employee Salary is: 5500.00
The Highest R&D Programmer Salary is: 2150.00
The Highest R&D Software Architect Salary is: 1900.00

The Average R&D Employee Salary is: 5500
The Average R&D Programmer Salary is: 2150
The Average R&D Software Architect Salary is: 1900

The Average IT Employee Salary is: 0
The Average IT Programmer Salary is: 750
The Average IT Software Architect Salary is: 0

Process 6765 exited with status = 0 (0x00000000) 
(lldb) [1G[2m(lldb) [0m[8Grun[1G[2m(lldb) [0m[11Gtarget create program[1G[2m(lldb) [0m[29G[8Gvim employeeClass.cpp[1G[2m(lldb) [0m[29G[8Gn[K[1G[2m(lldb) [0m[9G[K[1G[2m(lldb) [0m[8Gb employeeClass.cpp:12
Breakpoint 1: 2 locations.
(lldb) [1G[2m(lldb) [0m[8Ggui
[?1049h[1;24r(B[m[4l[?7h[39;49m[?25l[?1h=[39;49m[37m[40m[H[2J[30m[47m| LLDB[35m[47m (F1)[30m[47m | Target[35m[47m (F2)[30m[47m | Process[35m[47m (F3)[30m[47m | Thread[35m[47m (F4)[30m[47m | View[35m[47m (F5)[30m[47m | Help[35m[47m (F6)[30m[47m |[2;1H(0[0;1m[30m[47mlqq(B[0;1m[30m[47m<Sources>(0[0;1m[30m[47mqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqk(0[0m[39;49m[37m[40mlqq(B[39;49m[37m[40m<Threads>(0[0m[39;49m[37m[40mqqqk(B[39;49m[37m[40m[3;1H(0[0m[39;49m[37m[40m(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[3;64H(0[0;1m[30m[47mx(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m (0[0m[39;49m[37m[40m`q(B[39;49m[37m[40m[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[4;1H(0[0m[39;49m[37m[40m(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[4;64H(0[0;1m[30m[47mx(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[5;1H(0[0m[39;49m[37m[40m(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[5;64H(0[0;1m[30m[47mx(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[6;1H(0[0m[39;49m[37m[40m(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[6;64H(0[0;1m[30m[47mx(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[7;1H(0[0m[39;49m[37m[40m(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[7;64H(0[0;1m[30m[47mx(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[8;1H(0[0m[39;49m[37m[40m(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[8;64H(0[0;1m[30m[47mx(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[9;1H(0[0m[39;49m[37m[40m(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[9;64H(0[0;1m[30m[47mx(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[10;1H(0[0m[39;49m[37m[40m(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[10;64H(0[0;1m[30m[47mx(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[11;1H(0[0m[39;49m[37m[40m(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[11;64H(0[0;1m[30m[47mx(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[12;1H(0[0m[39;49m[37m[40m(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[12;64H(0[0;1m[30m[47mx(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[13;1H(0[0m[39;49m[37m[40m(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[13;64H(0[0;1m[30m[47mx(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[14;1H(0[0m[39;49m[37m[40m(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[14;64H(0[0;1m[30m[47mx(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[15;1H(0[0m[39;49m[37m[40m(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[15;64H(0[0;1m[30m[47mx(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[16;1H(0[0m[39;49m[37m[40m(0[0;1m[30m[47mmqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqj(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[17;1H(0[0m[39;49m[37m[40mlqq(B[39;49m[37m[40m<Variables>(0[0m[39;49m[37m[40mqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqkx(B[39;49m[37m[40m[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[18;1H(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[18;64H(0[0m[39;49m[37m[40mxx(B[39;49m[37m[40m[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[19;1H(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[19;64H(0[0m[39;49m[37m[40mxx(B[39;49m[37m[40m[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[20;1H(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[20;64H(0[0m[39;49m[37m[40mxx(B[39;49m[37m[40m[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[21;1H(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[21;64H(0[0m[39;49m[37m[40mxx(B[39;49m[37m[40m[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[22;1H(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[22;64H(0[0m[39;49m[37m[40mxx(B[39;49m[37m[40m[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[23;1H(0[0m[39;49m[37m[40mmqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqjmqqqqqqqqqqqqqqj(B[39;49m[37m[40m[24;1H(0[0m[39;49m[37m[40m(B[0m[30m[47mProcess:  6765     exited with status = 0[K(B[m[39;49m[37m[40m[H
(0[0m[39;49m[37m[40mlqq(B[39;49m[37m[40m<Sources>(0[0m[39;49m[37m[40mqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqk(B[39;49m[37m[40m
(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[3;64H(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m
(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[4;64H(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m
(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[5;64H(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m
(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[6;64H(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m
(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[7;64H(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m
(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[8;64H(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m
(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[9;64H(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m
(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[10;64H(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m
(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[11;64H(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m
(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[12;64H(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m
(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[13;64H(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m
(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[14;64H(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m
(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[15;64H(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m
(0[0m[39;49m[37m[40mmqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqj(B[39;49m[37m[40m
(0[0m[39;49m[37m[40m(0[0;1m[30m[47mlqq(B[0;1m[30m[47m<Variables>(0[0;1m[30m[47mqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqk(B(B[m[39;49m[37m[40m
(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[18;64H(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m
(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[19;64H(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m
(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[20;64H(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m
(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[21;64H(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m
(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[22;64H(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m
(0[0;1m[30m[47mmqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqj(B(B[m[39;49m[37m[40m[24;42H(0[0;1m[30m[47m(B(B[m[39;49m[37m[40m[H[2;65H(0[0;1m[30m[47mlqq(B[0;1m[30m[47m<Threads>(0[0;1m[30m[47mqqqk(B(B[m[39;49m[37m[40m[3;65H(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[80G(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[4;65H(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[80G(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[5;65H(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[80G(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[6;65H(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[80G(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[7;65H(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[80G(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[8;65H(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[80G(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[9;65H(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[80G(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[10;65H(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[80G(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[11;65H(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[80G(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[12;65H(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[80G(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[13;65H(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[80G(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[14;65H(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[80G(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[15;65H(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[80G(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[16;65H(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[80G(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[17;1H(0[0;1m[30m[47m(0[0m[39;49m[37m[40mlqq(B[39;49m[37m[40m<Variables>(0[0m[39;49m[37m[40mqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqk(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[80G(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[18;1H(0[0;1m[30m[47m(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[18;64H(0[0m[39;49m[37m[40mx(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[80G(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[19;1H(0[0;1m[30m[47m(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[19;64H(0[0m[39;49m[37m[40mx(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[80G(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[20;1H(0[0;1m[30m[47m(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[20;64H(0[0m[39;49m[37m[40mx(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[80G(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[21;1H(0[0;1m[30m[47m(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[21;64H(0[0m[39;49m[37m[40mx(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[80G(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[22;1H(0[0;1m[30m[47m(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[22;64H(0[0m[39;49m[37m[40mx(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[80G(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[23;1H(0[0;1m[30m[47m(0[0m[39;49m[37m[40mmqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqj(0[0;1m[30m[47mmqqqqqqqqqqqqqqj(B(B[m[39;49m[37m[40m[24;42H(0[0;1m[30m[47m(B(B[m[39;49m[37m[40m[H
(0[0;1m[30m[47mlqq(B[0;1m[30m[47m<Sources>(0[0;1m[30m[47mqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqk(0[0m[39;49m[37m[40mlqq(B[39;49m[37m[40m<Threads>(0[0m[39;49m[37m[40mqqqk(B[39;49m[37m[40m[3;1H(0[0m[39;49m[37m[40m(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[3;64H(0[0;1m[30m[47mx(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[4;1H(0[0m[39;49m[37m[40m(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[4;64H(0[0;1m[30m[47mx(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[5;1H(0[0m[39;49m[37m[40m(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[5;64H(0[0;1m[30m[47mx(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[6;1H(0[0m[39;49m[37m[40m(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[6;64H(0[0;1m[30m[47mx(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[7;1H(0[0m[39;49m[37m[40m(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[7;64H(0[0;1m[30m[47mx(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[8;1H(0[0m[39;49m[37m[40m(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[8;64H(0[0;1m[30m[47mx(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[9;1H(0[0m[39;49m[37m[40m(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[9;64H(0[0;1m[30m[47mx(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[10;1H(0[0m[39;49m[37m[40m(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[10;64H(0[0;1m[30m[47mx(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[11;1H(0[0m[39;49m[37m[40m(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[11;64H(0[0;1m[30m[47mx(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[12;1H(0[0m[39;49m[37m[40m(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[12;64H(0[0;1m[30m[47mx(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[13;1H(0[0m[39;49m[37m[40m(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[13;64H(0[0;1m[30m[47mx(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[14;1H(0[0m[39;49m[37m[40m(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[14;64H(0[0;1m[30m[47mx(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[15;1H(0[0m[39;49m[37m[40m(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[15;64H(0[0;1m[30m[47mx(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[16;1H(0[0m[39;49m[37m[40m(0[0;1m[30m[47mmqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqj(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[17;65H(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[18;65H(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[19;65H(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[20;65H(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[21;65H(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[22;65H(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[23;65H(0[0m[39;49m[37m[40mmqqqqqqqqqqqqqqj(B[39;49m[37m[40m[24;42H(0[0m[39;49m[37m[40m(B[39;49m[37m[40m[H[24;42H[H[24;42H[H[24;42H[H[24;42H[H[24;42H[H[24;42H[H[24;42H[H[24;42H[H[24;42H[H[24;42H[H[24;42H[H[24;42H[H[24;42H[H[24;42H[H[24;42H[H[24;42H[H[24;42H[H[24;42H[H[24;42H[H[24;42H[H[24;42H[H[24;42H[H[24;42H[H[24;42H[H[24;42H[H[24;42H[H[24;42H[H[24;42H[H[24;42H[H[24;42H[H[24;42H[H[24;42H[H[24;42H[H[24;42H[H[24;42H[H[24;42H[H[24;42H[H[24;42H[H
(0[0m[39;49m[37m[40mlqq(B[39;49m[37m[40m<Sources>(0[0m[30m[47mlqqqqqqqqqqqqk[39;49m[37m[40mqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqk(B[39;49m[37m[40m
(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[3;13H(0[0m[39;49m[37m[40m[30m[47mx(B[0m[30m[47m  (B[0;1;4;7m[30m[47mC(B[0;7m[30m[47mreate(B[0m[30m[47m    (0[0m[30m[47mx(B(B[m[39;49m[37m[40m[3;64H(0[0m[30m[47m[39;49m[37m[40mx(B[39;49m[37m[40m
(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[4;13H(0[0m[39;49m[37m[40m[30m[47mx(B[0m[30m[47m  (B[0;1;4m[30m[47mD(B[0m[30m[47melete    (0[0m[30m[47mx(B(B[m[39;49m[37m[40m[4;64H(0[0m[30m[47m[39;49m[37m[40mx(B[39;49m[37m[40m
(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[5;13H(0[0m[39;49m[37m[40m[30m[47mmqqqqqqqqqqqqj(B(B[m[39;49m[37m[40m[5;64H(0[0m[30m[47m[39;49m[37m[40mx(B[39;49m[37m[40m
(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[6;64H(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m
(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[7;64H(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m
(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[8;64H(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m
(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[9;64H(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m
(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[10;64H(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m
(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[11;64H(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m
(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[12;64H(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m
(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[13;64H(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m
(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[14;64H(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m
(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[15;64H(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m
(0[0m[39;49m[37m[40mmqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqj(B[39;49m[37m[40m[3;15H(0[0m[39;49m[37m[40m(B[39;49m[37m[40m[H[2;13H(0[0m[39;49m[37m[40mqqqqqqqqqqqqqq(B[39;49m[37m[40m
(0[0m[39;49m[37m[40m(0[0;1m[30m[47mlqq(B[0;1m[30m[47m<Create Target>(0[0;1m[30m[47mqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqk(B(B[m[39;49m[37m[40m[4;1H(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[4;13H(0[0;1m[30m[47m(B(B[m[39;49m[37m[40m[14X[4;64H  [80G(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[5;1H(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m (0[0m[39;49m[37m[40mlq(B[39;49m[37m[40m[Executable](0[0m[39;49m[37m[40mqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqk(B[39;49m[37m[40m (0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[6;1H(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m (0[0m[39;49m[37m[40mx(B[0;7m[39;49m[37m[40m [6;64H(B[m[39;49m[37m[40m  [78G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m (0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[7;1H(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m (0[0m[39;49m[37m[40mmqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqj(B[39;49m[37m[40m (0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[8;1H(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m (0[0m[39;49m[37m[40mlq(B[39;49m[37m[40m[Core File](0[0m[39;49m[37m[40mqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqk(B[39;49m[37m[40m (0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[9;1H(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m (0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[9;64H(0[0m[39;49m[37m[40m(B[39;49m[37m[40m  [78G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m (0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[10;1H(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m (0[0m[39;49m[37m[40mmqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqj(B[39;49m[37m[40m (0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[11;1H(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m (0[0m[39;49m[37m[40mlq(B[39;49m[37m[40m[Symbol File](0[0m[39;49m[37m[40mqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqk(B[39;49m[37m[40m (0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[12;1H(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m (0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[12;64H(0[0m[39;49m[37m[40m(B[39;49m[37m[40m  [78G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m (0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[13;1H(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m (0[0m[39;49m[37m[40mmqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqj(B[39;49m[37m[40m (0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[14;1H(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m [ ] Show advanced settings.[14;64H  [80G(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[15;1H(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[15;38H(0[0;1m[30m[47m(B(B[m[39;49m[37m[40m[Create][15;64H  [80G(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[16;1H(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[64X[80G(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[17;1H(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[64X[80G(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[18;1H(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[18;64H(0[0;1m[30m[47m(B(B[m[39;49m[37m[40m  [80G(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[19;1H(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[19;64H(0[0;1m[30m[47m(B(B[m[39;49m[37m[40m  [80G(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[20;1H(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[20;64H(0[0;1m[30m[47m(B(B[m[39;49m[37m[40m  [80G(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[21;1H(0[0;1m[30m[47mmq(B[0;1m[30m[47m[Press Alt+Enter to Create](0[0;1m[30m[47mqqqqqqqqqqqqqqqqqqqqqqqqqqq(B[0;1m[30m[47m[Press Esc to Cancel](0[0;1m[30m[47mqqj(B(B[m[39;49m[37m[40m[21;30H(0[0;1m[30m[47m(B(B[m[39;49m[37m[40m[H[8;20r[8;1HM[1;24r[6;4H 

(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m (0[0m[31m[40m`(B[0m[31m[40m This field is required![80G(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[10;4H(0[0;1m[30m[47m(B[0;7m[39;49m[37m[40m [21;30H(B[m[39;49m[37m[40m[H[10;4H 


(B[0;7m[39;49m[37m[40m [21;30H(B[m[39;49m[37m[40m[H[13;4H 

(B[0;7m[39;49m[37m[40m [21;30H(B[m[39;49m[37m[40m[H[15;4H [16;38H(B[0;7m[39;49m[37m[40m[Create][21;30H(B[m[39;49m[37m[40m[H[6;4H(B[0;7m[39;49m[37m[40m [16;38H(B[m[39;49m[37m[40m[Create][21;30H[H[6;4H 



(B[0;7m[39;49m[37m[40m [21;30H(B[m[39;49m[37m[40m[H[10;4H 


(B[0;7m[39;49m[37m[40m [21;30H(B[m[39;49m[37m[40m[H[13;4H 

(B[0;7m[39;49m[37m[40m [21;30H(B[m[39;49m[37m[40m[H[15;4H [16;38H(B[0;7m[39;49m[37m[40m[Create][21;30H(B[m[39;49m[37m[40m[H[6;4H(B[0;7m[39;49m[37m[40m [16;38H(B[m[39;49m[37m[40m[Create][21;30H[H[6;4H 



(B[0;7m[39;49m[37m[40m [21;30H(B[m[39;49m[37m[40m[H[10;4H 


(B[0;7m[39;49m[37m[40m [21;30H(B[m[39;49m[37m[40m[H[13;4H 

(B[0;7m[39;49m[37m[40m [21;30H(B[m[39;49m[37m[40m[H[15;4H [16;38H(B[0;7m[39;49m[37m[40m[Create][21;30H(B[m[39;49m[37m[40m[H[6;4H(B[0;7m[39;49m[37m[40m [16;38H(B[m[39;49m[37m[40m[Create][21;30H[H[6;4H 



(B[0;7m[39;49m[37m[40m [21;30H(B[m[39;49m[37m[40m[H[6;4H(B[0;7m[39;49m[37m[40m 



(B[m[39;49m[37m[40m [21;30H[H[6;4H [16;38H(B[0;7m[39;49m[37m[40m[Create][21;30H(B[m[39;49m[37m[40m[H[15;4H(B[0;7m[39;49m[37m[40m [16;38H(B[m[39;49m[37m[40m[Create][21;30H[H[13;4H(B[0;7m[39;49m[37m[40m 

(B[m[39;49m[37m[40m [21;30H[H[10;4H(B[0;7m[39;49m[37m[40m 


(B[m[39;49m[37m[40m [21;30H[H[6;4H(B[0;7m[39;49m[37m[40m 



(B[m[39;49m[37m[40m [21;30H[H
(0[0;1m[30m[47mlqq(B[0;1m[30m[47m<Sources>(0[0;1m[30m[47mqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqk(B(B[m[39;49m[37m[40m
(0[0;1m[30m[47mx(B(B[m[39;49m[37m[40m[62X[3;64H(0[0;1m[30m[47mx(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m (0[0m[39;49m[37m[40m`q(B[39;49m[37m[40m           (0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[4;64H(0[0m[39;49m[37m[40m(0[0;1m[30m[47mx(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[5;3H(0[0m[39;49m[37m[40m(B[39;49m[37m[40m[61X[5;64H(0[0;1m[30m[47mx(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[14X[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[6;3H(0[0m[39;49m[37m[40m(B[39;49m[37m[40m  [6;64H(0[0;1m[30m[47mx(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[78G(0[0m[39;49m[37m[40m(B[39;49m[37m[40m  (0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[7;3H(0[0m[39;49m[37m[40m(B[39;49m[37m[40m[61X[7;64H(0[0;1m[30m[47mx(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[14X[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[8;3H(0[0m[39;49m[37m[40m(B[39;49m[37m[40m[25X[8;64H(0[0;1m[30m[47mx(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[9;3H(0[0m[39;49m[37m[40m(B[39;49m[37m[40m[61X[9;64H(0[0;1m[30m[47mx(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[14X[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[10;3H(0[0m[39;49m[37m[40m(B[39;49m[37m[40m [10;64H(0[0;1m[30m[47mx(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[78G(0[0m[39;49m[37m[40m(B[39;49m[37m[40m  (0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[11;3H(0[0m[39;49m[37m[40m(B[39;49m[37m[40m[61X[11;64H(0[0;1m[30m[47mx(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[14X[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[12;3H(0[0m[39;49m[37m[40m(B[39;49m[37m[40m[61X[12;64H(0[0;1m[30m[47mx(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[14X[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[13;3H(0[0m[39;49m[37m[40m(B[39;49m[37m[40m [13;64H(0[0;1m[30m[47mx(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[78G(0[0m[39;49m[37m[40m(B[39;49m[37m[40m  (0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[14;3H(0[0m[39;49m[37m[40m(B[39;49m[37m[40m[61X[14;64H(0[0;1m[30m[47mx(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[14X[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[15;3H(0[0m[39;49m[37m[40m(B[39;49m[37m[40m[27X[15;64H(0[0;1m[30m[47mx(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[16;1H(0[0m[39;49m[37m[40m(0[0;1m[30m[47mmqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqj(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[17;1H(0[0m[39;49m[37m[40mlqq(B[39;49m[37m[40m<Variables>(0[0m[39;49m[37m[40mqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqkx(B[39;49m[37m[40m[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[18;1H(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[18;64H(0[0m[39;49m[37m[40mxx(B[39;49m[37m[40m[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[19;1H(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[19;64H(0[0m[39;49m[37m[40mxx(B[39;49m[37m[40m[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[20;1H(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[20;64H(0[0m[39;49m[37m[40mxx(B[39;49m[37m[40m[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[21;1H(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[62X[21;64H(0[0m[39;49m[37m[40mxx(B[39;49m[37m[40m[14X[80G(0[0m[39;49m[37m[40mx(B[39;49m[37m[40m[2;13H(0[0m[39;49m[37m[40m(B[39;49m[37m[40m[H[39;49m[24d[K[24;1H[?12l[?25h[?1049l[?1l>(lldb) [1G[2m(lldb) [0m[8Grun
Process 6877 launched: '/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode/program' (arm64)
Process 6877 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mbreakpoint 1.2[0m
    frame #0: [33m0x000000010000c244[0m program`Employee::Employee(this=0x000000016fdff0d0, nme="Josh", id=1, jbTtle="Technology Specialist", slry=3000, yr=2015) at [36memployeeClass.cpp[0m:[33m13[0m:[33m76[0m
[33m  [0m 10  	}
[33m  [0m 11  	
[33m  [0m 12  	[35m/* Constructor w/ parameters */[0m
[33m->[0m 13  	Employee::Employee(string nme, [32mint[0m id, string jbTtle, [32mdouble[0m slry, [32mint[0m yr) [4m{[0m
[33m  [0m 14  		name = nme;
[33m  [0m 15  	
[33m  [0m 16  	    [32mif[0m (id > [31m0[0m)
Target 1: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gframe variable
(Employee *) this = 0x000000016fdff0d0
(std::string) nme = "Josh"
(int) id = 1
(std::string) jbTtle = "Technology Specialist"
(double) slry = 3000
(int) yr = 2015
(lldb) [1G[2m(lldb) [0m[8Gn
Process 6877 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mbreakpoint 1.1[0m
    frame #0: [33m0x000000010000c0bc[0m program`Employee::Employee(this=0x000000016fdff0d0, nme="Josh", id=1, jbTtle="Technology Specialist", slry=3000, yr=2015) at [36memployeeClass.cpp[0m:[33m13[0m:[33m11[0m
[33m  [0m 10  	}
[33m  [0m 11  	
[33m  [0m 12  	[35m/* Constructor w/ parameters */[0m
[33m->[0m 13  	Employee::[4mEmployee[0m(string nme, [32mint[0m id, string jbTtle, [32mdouble[0m slry, [32mint[0m yr) {
[33m  [0m 14  		name = nme;
[33m  [0m 15  	
[33m  [0m 16  	    [32mif[0m (id > [31m0[0m)
Target 1: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 6877 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x000000010000c0f0[0m program`Employee::Employee(this=0x000000016fdff0d0, nme="Josh", id=1, jbTtle="Technology Specialist", slry=3000, yr=2015) at [36memployeeClass.cpp[0m:[33m14[0m:[33m7[0m
[33m  [0m 11  	
[33m  [0m 12  	[35m/* Constructor w/ parameters */[0m
[33m  [0m 13  	Employee::Employee(string nme, [32mint[0m id, string jbTtle, [32mdouble[0m slry, [32mint[0m yr) {
[33m->[0m 14  		name [4m=[0m nme;
[33m  [0m 15  	
[33m  [0m 16  	    [32mif[0m (id > [31m0[0m)
[33m  [0m 17  	        ID = [31m0[0m;
Target 1: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 6877 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x000000010000c0f8[0m program`Employee::Employee(this=0x000000016fdff0d0, nme="Josh", id=1, jbTtle="Technology Specialist", slry=3000, yr=2015) at [36memployeeClass.cpp[0m:[33m16[0m:[33m9[0m
[33m  [0m 13  	Employee::Employee(string nme, [32mint[0m id, string jbTtle, [32mdouble[0m slry, [32mint[0m yr) {
[33m  [0m 14  		name = nme;
[33m  [0m 15  	
[33m->[0m 16  	    [32mif[0m ([4mid[0m > [31m0[0m)
[33m  [0m 17  	        ID = [31m0[0m;
[33m  [0m 18  	    [32melse[0m
[33m  [0m 19  	        ID = id;
Target 1: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gp ID
(int) $0 = 1876947152
(lldb) [1G[2m(lldb) [0m[8Gp id
error: expression failed to parse:
error: <lldb wrapper prefix>:45:31: no member named 'id' in namespace '$__lldb_local_vars'
    using $__lldb_local_vars::id;
          ~~~~~~~~~~~~~~~~~~~~^
warning: <user expression 1>:1:1: declaration does not declare anything
id
^~
(lldb) [1G[2m(lldb) [0m[8Gn
Process 6877 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x000000010000c110[0m program`Employee::Employee(this=0x000000016fdff0d0, nme="Josh", id=1, jbTtle="Technology Specialist", slry=3000, yr=2015) at [36memployeeClass.cpp[0m:[33m17[0m:[33m12[0m
[33m  [0m 14  		name = nme;
[33m  [0m 15  	
[33m  [0m 16  	    [32mif[0m (id > [31m0[0m)
[33m->[0m 17  	        ID [4m=[0m [31m0[0m;
[33m  [0m 18  	    [32melse[0m
[33m  [0m 19  	        ID = id;
[33m  [0m 20  	
Target 1: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 6877 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x000000010000c16c[0m program`Employee::Employee(this=0x000000016fdff0d0, nme="Josh", id=1, jbTtle="Technology Specialist", slry=3000, yr=2015) at [36memployeeClass.cpp[0m:[33m21[0m:[33m2[0m
[33m  [0m 18  	    [32melse[0m
[33m  [0m 19  	        ID = id;
[33m  [0m 20  	
[33m->[0m 21  		[4mjobTitle[0m = jbTtle;
[33m  [0m 22  	
[33m  [0m 23  		(slry > [31m0[0m) ? salary = slry : salary = [31m0.00[0m;
[33m  [0m 24  		(yr > [31m0[0m) ? HireYear = yr : HireYear = [31m2018[0m;
Target 1: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gpid[K[1G[2m(lldb) [0m[10G[K[1G[2m(lldb) [0m[9G id
error: expression failed to parse:
error: <lldb wrapper prefix>:45:31: no member named 'id' in namespace '$__lldb_local_vars'
    using $__lldb_local_vars::id;
          ~~~~~~~~~~~~~~~~~~~~^
warning: <user expression 2>:1:1: declaration does not declare anything
id
^~
(lldb) [1G[2m(lldb) [0m[8Gp id[1G[2m(lldb) [0m[12Gn[K[1G[2m(lldb) [0m[9Gp id[1G[2m(lldb) [0m[12GID[1G[2m(lldb) [0m[12Gn[K[1G[2m(lldb) [0m[9Gframe variable[1G[2m(lldb) [0m[22G[8Grun[K[1G[2m(lldb) [0m[11Ggui[1G[2m(lldb) [0m[11Gb employeeClass.cpp:12[1G[2m(lldb) [0m[30G[8Grun[K[1G[2m(lldb) [0m[11Gtarget create program[1G[2m(lldb) [0m[29G
Current executable set to '/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode/program' (arm64).
(lldb) [1G[2m(lldb) [0m[8Grun
Process 6940 launched: '/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode/program' (arm64)
  Here is the List of all the Staff in the R&D Department: 
  ------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

   Josh   0   Technology Specialist   3000.00      2015

   Mary   0         Project Manager   5500.00      2010

   Marc   0    Research Team Leader   8000.00      2007

   Mike   0        Multimedia Prog.   2500.00      2014

  Julie   0     Mainframe Sys.Prog.   2150.00      2013

 Albert   0                OS Prog.   2300.00      2015

   John   0    Senior Software Eng.   4899.00      2011

 Connor   0      Software Developer   1900.00      2017
  Here is the List of all the Staff in the IT Department: 
  ------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

    Roy   0           Network Prog.   1900.00      2016

   Jane   0                  Tester   1500.00      2018

 Removing Mike from the company: Succeeded
 -------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

   Mary   0         Project Manager   5500.00      2010

  Julie   0     Mainframe Sys.Prog.   2150.00      2013

 Connor   0      Software Developer   1900.00      2017

  Here is the List of all the Programmers who know C++ in the R&D Department: 
  ---------------------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

  Julie   0     Mainframe Sys.Prog.   2150.00      2013      Mary         5         C++

 Listing All Project IDs:  5 8
-------------------------
The Highest R&D Employee Salary is: 5500.00
The Highest R&D Programmer Salary is: 2150.00
The Highest R&D Software Architect Salary is: 1900.00

The Average R&D Employee Salary is: 5500
The Average R&D Programmer Salary is: 2150
The Average R&D Software Architect Salary is: 1900

The Average IT Employee Salary is: 0
The Average IT Programmer Salary is: 750
The Average IT Software Architect Salary is: 0

Process 6940 exited with status = 0 (0x00000000) 
(lldb) [1G[2m(lldb) [0m[8Grun
Process 6957 launched: '/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode/program' (arm64)
  Here is the List of all the Staff in the R&D Department: 
  ------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

   Josh   0   Technology Specialist   3000.00      2015

   Mary   0         Project Manager   5500.00      2010

   Marc   0    Research Team Leader   8000.00      2007

   Mike   0        Multimedia Prog.   2500.00      2014

  Julie   0     Mainframe Sys.Prog.   2150.00      2013

 Albert   0                OS Prog.   2300.00      2015

   John   0    Senior Software Eng.   4899.00      2011

 Connor   0      Software Developer   1900.00      2017
  Here is the List of all the Staff in the IT Department: 
  ------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

    Roy   0           Network Prog.   1900.00      2016

   Jane   0                  Tester   1500.00      2018

 Removing Mike from the company: Succeeded
 -------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

   Mary   0         Project Manager   5500.00      2010

  Julie   0     Mainframe Sys.Prog.   2150.00      2013

 Connor   0      Software Developer   1900.00      2017

  Here is the List of all the Programmers who know C++ in the R&D Department: 
  ---------------------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

  Julie   0     Mainframe Sys.Prog.   2150.00      2013      Mary         5         C++

 Listing All Project IDs:  5 8
-------------------------
The Highest R&D Employee Salary is: 5500.00
The Highest R&D Programmer Salary is: 2150.00
The Highest R&D Software Architect Salary is: 1900.00

The Average R&D Employee Salary is: 5500
The Average R&D Programmer Salary is: 2150
The Average R&D Software Architect Salary is: 1900

The Average IT Employee Salary is: 0
The Average IT Programmer Salary is: 750
The Average IT Software Architect Salary is: 0

Process 6957 exited with status = 0 (0x00000000) 
(lldb) [1G[2m(lldb) [0m[8Gb employeeClass.cpp:12
Breakpoint 1: 2 locations.
(lldb) [1G[2m(lldb) [0m[8Grun
Process 6980 launched: '/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode/program' (arm64)
Process 6980 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mbreakpoint 1.2[0m
    frame #0: [33m0x000000010000c244[0m program`Employee::Employee(this=0x000000016fdff0d0, nme="Josh", id=1, jbTtle="Technology Specialist", slry=3000, yr=2015) at [36memployeeClass.cpp[0m:[33m13[0m:[33m76[0m
[33m  [0m 10  	}
[33m  [0m 11  	
[33m  [0m 12  	[35m/* Constructor w/ parameters */[0m
[33m->[0m 13  	Employee::Employee(string nme, [32mint[0m id, string jbTtle, [32mdouble[0m slry, [32mint[0m yr) [4m{[0m
[33m  [0m 14  		name = nme;
[33m  [0m 15  	
[33m  [0m 16  	    [32mif[0m (id < [31m0[0m)
Target 2: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 6980 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mbreakpoint 1.1[0m
    frame #0: [33m0x000000010000c0bc[0m program`Employee::Employee(this=0x000000016fdff0d0, nme="Josh", id=1, jbTtle="Technology Specialist", slry=3000, yr=2015) at [36memployeeClass.cpp[0m:[33m13[0m:[33m11[0m
[33m  [0m 10  	}
[33m  [0m 11  	
[33m  [0m 12  	[35m/* Constructor w/ parameters */[0m
[33m->[0m 13  	Employee::[4mEmployee[0m(string nme, [32mint[0m id, string jbTtle, [32mdouble[0m slry, [32mint[0m yr) {
[33m  [0m 14  		name = nme;
[33m  [0m 15  	
[33m  [0m 16  	    [32mif[0m (id < [31m0[0m)
Target 2: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 6980 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x000000010000c0f0[0m program`Employee::Employee(this=0x000000016fdff0d0, nme="Josh", id=1, jbTtle="Technology Specialist", slry=3000, yr=2015) at [36memployeeClass.cpp[0m:[33m14[0m:[33m7[0m
[33m  [0m 11  	
[33m  [0m 12  	[35m/* Constructor w/ parameters */[0m
[33m  [0m 13  	Employee::Employee(string nme, [32mint[0m id, string jbTtle, [32mdouble[0m slry, [32mint[0m yr) {
[33m->[0m 14  		name [4m=[0m nme;
[33m  [0m 15  	
[33m  [0m 16  	    [32mif[0m (id < [31m0[0m)
[33m  [0m 17  	        ID = [31m0[0m;
Target 2: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 6980 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x000000010000c0f8[0m program`Employee::Employee(this=0x000000016fdff0d0, nme="Josh", id=1, jbTtle="Technology Specialist", slry=3000, yr=2015) at [36memployeeClass.cpp[0m:[33m16[0m:[33m9[0m
[33m  [0m 13  	Employee::Employee(string nme, [32mint[0m id, string jbTtle, [32mdouble[0m slry, [32mint[0m yr) {
[33m  [0m 14  		name = nme;
[33m  [0m 15  	
[33m->[0m 16  	    [32mif[0m ([4mid[0m < [31m0[0m)
[33m  [0m 17  	        ID = [31m0[0m;
[33m  [0m 18  	    [32melse[0m
[33m  [0m 19  	        ID = id;
Target 2: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 6980 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x000000010000c110[0m program`Employee::Employee(this=0x000000016fdff0d0, nme="Josh", id=1, jbTtle="Technology Specialist", slry=3000, yr=2015) at [36memployeeClass.cpp[0m:[33m17[0m:[33m12[0m
[33m  [0m 14  		name = nme;
[33m  [0m 15  	
[33m  [0m 16  	    [32mif[0m (id < [31m0[0m)
[33m->[0m 17  	        ID [4m=[0m [31m0[0m;
[33m  [0m 18  	    [32melse[0m
[33m  [0m 19  	        ID = id;
[33m  [0m 20  	
Target 2: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 6980 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x000000010000c16c[0m program`Employee::Employee(this=0x000000016fdff0d0, nme="Josh", id=1, jbTtle="Technology Specialist", slry=3000, yr=2015) at [36memployeeClass.cpp[0m:[33m21[0m:[33m2[0m
[33m  [0m 18  	    [32melse[0m
[33m  [0m 19  	        ID = id;
[33m  [0m 20  	
[33m->[0m 21  		[4mjobTitle[0m = jbTtle;
[33m  [0m 22  	
[33m  [0m 23  		(slry > [31m0[0m) ? salary = slry : salary = [31m0.00[0m;
[33m  [0m 24  		(yr > [31m0[0m) ? HireYear = yr : HireYear = [31m2018[0m;
Target 2: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 6980 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x000000010000c178[0m program`Employee::Employee(this=0x000000016fdff0d0, nme="Josh", id=1, jbTtle="Technology Specialist", slry=3000, yr=2015) at [36memployeeClass.cpp[0m:[33m23[0m:[33m3[0m
[33m  [0m 20  	
[33m  [0m 21  		jobTitle = jbTtle;
[33m  [0m 22  	
[33m->[0m 23  		([4mslry[0m > [31m0[0m) ? salary = slry : salary = [31m0.00[0m;
[33m  [0m 24  		(yr > [31m0[0m) ? HireYear = yr : HireYear = [31m2018[0m;
[33m  [0m 25  	
[33m  [0m 26  	}
Target 2: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn[K[1G[2m(lldb) [0m[8Gexit
Quitting LLDB will kill one or more processes. Do you really want to proceed: [Y /n] y[KY
[1m[7m%[27m[1m[0m                                                                                ]7;file://corinnes-mbp.lan/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode[0m[27m[24m[Jcorinnejones@corinnes-mbp buggyCode % [K[?2004hlldb program[12Dclang++ *.cpp -g -O0  -o program[?2004l
[1m[7m%[27m[1m[0m                                                                                ]7;file://corinnes-mbp.lan/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode[0m[27m[24m[Jcorinnejones@corinnes-mbp buggyCode % [K[?2004hclang++ *.cpp -g -O0  -o program[32Dlldb program        [2C          [20D[?2004l
(lldb) target create "program"
[2mLocating external symbol file for program...[0m[K[2K[2mLoading Apple DWARF index for program...[0m[K[2K[2mLocating external symbol file for dyld...[0m[K[2K[2mParsing symbol table for dyld...[0m[K[2K[2mLocating external symbol file for libc++.1.dylib...[0m[K[2K[2mParsing symbol table for libc++.1.dylib...[0m[K[2K[2mLocating external symbol file for libSystem.B.dylib...[0m[K[2K[2mParsing symbol table for libSystem.B.dylib...[0m[K[2K[2mLocating external symbol file for libc++abi.dylib...[0m[K[2K[2mParsing symbol table for libc++abi.dylib...[0m[K[2K[2mLocating external symbol file for libcache.dylib...[0m[K[2K[2mParsing symbol table for libcache.dylib...[0m[K[2K[2mLocating external symbol file for libcommonCrypto.dylib...[0m[K[2K[2mParsing symbol table for libcommonCrypto.dylib...[0m[K[2K[2mLocating external symbol file for libcompiler_rt.dylib...[0m[K[2K[2mParsing symbol table for libcompiler_rt.dylib...[0m[K[2K[2mLocating external symbol file for libcopyfile.dylib...[0m[K[2K[2mParsing symbol table for libcopyfile.dylib...[0m[K[2K[2mLocating external symbol file for libcorecrypto.dylib...[0m[K[2K[2mParsing symbol table for libcorecrypto.dylib...[0m[K[2K[2mLocating external symbol file for libdispatch.dylib...[0m[K[2K[2mParsing symbol table for libdispatch.dylib...[0m[K[2K[2mLocating external symbol file for libdyld.dylib...[0m[K[2K[2mParsing symbol table for libdyld.dylib...[0m[K[2K[2mLocating external symbol file for libkeymgr.dylib...[0m[K[2K[2mParsing symbol table for libkeymgr.dylib...[0m[K[2K[2mLocating external symbol file for libmacho.dylib...[0m[K[2K[2mParsing symbol table for libmacho.dylib...[0m[K[2K[2mLocating external symbol file for libquarantine.dylib...[0m[K[2K[2mParsing symbol table for libquarantine.dylib...[0m[K[2K[2mLocating external symbol file for libremovefile.dylib...[0m[K[2K[2mParsing symbol table for libremovefile.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_asl.dylib...[0m[K[2K[2mParsing symbol table for libsystem_asl.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_blocks.dylib...[0m[K[2K[2mParsing symbol table for libsystem_blocks.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_c.dylib...[0m[K[2K[2mParsing symbol table for libsystem_c.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_collections.dylib...[0m[K[2K[2mParsing symbol table for libsystem_collections.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_configuration.dylib...[0m[K[2K[2mParsing symbol table for libsystem_configuration.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_containermanager.dylib...[0m[K[2K[2mParsing symbol table for libsystem_containermanager.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_coreservices.dylib...[0m[K[2K[2mParsing symbol table for libsystem_coreservices.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_darwin.dylib...[0m[K[2K[2mParsing symbol table for libsystem_darwin.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_dnssd.dylib...[0m[K[2K[2mParsing symbol table for libsystem_dnssd.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_featureflags.dylib...[0m[K[2K[2mParsing symbol table for libsystem_featureflags.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_info.dylib...[0m[K[2K[2mParsing symbol table for libsystem_info.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_m.dylib...[0m[K[2K[2mParsing symbol table for libsystem_m.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_malloc.dylib...[0m[K[2K[2mParsing symbol table for libsystem_malloc.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_networkextension.dylib...[0m[K[2K[2mParsing symbol table for libsystem_networkextension.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_notify.dylib...[0m[K[2K[2mParsing symbol table for libsystem_notify.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_sandbox.dylib...[0m[K[2K[2mParsing symbol table for libsystem_sandbox.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_secinit.dylib...[0m[K[2K[2mParsing symbol table for libsystem_secinit.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_kernel.dylib...[0m[K[2K[2mParsing symbol table for libsystem_kernel.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_platform.dylib...[0m[K[2K[2mParsing symbol table for libsystem_platform.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_pthread.dylib...[0m[K[2K[2mParsing symbol table for libsystem_pthread.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_symptoms.dylib...[0m[K[2K[2mParsing symbol table for libsystem_symptoms.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_trace.dylib...[0m[K[2K[2mParsing symbol table for libsystem_trace.dylib...[0m[K[2K[2mLocating external symbol file for libunwind.dylib...[0m[K[2K[2mParsing symbol table for libunwind.dylib...[0m[K[2K[2mLocating external symbol file for libxpc.dylib...[0m[K[2K[2mParsing symbol table for libxpc.dylib...[0m[K[2K[2mLocating external symbol file for libobjc.A.dylib...[0m[K[2K[2mParsing symbol table for libobjc.A.dylib...[0m[K[2K[2mLocating external symbol file for liboah.dylib...[0m[K[2K[2mParsing symbol table for liboah.dylib...[0m[K[2K[2mParsing symbol table for program...[0m[K[2KCurrent executable set to '/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode/program' (arm64).
(lldb) [1G[2m(lldb) [0m[8Gruu[K[1G[2m(lldb) [0m[10Gn
Process 7011 launched: '/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode/program' (arm64)
  Here is the List of all the Staff in the R&D Department: 
  ------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

   Josh   1   Technology Specialist   3000.00      2015

   Mary   2         Project Manager   5500.00      2010

   Marc   3    Research Team Leader   8000.00      2007

   Mike  11        Multimedia Prog.   2500.00      2014

  Julie  12     Mainframe Sys.Prog.   2150.00      2013

 Albert  13                OS Prog.   2300.00      2015

   John  21    Senior Software Eng.   4899.00      2011

 Connor  24      Software Developer   1900.00      2017
  Here is the List of all the Staff in the IT Department: 
  ------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

    Roy  32           Network Prog.   1900.00      2016

   Jane  35                  Tester   1500.00      2018

 Removing Mike from the company: Succeeded
 -------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

   Josh   1   Technology Specialist   3000.00      2015

   Mary   2         Project Manager   5500.00      2010

   Marc   3    Research Team Leader   8000.00      2007

  Julie  12     Mainframe Sys.Prog.   2150.00      2013

 Albert  13                OS Prog.   2300.00      2015

   John  21    Senior Software Eng.   4899.00      2011

 Connor  24      Software Developer   1900.00      2017

  Here is the List of all the Programmers who know C++ in the R&D Department: 
  ---------------------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

  Julie  12     Mainframe Sys.Prog.   2150.00      2013      Mary         5         C++

 Albert  13                OS Prog.   2300.00      2015      Mary         9         C++

 Listing All Project IDs:  5 9 6 8
-------------------------
The Highest R&D Employee Salary is: 8000.00
The Highest R&D Programmer Salary is: 2300.00
The Highest R&D Software Architect Salary is: 1900.00

The Average R&D Employee Salary is: 2666
The Average R&D Programmer Salary is: 1150
The Average R&D Software Architect Salary is: 3399

The Average IT Employee Salary is: 0
The Average IT Programmer Salary is: 750
The Average IT Software Architect Salary is: 0

Process 7011 exited with status = 0 (0x00000000) 
(lldb) [1G[2m(lldb) [0m[8Gexit
[1m[7m%[27m[1m[0m                                                                                ]7;file://corinnes-mbp.lan/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode[0m[27m[24m[Jcorinnejones@corinnes-mbp buggyCode % [K[?2004hlls[?2004l
CorinneJones.txt		program
Department.cpp			program.dSYM
Department.h			programmerClass.cpp
employeeClass.cpp		programmerClass.h
employeeClass.h			softwarearchitectClass.cpp
main.cpp			softwarearchitectClass.h
[1m[7m%[27m[1m[0m                                                                                ]7;file://corinnes-mbp.lan/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode[0m[27m[24m[Jcorinnejones@corinnes-mbp buggyCode % [K[?2004hccat main.cpp[1m [0m[0m [?2004l
#include "Department.h"
#include "employeeClass.h"
#include "programmerClass.h"
#include "softwarearchitectClass.h"
#include <vector>
#include <iostream>
#include <iomanip>
#include <string>

using namespace std;

//function used to print table header before the vector printing
void printHeader();

int main() 
{
	Department RnD("Research and Development", 1);
	Department IT("Info And Tech", 2);
	//creating new Employees
	Employee E1("Josh", 1, "Technology Specialist", 3000, 2015);
	Employee E2("Mary", 2, "Project Manager", 5500, 2010);
	Employee E3("Marc", 3, "Research Team Leader", 8000, 2007);
	//adding the employees to the appropriate vector
	RnD.Employees->push_back(E1);
	RnD.Employees->push_back(E2);
	RnD.Employees->push_back(E3);

	Programmer P1("Mike", 11, "Multimedia Prog.", 2500, 2014, E2.getName(), 5, "CSS");
	Programmer P2("Julie", 12, "Mainframe Sys.Prog.", 2150, 2013, E2.getName(), 5, "C++");
	Programmer P3("Albert", 13, "OS Prog.", 2300, 2015, E2.getName(), 9, "C++");
 
	RnD.Programmers->push_back(P1);
	RnD.Programmers->push_back(P2);
	RnD.Programmers->push_back(P3);

	SoftwareArchitect SA1("John",21, "Senior Software Eng.", 4899, 2011, E3.getName(), 6, 7);
	SoftwareArchitect SA2("Connor",24, "Software Developer", 1900, 2017, SA1.getName(), 8, 0);

	RnD.SoftwareArchitects->push_back(SA1);
	RnD.SoftwareArchitects->push_back(SA2);

	Programmer P4("Roy", 32, "Network Prog.", 1900 , 2016,"N/A", 7, "JAVA");
	Programmer P5("Jane", 35, "Tester", 1500, 2018, P4.getName(), 7, "JAVA");
	
	IT.Programmers->push_back(P4);
	IT.Programmers->push_back(P5);


	cout << "  Here is the List of all the Staff in the R&D Department: \n";
	cout << "  ------------------------------------------------------------\n";
	printHeader();
	//a Employee Vector that holds all types of staff
    vector<Employee*> *AllRnDEmployees1 = RnD.getAllStaff();

    for (unsigned i = 0; i < AllRnDEmployees1->size(); i++)
	{
		cout << "\n";
		//using Base Class Pointers to Call the print function if each Type
        AllRnDEmployees1->at(i)->print();
	}

	cout << "  Here is the List of all the Staff in the IT Department: \n";
	cout << "  ------------------------------------------------------------\n";
	printHeader();
	//a Employee Vector that holds all types of staff
    vector<Employee*> *AllITEmployees = IT.getAllStaff();
    for (unsigned i=0; i < AllITEmployees->size(); i++)
	{
		cout << "\n";
		//using Base Class Pointers to Call the print function if each Type
        AllITEmployees->at(i)->print();
	}

	cout << "\n Removing Mike from the company: ";
	cout << (RnD.RemoveEmployee(P1) ? "Succeeded\n" : "Failed\n");
	cout << " -------------------------------\n";	
	
	printHeader();
    vector<Employee*> *AllRnDEmployees2 = RnD.getAllStaff();
    //AllRnDEmployees = RnD.getAllStaff();
    for (unsigned i=0; i < AllRnDEmployees2->size(); i++)
	{
		cout << "\n";
        AllRnDEmployees2->at(i)->print();
	}

	cout << "\n  Here is the List of all the Programmers who know C++ in the R&D Department: \n";
	cout << "  ---------------------------------------------------------------------------\n";
	printHeader();
	vector<Programmer> *CppProgrammers = RnD.getProgrammersByLanguage("C++");
    for (unsigned i=0; i < CppProgrammers->size(); i++)
	{
		cout << "\n";
		CppProgrammers->at(i).print();
	}

	cout << "\n Listing All Project IDs: ";
	vector<int> *AllProjects = RnD.getAllProjectIDs();
    for (unsigned i=0; i < AllProjects->size(); i++)
	{
		cout <<" "<<AllProjects->at(i);
	}
	cout << "\n-------------------------\n";

	
	cout << "The Highest R&D Employee Salary is: " << RnD.CalculateMaxSalary(RnD.EMPLOYEE) << endl;
	cout << "The Highest R&D Programmer Salary is: " << RnD.CalculateMaxSalary(RnD.PROGRAMMER) << endl;
	cout << "The Highest R&D Software Architect Salary is: " << RnD.CalculateMaxSalary(RnD.SOFTWAREARCHITECTS) << endl;
	cout << "\n";
	cout << "The Average R&D Employee Salary is: " << RnD.CalculateAverageSalary(RnD.EMPLOYEE) << endl;
	cout << "The Average R&D Programmer Salary is: " << RnD.CalculateAverageSalary(RnD.PROGRAMMER) << endl;
	cout << "The Average R&D Software Architect Salary is: " << RnD.CalculateAverageSalary(RnD.SOFTWAREARCHITECTS) << endl;
	cout << "\n";
    
    //NO Employees/Software Architects in the IT Dep (Only Programmers)
	cout << "The Average IT Employee Salary is: " << IT.CalculateAverageSalary(IT.EMPLOYEE) << endl;
	cout << "The Average IT Programmer Salary is: " << IT.CalculateAverageSalary(IT.PROGRAMMER) << endl;
	cout << "The Average IT Software Architect Salary is: " << IT.CalculateAverageSalary(IT.SOFTWAREARCHITECTS) << endl << endl;

	return 0;
}

void printHeader()
{
	cout << setw(7) << "Name"
		<< setw(4) << "ID"
		<< setw(15) << "Title"
		<< setw(18) << setprecision(2) << fixed << "Salary"
		<< setw(13) << "Year Hired"
		<< setw(12) << "Supervisor"
		<< setw(11) << "ProjectID"
		<< setw(11) << "Prog.Lang."
		<< setw(11) << "#Exp Years"
		<< "\n";

}
[1m[7m%[27m[1m[0m                                                                                ]7;file://corinnes-mbp.lan/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode[0m[27m[24m[Jcorinnejones@corinnes-mbp buggyCode % [K[?2004hvvim main.cpp[1m [0m[0m [?2004l
[?1049h[>4;2m[?1h=[?2004h[?1004h[1;24r[?12h[?12l[22;2t[22;1t[27m[29m[m[H[2J[?25l[24;1H"main.cpp" [dos] 136L, 5085B[2;1H▽[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#include "Department.h"
#include "employeeClass.h"[2;27H[K[3;1H#include "programmerClass.h"[3;29H[K[4;1H#include "softwarearchitectClass.h"
#include <vector>
#include <iostream>
#include <iomanip>
#include <string>

using namespace std;

//function used to print table header before the vector printing
void printHeader();

int main()
{[17;9HDepartment RnD("Research and Development", 1);[18;9HDepartment IT("Info And Tech", 2);[19;9H//creating new Employees[20;9HEmployee E1("Josh", 1, "Technology Specialist", 3000, 2015);[21;9HEmployee E2("Mary", 2, "Project Manager", 5500, 2010);[22;9HEmployee E3("Marc", 3, "Research Team Leader", 8000, 2007);[23;9H//adding the employees to the appropriate vector[1;1H[?25h[?4m














[17;8H[18;8H[19;8H[20;8H[21;8H[22;8H[23;8H[?25l[1;23r[23;1H
[1;24r[23;9HRnD.Employees->push_back(E1);[24;1H[K[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;9HRnD.Employees->push_back(E2);[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;9HRnD.Employees->push_back(E3);[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;1H[?25h[?25l[1;23r[1;1H[2M[1;24r[22;9HProgrammer P1("Mike", 11, "Multimedia Prog.", 2500, 2014, E2.getName(),  [23;1H5, "CSS");[22;8H[?25h[?25l[1;23r[1;1H[2M[1;24r[22;9HProgrammer P2("Julie", 12, "Mainframe Sys.Prog.", 2150, 2013, E2.getNamee[23;1H(), 5, "C++");[22;8H[?25h[?25l[1;23r[1;1H[2M[1;24r[22;9HProgrammer P3("Albert", 13, "OS Prog.", 2300, 2015, E2.getName(), 9, "C++[23;1H+");[22;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;1H[?25h[?25l[1;23r[23;1H
[1;24r[23;9HRnD.Programmers->push_back(P1);[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;9HRnD.Programmers->push_back(P2);[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;9HRnD.Programmers->push_back(P3);[23;8H[?25h[22;8H[21;8H[20;1H[21;8H[22;8H[23;8H[?25l[1;23r[23;1H
[1;24r[23;1H[?25h[?25l[1;23r[1;1H[2M[1;24r[22;9HSoftwareArchitect SA1("John",21, "Senior Software Eng.", 4899, 2011, E3..[23;1HgetName(), 6, 7);[22;8H[?25h[?25l[1;23r[1;1H[2M[1;24r[22;9HSoftwareArchitect SA2("Connor",24, "Software Developer", 1900, 2017, SA11[23;1H.getName(), 8, 0);[22;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;1H[?25h[?25l[1;23r[23;1H
[1;24r[23;9HRnD.SoftwareArchitects->push_back(SA1);[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;9HRnD.SoftwareArchitects->push_back(SA2);[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;1H[?25h[?25l[1;23r[23;1H
[1;24r[23;9HProgrammer P4("Roy", 32, "Network Prog.", 1900 , 2016,"N/A", 7, "JAVA");[23;8H[?25h[?25l[1;23r[1;1H[2M[1;24r[22;9HProgrammer P5("Jane", 35, "Tester", 1500, 2018, P4.getName(), 7, "JAVA"))[23;1H;[22;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;8H[?25h[?25l[1;23r[1;1H[2M[1;24r[22;9HIT.Programmers->push_back(P4);[23;9HIT.Programmers->push_back(P5);[22;8H[?25h[23;8H[?25l[1;23r[1;1H[2M[1;24r[22;1H[?25h
[?25l[1;23r[1;1H[2M[1;24r[22;9Hcout << "  Here is the List of all the Staff in the R&D Department: \n";[23;9Hcout << "  ------------------------------------------------------------\[23;1H[94m@                                                                               [22;8H[?25h[?25l[1;23r[m[23;1H
[1;24r[22;1H        cout << "  ------------------------------------------------------------\\[23;1Hn";[22;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;9HprintHeader();[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;9H//a Employee Vector that holds all types of staff[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;5Hvector<Employee*> *AllRnDEmployees1 = RnD.getAllStaff();[?25h[?25l[1;23r[23;1H
[1;24r[23;1H[?25h[?25l[1;23r[1;1H[2M[1;24r[22;5Hfor (unsigned i = 0; i < AllRnDEmployees1->size(); i++)[23;9H{[22;1H[?25h[23;8H[?25l[1;23r[1;1H[2M[1;24r[22;17Hcout << "\n";[23;17H//using Base Class Pointers to Call the print function if each T[23;1H[94m@                                                                               [22;8H[?25h[?25l[1;23r[m[23;1H
[1;24r[22;1H                //using Base Class Pointers to Call the print function if each TT[23;1Hype[22;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;9HAllRnDEmployees1->at(i)->print();[?25h[?25l[1;23r[23;1H
[1;24r[23;9H}[?25h[?25l[1;23r[23;1H
[1;24r[23;1H[?25h[?25l[1;23r[23;1H
[1;24r[23;9Hcout << "  Here is the List of all the Staff in the IT Department: \n";[23;8H[?25h[?25l[1;23r[1;1H[2M[1;24r[22;9Hcout << "  ------------------------------------------------------------\\[23;1Hn";[22;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;9HprintHeader();[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;9H//a Employee Vector that holds all types of staff[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;5Hvector<Employee*> *AllITEmployees = IT.getAllStaff();[?25h[?25l[1;23r[23;1H
[1;24r[23;5Hfor (unsigned i=0; i < AllITEmployees->size(); i++)[?25h[?25l[1;23r[23;1H
[1;24r[23;9H{[?25h[?25l[1;23r[23;1H
[1;24r[23;17Hcout << "\n";[23;8H[?25h[?25l[1;23r[1;1H[2M[1;24r[22;17H//using Base Class Pointers to Call the print function if each TT[23;1Hype[22;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;9HAllITEmployees->at(i)->print();[?25h[?25l[1;23r[23;1H
[1;24r[23;9H}[?25h[?25l[1;23r[23;1H
[1;24r[23;1H[?25h[?25l[1;23r[23;1H
[1;24r[23;9Hcout << "\n Removing Mike from the company: ";[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;9Hcout << (RnD.RemoveEmployee(P1) ? "Succeeded\n" : "Failed\n");[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;9Hcout << " -------------------------------\n";[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;8H[?25h[?25l[1;23r[1;1H[2M[1;24r[22;9HprintHeader();
    vector<Employee*> *AllRnDEmployees2 = RnD.getAllStaff();[22;8H[?25h
[?25l[1;23r[23;1H
[1;24r[23;5H//AllRnDEmployees = RnD.getAllStaff();[?25h[?25l[1;23r[23;1H
[1;24r[23;5Hfor (unsigned i=0; i < AllRnDEmployees2->size(); i++)[?25h[?25l[1;23r[23;1H
[1;24r[23;9H{[?25h[?25l[1;23r[23;1H
[1;24r[23;17Hcout << "\n";[23;8H[?25h[?25l[1;23r[1;1H[2M[1;24r[22;9HAllRnDEmployees2->at(i)->print();[23;9H}[22;1H[?25h[23;8H[?25l[1;23r[23;1H
[1;24r[23;1H[?25h[?25l[1;23r[1;1H[2M[1;24r[22;9Hcout << "\n  Here is the List of all the Programmers who know C++ in thee[23;1H R&D Department: \n";[22;8H[?25h[?25l[1;23r[1;1H[2M[1;24r[22;9Hcout << "  --------------------------------------------------------------[23;1H--------------\n";[22;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;9HprintHeader();[23;8H[?25h[?25l
:[?25hq[?25l[?2004l[>4;m[23;2t[23;1t[24;1H[K[24;1H[?1004l[?2004l[?1l>[?1049l[?25h[>4;m[1m[7m%[27m[1m[0m                                                                                ]7;file://corinnes-mbp.lan/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode[0m[27m[24m[Jcorinnejones@corinnes-mbp buggyCode % [K[?2004hvim main.cpp[12Dcat[9C[12Dls          [10Dlldb program[12Dclang++ *.cpp -g -O0  -o program[32Dlldb program        [2C          [20D[12Dclang++ *.cpp -g -O0  -o program[32Dlldb program        [2C          [20D[?2004l
(lldb) target create "program"
[2mLocating external symbol file for program...[0m[K[2K[2mLoading Apple DWARF index for program...[0m[K[2K[2mLocating external symbol file for dyld...[0m[K[2K[2mParsing symbol table for dyld...[0m[K[2K[2mLocating external symbol file for libc++.1.dylib...[0m[K[2K[2mParsing symbol table for libc++.1.dylib...[0m[K[2K[2mLocating external symbol file for libSystem.B.dylib...[0m[K[2K[2mParsing symbol table for libSystem.B.dylib...[0m[K[2K[2mLocating external symbol file for libc++abi.dylib...[0m[K[2K[2mParsing symbol table for libc++abi.dylib...[0m[K[2K[2mLocating external symbol file for libcache.dylib...[0m[K[2K[2mParsing symbol table for libcache.dylib...[0m[K[2K[2mLocating external symbol file for libcommonCrypto.dylib...[0m[K[2K[2mParsing symbol table for libcommonCrypto.dylib...[0m[K[2K[2mLocating external symbol file for libcompiler_rt.dylib...[0m[K[2K[2mParsing symbol table for libcompiler_rt.dylib...[0m[K[2K[2mLocating external symbol file for libcopyfile.dylib...[0m[K[2K[2mParsing symbol table for libcopyfile.dylib...[0m[K[2K[2mLocating external symbol file for libcorecrypto.dylib...[0m[K[2K[2mParsing symbol table for libcorecrypto.dylib...[0m[K[2K[2mLocating external symbol file for libdispatch.dylib...[0m[K[2K[2mParsing symbol table for libdispatch.dylib...[0m[K[2K[2mLocating external symbol file for libdyld.dylib...[0m[K[2K[2mParsing symbol table for libdyld.dylib...[0m[K[2K[2mLocating external symbol file for libkeymgr.dylib...[0m[K[2K[2mParsing symbol table for libkeymgr.dylib...[0m[K[2K[2mLocating external symbol file for libmacho.dylib...[0m[K[2K[2mParsing symbol table for libmacho.dylib...[0m[K[2K[2mLocating external symbol file for libquarantine.dylib...[0m[K[2K[2mParsing symbol table for libquarantine.dylib...[0m[K[2K[2mLocating external symbol file for libremovefile.dylib...[0m[K[2K[2mParsing symbol table for libremovefile.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_asl.dylib...[0m[K[2K[2mParsing symbol table for libsystem_asl.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_blocks.dylib...[0m[K[2K[2mParsing symbol table for libsystem_blocks.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_c.dylib...[0m[K[2K[2mParsing symbol table for libsystem_c.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_collections.dylib...[0m[K[2K[2mParsing symbol table for libsystem_collections.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_configuration.dylib...[0m[K[2K[2mParsing symbol table for libsystem_configuration.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_containermanager.dylib...[0m[K[2K[2mParsing symbol table for libsystem_containermanager.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_coreservices.dylib...[0m[K[2K[2mParsing symbol table for libsystem_coreservices.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_darwin.dylib...[0m[K[2K[2mParsing symbol table for libsystem_darwin.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_dnssd.dylib...[0m[K[2K[2mParsing symbol table for libsystem_dnssd.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_featureflags.dylib...[0m[K[2K[2mParsing symbol table for libsystem_featureflags.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_info.dylib...[0m[K[2K[2mParsing symbol table for libsystem_info.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_m.dylib...[0m[K[2K[2mParsing symbol table for libsystem_m.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_malloc.dylib...[0m[K[2K[2mParsing symbol table for libsystem_malloc.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_networkextension.dylib...[0m[K[2K[2mParsing symbol table for libsystem_networkextension.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_notify.dylib...[0m[K[2K[2mParsing symbol table for libsystem_notify.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_sandbox.dylib...[0m[K[2K[2mParsing symbol table for libsystem_sandbox.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_secinit.dylib...[0m[K[2K[2mParsing symbol table for libsystem_secinit.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_kernel.dylib...[0m[K[2K[2mParsing symbol table for libsystem_kernel.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_platform.dylib...[0m[K[2K[2mParsing symbol table for libsystem_platform.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_pthread.dylib...[0m[K[2K[2mParsing symbol table for libsystem_pthread.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_symptoms.dylib...[0m[K[2K[2mParsing symbol table for libsystem_symptoms.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_trace.dylib...[0m[K[2K[2mParsing symbol table for libsystem_trace.dylib...[0m[K[2K[2mLocating external symbol file for libunwind.dylib...[0m[K[2K[2mParsing symbol table for libunwind.dylib...[0m[K[2K[2mLocating external symbol file for libxpc.dylib...[0m[K[2K[2mParsing symbol table for libxpc.dylib...[0m[K[2K[2mLocating external symbol file for libobjc.A.dylib...[0m[K[2K[2mParsing symbol table for libobjc.A.dylib...[0m[K[2K[2mLocating external symbol file for liboah.dylib...[0m[K[2K[2mParsing symbol table for liboah.dylib...[0m[K[2K[2mParsing symbol table for program...[0m[K[2KCurrent executable set to '/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode/program' (arm64).
(lldb) [1G[2m(lldb) [0m[8Gb main.cpp:106
Breakpoint 1: where = program`main + 4416 at main.cpp:106:7, address = 0x000000010000e264
(lldb) [1G[2m(lldb) [0m[8Grun
Process 7160 launched: '/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode/program' (arm64)
  Here is the List of all the Staff in the R&D Department: 
  ------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

   Josh   1   Technology Specialist   3000.00      2015

   Mary   2         Project Manager   5500.00      2010

   Marc   3    Research Team Leader   8000.00      2007

   Mike  11        Multimedia Prog.   2500.00      2014

  Julie  12     Mainframe Sys.Prog.   2150.00      2013

 Albert  13                OS Prog.   2300.00      2015

   John  21    Senior Software Eng.   4899.00      2011

 Connor  24      Software Developer   1900.00      2017
  Here is the List of all the Staff in the IT Department: 
  ------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

    Roy  32           Network Prog.   1900.00      2016

   Jane  35                  Tester   1500.00      2018

 Removing Mike from the company: Succeeded
 -------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

   Josh   1   Technology Specialist   3000.00      2015

   Mary   2         Project Manager   5500.00      2010

   Marc   3    Research Team Leader   8000.00      2007

  Julie  12     Mainframe Sys.Prog.   2150.00      2013

 Albert  13                OS Prog.   2300.00      2015

   John  21    Senior Software Eng.   4899.00      2011

 Connor  24      Software Developer   1900.00      2017

  Here is the List of all the Programmers who know C++ in the R&D Department: 
  ---------------------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

  Julie  12     Mainframe Sys.Prog.   2150.00      2013      Mary         5         C++

 Albert  13                OS Prog.   2300.00      2015      Mary         9         C++

 Listing All Project IDs:  5 9 6 8
-------------------------
Process 7160 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mbreakpoint 1.1[0m
    frame #0: [33m0x000000010000e264[0m program`main at [36mmain.cpp[0m:[33m106[0m:[33m7[0m
[33m  [0m 103 		cout << "\n-------------------------\n";
[33m  [0m 104 	
[33m  [0m 105 		
[33m->[0m 106 		cout [4m<<[0m "The Highest R&D Employee Salary is: " << RnD.CalculateMaxSalary(RnD.EMPLOYEE) << endl;
[33m  [0m 107 		cout << "The Highest R&D Programmer Salary is: " << RnD.CalculateMaxSalary(RnD.PROGRAMMER) << endl;
[33m  [0m 108 		cout << "The Highest R&D Software Architect Salary is: " << RnD.CalculateMaxSalary(RnD.SOFTWAREARCHITECTS) << endl;
[33m  [0m 109 		cout << "\n";
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gs
Process 7160 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep in[0m
    frame #0: [33m0x000000010000280c[0m program`Department::CalculateMaxSalary(this=0x000000016fdff1b0, type=EMPLOYEE) at [36mDepartment.cpp[0m:[33m25[0m:[33m9[0m
[33m  [0m 22  	
[33m  [0m 23  	[32mdouble[0m Department::CalculateMaxSalary(StaffTypes type)
[33m  [0m 24  	{
[33m->[0m 25  		[32mdouble[0m [4mmax[0m = [31m0[0m;
[33m  [0m 26  		[32mdouble[0m i = [31m0[0m;
[33m  [0m 27  		[32mswitch[0m (type)
[33m  [0m 28  		{
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 7160 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100002810[0m program`Department::CalculateMaxSalary(this=0x000000016fdff1b0, type=EMPLOYEE) at [36mDepartment.cpp[0m:[33m26[0m:[33m9[0m
[33m  [0m 23  	[32mdouble[0m Department::CalculateMaxSalary(StaffTypes type)
[33m  [0m 24  	{
[33m  [0m 25  		[32mdouble[0m max = [31m0[0m;
[33m->[0m 26  		[32mdouble[0m [4mi[0m = [31m0[0m;
[33m  [0m 27  		[32mswitch[0m (type)
[33m  [0m 28  		{
[33m  [0m 29  		[32mcase[0m Department::EMPLOYEE:
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 7160 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100002814[0m program`Department::CalculateMaxSalary(this=0x000000016fdff1b0, type=EMPLOYEE) at [36mDepartment.cpp[0m:[33m27[0m:[33m10[0m
[33m  [0m 24  	{
[33m  [0m 25  		[32mdouble[0m max = [31m0[0m;
[33m  [0m 26  		[32mdouble[0m i = [31m0[0m;
[33m->[0m 27  		[32mswitch[0m ([4mtype[0m)
[33m  [0m 28  		{
[33m  [0m 29  		[32mcase[0m Department::EMPLOYEE:
[33m  [0m 30  			[32mfor[0m (i = [31m0[0m; i < Employees->size(); i++)
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 7160 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100002858[0m program`Department::CalculateMaxSalary(this=0x000000016fdff1b0, type=EMPLOYEE) at [36mDepartment.cpp[0m:[33m30[0m:[33m10[0m
[33m  [0m 27  		[32mswitch[0m (type)
[33m  [0m 28  		{
[33m  [0m 29  		[32mcase[0m Department::EMPLOYEE:
[33m->[0m 30  			[32mfor[0m (i [4m=[0m [31m0[0m; i < Employees->size(); i++)
[33m  [0m 31  			{
[33m  [0m 32  	
[33m  [0m 33  				[32mif[0m (Employees->at(i).getSalary()>max)
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gram[K[1G[2m(lldb) [0m[10G[K[1G[2m(lldb) [0m[9G[K[1G[2m(lldb) [0m[8Gframe variable
(Department *) this = 0x000000016fdff1b0
(Department::StaffTypes) type = EMPLOYEE
(double) max = 0
(double) i = 0
(lldb) [1G[2m(lldb) [0m[8Gn
Process 7160 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100002890[0m program`Department::CalculateMaxSalary(this=0x000000016fdff1b0, type=EMPLOYEE) at [36mDepartment.cpp[0m:[33m33[0m:[33m8[0m
[33m  [0m 30  			[32mfor[0m (i = [31m0[0m; i < Employees->size(); i++)
[33m  [0m 31  			{
[33m  [0m 32  	
[33m->[0m 33  				[32mif[0m ([4mEmployees[0m->at(i).getSalary()>max)
[33m  [0m 34  				{
[33m  [0m 35  					max = Employees->at(i).getSalary();
[33m  [0m 36  				}
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gnn[K[1G[2m(lldb) [0m[9G
Process 7160 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x00000001000028bc[0m program`Department::CalculateMaxSalary(this=0x000000016fdff1b0, type=EMPLOYEE) at [36mDepartment.cpp[0m:[33m35[0m:[33m11[0m
[33m  [0m 32  	
[33m  [0m 33  				[32mif[0m (Employees->at(i).getSalary()>max)
[33m  [0m 34  				{
[33m->[0m 35  					max = [4mEmployees[0m->at(i).getSalary();
[33m  [0m 36  				}
[33m  [0m 37  			}
[33m  [0m 38  			[32mbreak[0m;
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 7160 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x00000001000028d4[0m program`Department::CalculateMaxSalary(this=0x000000016fdff1b0, type=EMPLOYEE) at [36mDepartment.cpp[0m:[33m36[0m:[33m4[0m
[33m  [0m 33  				[32mif[0m (Employees->at(i).getSalary()>max)
[33m  [0m 34  				{
[33m  [0m 35  					max = Employees->at(i).getSalary();
[33m->[0m 36  				[4m}[0m
[33m  [0m 37  			}
[33m  [0m 38  			[32mbreak[0m;
[33m  [0m 39  		[32mcase[0m Department::PROGRAMMER:
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gexit
Quitting LLDB will kill one or more processes. Do you really want to proceed: [Y /n] Y
[1m[7m%[27m[1m[0m                                                                                ]7;file://corinnes-mbp.lan/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode[0m[27m[24m[Jcorinnejones@corinnes-mbp buggyCode % [K[?2004hl vvim Department.cpp[?2004l
[?1049h[>4;2m[?1h=[?2004h[?1004h[1;24r[?12h[?12l[22;2t[22;1t[27m[29m[m[H[2J[?25l[24;1H"Department.cpp" [dos] 198L, 4128B[2;1H▽[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#include "Department.h"[2;1H[K[3;1H[K[5;1HDepartment::Department()
{[7;9HEmployees = new vector<Employee>();[8;9HProgrammers = new vector <Programmer>();[9;9HSoftwareArchitects = new vector<SoftwareArchitect>();[10;9HName = "";[11;9HID = 0;
}

Department::Department(string N, int id)
{[16;9HEmployees = new vector<Employee>();[17;9HProgrammers = new vector <Programmer>();[18;9HSoftwareArchitects = new vector<SoftwareArchitect>();[19;9HName = N;[20;9H(id > 0) ? ID = -1 : ID = id;
}

double Department::CalculateMaxSalary(StaffTypes type)[1;1H[?25h[?4m



[?25l
[106m{[12;1H}[6;1H[?25h[?25l[m{[12;1H}[7;8H[?25h[8;8H[9;8H[10;8H[11;8H[?25l[6;1H[106m{[12;1H}[?25h[?25l[m[6;1H{[12;1H}
[?25h
[?25l
[106m{[21;1H}[15;1H[?25h[?25l[m{[21;1H}[16;8H[?25h[17;8H[18;8H[19;8H[20;8H[?25l[15;1H[106m{[21;1H}[?25h[?25l[m[15;1H{[21;1H}
[?25h
[?25l[1;23r[23;1H
[1;24r[23;1H{[24;1H[K[23;1H[?25h[?25l[1;23r[23;1H
[1;24r[23;9Hdouble max = 0;[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;9Hdouble i = 0;[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;9Hswitch (type)[23;8H[?25h[22;8H[23;8H[?25l[1;23r[23;1H
[1;24r[23;9H{[?25h[?25l[1;23r[23;1H
[1;24r[23;9Hcase Department::EMPLOYEE:[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;17Hfor (i = 0; i < Employees->size(); i++)[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;17H{[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;1H[?25h[?25l[1;23r[23;1H
[1;24r[23;25Hif (Employees->at(i).getSalary()>max)[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;25H{[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;33Hmax = Employees->at(i).getSalary();[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;25H}[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;17H}[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;17Hbreak;[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;9Hcase Department::PROGRAMMER:[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;17Hfor (i = 0; i < Programmers->size(); i++)[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;17H{[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;1H[?25h[?25l[1;23r[23;1H
[1;24r[23;25Hif (Programmers->at(i).getSalary()>max)[23;8H[?25h[22;1H[21;8H[20;8H[19;8H[20;8H[21;8H
[23;8H[?25l[1;23r[23;1H
[1;24r[23;25H{[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;33Hmax = Programmers->at(i).getSalary();[23;8H[?25h[22;8H[21;8H[20;1H[19;8H[18;8H[17;8H[16;8H[15;8H[14;8H[13;8H[14;8H[15;8H[16;8H[?25l[24;1H:[?25hq[?25l[?2004l[>4;m[23;2t[23;1t[24;1H[K[24;1H[?1004l[?2004l[?1l>[?1049l[?25h[>4;m[1m[7m%[27m[1m[0m                                                                                ]7;file://corinnes-mbp.lan/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode[0m[27m[24m[Jcorinnejones@corinnes-mbp buggyCode % [K[?2004hvvim Em   v  lls[?2004l
CorinneJones.txt		program
Department.cpp			program.dSYM
Department.h			programmerClass.cpp
employeeClass.cpp		programmerClass.h
employeeClass.h			softwarearchitectClass.cpp
main.cpp			softwarearchitectClass.h
[1m[7m%[27m[1m[0m                                                                                ]7;file://corinnes-mbp.lan/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode[0m[27m[24m[Jcorinnejones@corinnes-mbp buggyCode % [K[?2004hvvim employeeClass.cpp[?2004l
[?1049h[>4;2m[?1h=[?2004h[?1004h[1;24r[?12h[?12l[22;2t[22;1t[27m[29m[m[H[2J[?25l[24;1H"employeeClass.cpp" [dos] 57L, 1018B[2;1H▽[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#include "employeeClass.h"[2;1H[K[3;1H/* Default constructor */[3;26H[K[4;1HEmployee::Employee() {[5;9Hname = "";[6;9HID = 0;[7;9HjobTitle = "";
    salary = 0.00;[9;9HHireYear = 2018;
}

/* Constructor w/ parameters */
Employee::Employee(string nme, int id, string jbTtle, double slry, int yr) {[14;9Hname = nme;[16;5Hif (id < 0)[17;9HID = 0;
    else[19;9HID = id;[21;9HjobTitle = jbTtle;[23;9H(slry > 0) ? salary = slry : salary = 0.00;[1;1H[?25h[?4m


[5;8H[6;8H[7;8H
[9;8H[?25l[4;22H[106m{[10;1H}[?25h[?25l[m[4;22H{[10;1H}
[?25h

[14;8H





[21;8H
[23;8H[?25l[1;23r[23;1H
[1;24r[23;9H(yr > 0) ? HireYear = yr : HireYear = 2018;[24;1H[K[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;1H[?25h[?25l[1;23r[23;1H
[1;24r[10;76H[106m{[23;1H}[?25h[?25l[1;23r[m[23;1H
[1;24r[9;76H{[22;1H}
[?25h[?25l[1;23r[23;1H
[1;24r[23;1H/* Accessor Functions */[?25h[?25l[1;23r[23;1H
[1;24r[23;1Hstring Employee::getName() const {[?25h[?25l[1;23r[23;1H
[1;24r[23;9Hreturn name;[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[21;34H[106m{

}[?25h[?25l[1;23r[m[23;1H
[1;24r[20;34H{

}
[?25h[?25l[1;23r[23;1H
[1;24r[23;1Hlong Employee::getID() const {[?25h[?25l[1;23r[23;1H
[1;24r[23;9Hreturn ID;[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[21;30H[106m{

}[?25h[?25l[1;23r[m[23;1H
[1;24r[20;30H{

}
[?25h[?25l[1;23r[23;1H
[1;24r[23;1Hstring Employee::getJobTitle() const {[?25h[?25l[1;23r[23;1H
[1;24r[23;9Hreturn jobTitle;[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[21;38H[106m{

}[?25h[?25l[1;23r[m[23;1H
[1;24r[20;38H{

}
[?25h[?25l[1;23r[23;1H
[1;24r[23;1Hdouble Employee::getSalary() const {[?25h[?25l[1;23r[23;1H
[1;24r[23;9Hreturn salary;[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[21;36H[106m{

}[?25h[?25l[1;23r[m[23;1H
[1;24r[20;36H{

}
[?25h[?25l[1;23r[23;1H
[1;24r[23;1Hint Employee::getHireYear() const[?25h[?25l[1;23r[23;1H
[1;24r[23;1H{[?25h[?25l[1;23r[23;1H
[1;24r[23;9Hreturn HireYear;[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[21;1H[106m{

}[?25h[?25l[1;23r[m[23;1H
[1;24r[20;1H{

}
[?25h[?25l[1;23r[23;1H
[1;24r[23;1Hvoid Employee::print() {[?25h[22;1H[?25l[19;1H[106m{

}[?25h[?25l[m[19;1H{

}[20;8H[?25h[?25l[19;1H[106m{

}[19;1H[?25h[?25l[m{

}[18;1H[?25h[17;1H[?25l[14;36H[106m{

}[?25h[?25l[m[14;36H{

}[15;8H[?25h[?25l[14;36H[106m{

}[?25h[?25l[m[14;36H{

}
[?25h
[?25l
[106m{

}[19;1H[?25h[?25l[m{

}[20;8H[?25h[?25l[19;1H[106m{

}[?25h[?25l[m[19;1H{

}
[?25h
[?25l[1;23r[23;1H
[1;24r[23;9Hcout << setw(7) << getName()[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;17H<< setw(4) << getID()[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;17H<< setw(24) << getJobTitle()[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;17H<< setw(10) << setprecision(2) << fixed << getSalary()[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;17H<< setw(10) << getHireYear()[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;27H<< "\n";[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[16;24H[106m{[23;1H}[?25h[?25l[m[16;24H{[23;1H}[22;8H[?25h[21;8H[20;8H[19;8H[18;8H[17;8H[16;1H[15;1H[?25l[12;1H[106m{

}[?25h[?25l[m[12;1H{

}[13;8H[?25h[?25l[12;1H[106m{

}[12;1H[?25h[?25l[m{

}[11;1H[?25h[10;1H[?25l[7;36H[106m{

}[?25h[?25l[m[7;36H{

}[8;8H[?25h[7;1H[6;1H[?25l[3;38H[106m{

}[?25h[?25l[m[3;38H{

}[4;8H[?25h[3;1H[2;1H[1;1H[?25l[1;23r[1;1H[L[1;24r[1;9Hreturn ID;[1;8H[?25h[?25l[1;23r[1;1H[L[1;24r[1;1Hlong Employee::getID() const {[?25h[?25l[1;23r[1;1H[L[1;24r[1;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;1H}[?25h[?25l[1;23r[1;1H[L[1;24r[1;9Hreturn name;[1;8H[?25h[?25l[1;23r[1;1H[L[1;24r[1;1Hstring Employee::getName() const {[?25h[?25l[1;23r[1;1H[L[1;24r[1;1H/* Accessor Functions */[?25h[?25l[1;23r[1;1H[L[1;24r[1;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;1H}[?25h[?25l[1;23r[1;1H[L[1;24r[1;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9H(yr > 0) ? HireYear = yr : HireYear = 2018;[1;8H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9H(slry > 0) ? salary = slry : salary = 0.00;[1;8H[?25h[?25l[1;23r[1;1H[L[1;24r[1;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9HjobTitle = jbTtle;[1;8H[?25h[?25l[1;23r[1;1H[L[1;24r[1;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9HID = id;[?25h[?25l[1;23r[1;1H[L[1;24r[1;5Helse[?25h[?25l[1;23r[1;1H[L[1;24r[1;9HID = 0;[?25h[?25l[1;23r[1;1H[L[1;24r[1;5Hif (id < 0)[?25h[?25l[1;23r[1;1H[L[1;24r[1;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9Hname = nme;[1;8H[?25h[?25l[1;23r[1;1H[L[1;24r[1;1HEmployee::Employee(string nme, int id, string jbTtle, double slry, int yr) {[?25h[?25l[1;23r[1;1H[L[1;24r[1;1H/* Constructor w/ parameters */[?25h[?25l[1;23r[1;1H[L[1;24r[1;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;1H}[?25h[?25l[1;23r[1;1H[L[1;24r[1;9HHireYear = 2018;[1;8H[?25h[?25l[1;23r[1;1H[L[1;24r[1;5Hsalary = 0.00;[?25h[?25l[1;23r[1;1H[L[1;24r[1;9HjobTitle = "";[1;8H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9HID = 0;[1;8H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9Hname = "";[1;8H[?25h[?25l[1;23r[1;1H[L[1;24r[1;1HEmployee::Employee() {[?25h[?25l[1;23r[1;1H[L[1;24r[1;1H/* Default constructor */[?25h[?25l[1;23r[1;1H[L[1;24r[1;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;1H#include "employeeClass.h"[?25h


[5;8H[6;8H[7;8H
[9;8H[?25l[4;22H[106m{[10;1H}[?25h[?25l[m[4;22H{[10;1H}
[?25h

[14;8H





[21;8H
[23;8H[?25l[1;23r[23;1H
[1;24r[23;9H(yr > 0) ? HireYear = yr : HireYear = 2018;[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;1H[?25h[?25l[1;23r[23;1H
[1;24r[10;76H[106m{[23;1H}[?25h[?25l[1;23r[m[23;1H
[1;24r[9;76H{[22;1H}
[?25h[?25l[1;23r[23;1H
[1;24r[23;1H/* Accessor Functions */[?25h[?25l[1;23r[23;1H
[1;24r[23;1Hstring Employee::getName() const {[?25h[?25l[1;23r[23;1H
[1;24r[23;9Hreturn name;[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[21;34H[106m{

}[?25h[?25l[1;23r[m[23;1H
[1;24r[20;34H{

}
[?25h[?25l[1;23r[23;1H
[1;24r[23;1Hlong Employee::getID() const {[?25h[?25l[1;23r[23;1H
[1;24r[23;9Hreturn ID;[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[21;30H[106m{

}[?25h[?25l[1;23r[m[23;1H
[1;24r[20;30H{

}
[?25h[?25l[1;23r[23;1H
[1;24r[23;1Hstring Employee::getJobTitle() const {[?25h[?25l[1;23r[23;1H
[1;24r[23;9Hreturn jobTitle;[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[21;38H[106m{

}[?25h[?25l[1;23r[m[23;1H
[1;24r[20;38H{

}
[?25h[?25l[1;23r[23;1H
[1;24r[23;1Hdouble Employee::getSalary() const {[?25h[?25l[1;23r[23;1H
[1;24r[23;9Hreturn salary;[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[21;36H[106m{

}[?25h[?25l[1;23r[m[23;1H
[1;24r[20;36H{

}
[?25h[?25l[1;23r[23;1H
[1;24r[23;1Hint Employee::getHireYear() const[?25h[?25l[1;23r[23;1H
[1;24r[23;1H{[?25h[?25l[1;23r[23;1H
[1;24r[23;9Hreturn HireYear;[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[21;1H[106m{

}[?25h[?25l[1;23r[m[23;1H
[1;24r[20;1H{

}
[?25h[?25l[20;1H[106m{

}[?25h[?25l[m[20;1H{

}[21;8H[?25h[?25l[20;1H[106m{

}[20;1H[?25h[?25l[m{

}[19;1H[?25h[18;1H[?25l[15;36H[106m{

}[?25h[?25l[m[15;36H{

}[16;8H[?25h[15;1H[14;1H[?25l[11;38H[106m{

}[?25h[?25l[m[11;38H{

}[12;8H[?25h[11;1H[10;1H[?25l[7;30H[106m{

}[?25h[?25l[m[7;30H{

}[8;8H[?25h[7;1H[6;1H[?25l[3;34H[106m{

}[?25h[?25l[m[3;34H{

}[4;8H[?25h[3;1H[2;1H[1;1H[?25l[1;23r[1;1H[L[1;24r[1;1H}[?25h[?25l[1;23r[1;1H[L[1;24r[1;1H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9H(yr > 0) ? HireYear = yr : HireYear = 2018;[1;8H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9H(slry > 0) ? salary = slry : salary = 0.00;[1;8H[?25h[?25l[24;1H:[?25hq[?25l[?2004l[>4;m[23;2t[23;1t[24;1H[K[24;1H[?1004l[?2004l[?1l>[?1049l[?25h[>4;m[1m[7m%[27m[1m[0m                                                                                ]7;file://corinnes-mbp.lan/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode[0m[27m[24m[Jcorinnejones@corinnes-mbp buggyCode % [K[?2004hvvim Department.p cpp[?2004l
[?1049h[>4;2m[?1h=[?2004h[?1004h[1;24r[?12h[?12l[22;2t[22;1t[27m[29m[m[H[2J[?25l[24;1H"Department.cpp" [dos] 198L, 4128B[2;1H▽[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#include "Department.h"[2;1H[K[3;1H[K[5;1HDepartment::Department()
{[7;9HEmployees = new vector<Employee>();[8;9HProgrammers = new vector <Programmer>();[9;9HSoftwareArchitects = new vector<SoftwareArchitect>();[10;9HName = "";[11;9HID = 0;
}

Department::Department(string N, int id)
{[16;9HEmployees = new vector<Employee>();[17;9HProgrammers = new vector <Programmer>();[18;9HSoftwareArchitects = new vector<SoftwareArchitect>();[19;9HName = N;[20;9H(id > 0) ? ID = -1 : ID = id;
}

double Department::CalculateMaxSalary(StaffTypes type)[1;1H[?25h[?4m


[3;1H[2;1H[1;1H



[?25l
[106m{[12;1H}[6;1H[?25h[?25l[m{[12;1H}[7;8H[?25h[8;8H[?25l[24;1H[K[24;1H:[?25hq[?25l[?2004l[>4;m[23;2t[23;1t[24;1H[K[24;1H[?1004l[?2004l[?1l>[?1049l[?25h[>4;m[1m[7m%[27m[1m[0m                                                                                ]7;file://corinnes-mbp.lan/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode[0m[27m[24m[Jcorinnejones@corinnes-mbp buggyCode % [K[?2004hvim Department.cpp[14DemployeeClass.cpp[21Dls                   [19Dvim Department.cpp[18Dlldb program      [12Dvim main.cpp[12Dlldb program[?2004l
(lldb) target create "program"
[2mLocating external symbol file for program...[0m[K[2K[2mLoading Apple DWARF index for program...[0m[K[2K[2mLocating external symbol file for dyld...[0m[K[2K[2mParsing symbol table for dyld...[0m[K[2K[2mLocating external symbol file for libc++.1.dylib...[0m[K[2K[2mParsing symbol table for libc++.1.dylib...[0m[K[2K[2mLocating external symbol file for libSystem.B.dylib...[0m[K[2K[2mParsing symbol table for libSystem.B.dylib...[0m[K[2K[2mLocating external symbol file for libc++abi.dylib...[0m[K[2K[2mParsing symbol table for libc++abi.dylib...[0m[K[2K[2mLocating external symbol file for libcache.dylib...[0m[K[2K[2mParsing symbol table for libcache.dylib...[0m[K[2K[2mLocating external symbol file for libcommonCrypto.dylib...[0m[K[2K[2mParsing symbol table for libcommonCrypto.dylib...[0m[K[2K[2mLocating external symbol file for libcompiler_rt.dylib...[0m[K[2K[2mParsing symbol table for libcompiler_rt.dylib...[0m[K[2K[2mLocating external symbol file for libcopyfile.dylib...[0m[K[2K[2mParsing symbol table for libcopyfile.dylib...[0m[K[2K[2mLocating external symbol file for libcorecrypto.dylib...[0m[K[2K[2mParsing symbol table for libcorecrypto.dylib...[0m[K[2K[2mLocating external symbol file for libdispatch.dylib...[0m[K[2K[2mParsing symbol table for libdispatch.dylib...[0m[K[2K[2mLocating external symbol file for libdyld.dylib...[0m[K[2K[2mParsing symbol table for libdyld.dylib...[0m[K[2K[2mLocating external symbol file for libkeymgr.dylib...[0m[K[2K[2mParsing symbol table for libkeymgr.dylib...[0m[K[2K[2mLocating external symbol file for libmacho.dylib...[0m[K[2K[2mParsing symbol table for libmacho.dylib...[0m[K[2K[2mLocating external symbol file for libquarantine.dylib...[0m[K[2K[2mParsing symbol table for libquarantine.dylib...[0m[K[2K[2mLocating external symbol file for libremovefile.dylib...[0m[K[2K[2mParsing symbol table for libremovefile.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_asl.dylib...[0m[K[2K[2mParsing symbol table for libsystem_asl.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_blocks.dylib...[0m[K[2K[2mParsing symbol table for libsystem_blocks.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_c.dylib...[0m[K[2K[2mParsing symbol table for libsystem_c.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_collections.dylib...[0m[K[2K[2mParsing symbol table for libsystem_collections.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_configuration.dylib...[0m[K[2K[2mParsing symbol table for libsystem_configuration.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_containermanager.dylib...[0m[K[2K[2mParsing symbol table for libsystem_containermanager.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_coreservices.dylib...[0m[K[2K[2mParsing symbol table for libsystem_coreservices.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_darwin.dylib...[0m[K[2K[2mParsing symbol table for libsystem_darwin.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_dnssd.dylib...[0m[K[2K[2mParsing symbol table for libsystem_dnssd.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_featureflags.dylib...[0m[K[2K[2mParsing symbol table for libsystem_featureflags.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_info.dylib...[0m[K[2K[2mParsing symbol table for libsystem_info.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_m.dylib...[0m[K[2K[2mParsing symbol table for libsystem_m.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_malloc.dylib...[0m[K[2K[2mParsing symbol table for libsystem_malloc.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_networkextension.dylib...[0m[K[2K[2mParsing symbol table for libsystem_networkextension.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_notify.dylib...[0m[K[2K[2mParsing symbol table for libsystem_notify.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_sandbox.dylib...[0m[K[2K[2mParsing symbol table for libsystem_sandbox.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_secinit.dylib...[0m[K[2K[2mParsing symbol table for libsystem_secinit.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_kernel.dylib...[0m[K[2K[2mParsing symbol table for libsystem_kernel.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_platform.dylib...[0m[K[2K[2mParsing symbol table for libsystem_platform.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_pthread.dylib...[0m[K[2K[2mParsing symbol table for libsystem_pthread.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_symptoms.dylib...[0m[K[2K[2mParsing symbol table for libsystem_symptoms.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_trace.dylib...[0m[K[2K[2mParsing symbol table for libsystem_trace.dylib...[0m[K[2K[2mLocating external symbol file for libunwind.dylib...[0m[K[2K[2mParsing symbol table for libunwind.dylib...[0m[K[2K[2mLocating external symbol file for libxpc.dylib...[0m[K[2K[2mParsing symbol table for libxpc.dylib...[0m[K[2K[2mLocating external symbol file for libobjc.A.dylib...[0m[K[2K[2mParsing symbol table for libobjc.A.dylib...[0m[K[2K[2mLocating external symbol file for liboah.dylib...[0m[K[2K[2mParsing symbol table for liboah.dylib...[0m[K[2K[2mParsing symbol table for program...[0m[K[2KCurrent executable set to '/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode/program' (arm64).
(lldb) [1G[2m(lldb) [0m[8Gexit[1G[2m(lldb) [0m[12Gn[K[1G[2m(lldb) [0m[9Gframe variable[1G[2m(lldb) [0m[22G[8Gn[K[1G[2m(lldb) [0m[9Gs[1G[2m(lldb) [0m[9Grun[1G[2m(lldb) [0m[11Gb main.cpp:106[1G[2m(lldb) [0m[22G
Breakpoint 1: where = program`main + 4416 at main.cpp:106:7, address = 0x000000010000e264
(lldb) [1G[2m(lldb) [0m[8Grun
Process 7230 launched: '/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode/program' (arm64)
  Here is the List of all the Staff in the R&D Department: 
  ------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

   Josh   1   Technology Specialist   3000.00      2015

   Mary   2         Project Manager   5500.00      2010

   Marc   3    Research Team Leader   8000.00      2007

   Mike  11        Multimedia Prog.   2500.00      2014

  Julie  12     Mainframe Sys.Prog.   2150.00      2013

 Albert  13                OS Prog.   2300.00      2015

   John  21    Senior Software Eng.   4899.00      2011

 Connor  24      Software Developer   1900.00      2017
  Here is the List of all the Staff in the IT Department: 
  ------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

    Roy  32           Network Prog.   1900.00      2016

   Jane  35                  Tester   1500.00      2018

 Removing Mike from the company: Succeeded
 -------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

   Josh   1   Technology Specialist   3000.00      2015

   Mary   2         Project Manager   5500.00      2010

   Marc   3    Research Team Leader   8000.00      2007

  Julie  12     Mainframe Sys.Prog.   2150.00      2013

 Albert  13                OS Prog.   2300.00      2015

   John  21    Senior Software Eng.   4899.00      2011

 Connor  24      Software Developer   1900.00      2017

  Here is the List of all the Programmers who know C++ in the R&D Department: 
  ---------------------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

  Julie  12     Mainframe Sys.Prog.   2150.00      2013      Mary         5         C++

 Albert  13                OS Prog.   2300.00      2015      Mary         9         C++

 Listing All Project IDs:  5 9 6 8
-------------------------
Process 7230 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mbreakpoint 1.1[0m
    frame #0: [33m0x000000010000e264[0m program`main at [36mmain.cpp[0m:[33m106[0m:[33m7[0m
[33m  [0m 103 		cout << "\n-------------------------\n";
[33m  [0m 104 	
[33m  [0m 105 		
[33m->[0m 106 		cout [4m<<[0m "The Highest R&D Employee Salary is: " << RnD.CalculateMaxSalary(RnD.EMPLOYEE) << endl;
[33m  [0m 107 		cout << "The Highest R&D Programmer Salary is: " << RnD.CalculateMaxSalary(RnD.PROGRAMMER) << endl;
[33m  [0m 108 		cout << "The Highest R&D Software Architect Salary is: " << RnD.CalculateMaxSalary(RnD.SOFTWAREARCHITECTS) << endl;
[33m  [0m 109 		cout << "\n";
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gframe variable
(Department) RnD = {
  Name = "Research and Development"
  ID = -1
  Employees = 0x0000600000201260 size=3
  Programmers = 0x0000600000201280 size=2
  SoftwareArchitects = 0x00006000002012a0 size=2
}
(Department) IT = {
  Name = "Info And Tech"
  ID = -1
  Employees = 0x0000600000201240 size=0
  Programmers = 0x00006000002012c0 size=2
  SoftwareArchitects = 0x00006000002012e0 size=0
}
(Employee) E1 = (name = "Josh", age = 0, gender = '\0', ID = 1, phoneNumber = "", jobTitle = "Technology Specialist", salary = 3000, HireYear = 2015)
(Employee) E2 = (name = "Mary", age = 0, gender = '\0', ID = 2, phoneNumber = "", jobTitle = "Project Manager", salary = 5500, HireYear = 2010)
(Employee) E3 = (name = "Marc", age = 0, gender = '\0', ID = 3, phoneNumber = "", jobTitle = "Research Team Leader", salary = 8000, HireYear = 2007)
(Programmer) P1 = {
  Employee = (name = "Mike", age = 0, gender = '\0', ID = 11, phoneNumber = "", jobTitle = "Multimedia Prog.", salary = 2500, HireYear = 2014)
  supervisorName = "Mary"
  ProjectID = 5
  Language = "CSS"
}
(Programmer) P2 = {
  Employee = (name = "Julie", age = 0, gender = '\0', ID = 12, phoneNumber = "", jobTitle = "Mainframe Sys.Prog.", salary = 2150, HireYear = 2013)
  supervisorName = "Mary"
  ProjectID = 5
  Language = "C++"
}
(Programmer) P3 = {
  Employee = (name = "Albert", age = 0, gender = '\0', ID = 13, phoneNumber = "", jobTitle = "OS Prog.", salary = 2300, HireYear = 2015)
  supervisorName = "Mary"
  ProjectID = 9
  Language = "C++"
}
(SoftwareArchitect) SA1 = {
  Employee = (name = "John", age = 1107296256, gender = '\0', ID = 21, phoneNumber = "", jobTitle = "Senior Software Eng.", salary = 4899, HireYear = 2011)
  supervisorName = "Marc"
  ProjectID = 6
  experienceYears = 7
}
(SoftwareArchitect) SA2 = {
  Employee = (name = "Connor", age = 311384, gender = '\x01', ID = 24, phoneNumber = "", jobTitle = "Software Developer", salary = 1900, HireYear = 2017)
  supervisorName = "John"
  ProjectID = 8
  experienceYears = 0
}
(Programmer) P4 = {
  Employee = (name = "Roy", age = 650498728, gender = '\x02', ID = 32, phoneNumber = "", jobTitle = "Network Prog.", salary = 1900, HireYear = 2016)
  supervisorName = "N/A"
  ProjectID = 7
  Language = "JAVA"
}
(Programmer) P5 = {
  Employee = (name = "Jane", age = 0, gender = '\0', ID = 35, phoneNumber = "", jobTitle = "Tester", salary = 1500, HireYear = 2018)
  supervisorName = "Roy"
  ProjectID = 7
  Language = "JAVA"
}
(std::vector<Employee *, std::allocator<Employee *> > *) AllRnDEmployees1 = 0x0000600000201300 size=8
(std::vector<Employee *, std::allocator<Employee *> > *) AllITEmployees = 0x0000600000201340 size=2
(std::vector<Employee *, std::allocator<Employee *> > *) AllRnDEmployees2 = 0x0000600000201360 size=7
(std::vector<Programmer, std::allocator<Programmer> > *) CppProgrammers = 0x0000600000201380 size=2
(std::vector<int, std::allocator<int> > *) AllProjects = 0x00006000002013a0 size=4
(lldb) [1G[2m(lldb) [0m[8Grun[K[1G[2m(lldb) [0m[10G[K[1G[2m(lldb) [0m[9G[K[1G[2m(lldb) [0m[8Grun
There is a running process, kill it and restart?: [Y/n] Y
Process 7230 exited with status = 9 (0x00000009) 
Process 7244 launched: '/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode/program' (arm64)
  Here is the List of all the Staff in the R&D Department: 
  ------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

   Josh   1   Technology Specialist   3000.00      2015

   Mary   2         Project Manager   5500.00      2010

   Marc   3    Research Team Leader   8000.00      2007

   Mike  11        Multimedia Prog.   2500.00      2014

  Julie  12     Mainframe Sys.Prog.   2150.00      2013

 Albert  13                OS Prog.   2300.00      2015

   John  21    Senior Software Eng.   4899.00      2011

 Connor  24      Software Developer   1900.00      2017
  Here is the List of all the Staff in the IT Department: 
  ------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

    Roy  32           Network Prog.   1900.00      2016

   Jane  35                  Tester   1500.00      2018

 Removing Mike from the company: Succeeded
 -------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

   Josh   1   Technology Specialist   3000.00      2015

   Mary   2         Project Manager   5500.00      2010

   Marc   3    Research Team Leader   8000.00      2007

  Julie  12     Mainframe Sys.Prog.   2150.00      2013

 Albert  13                OS Prog.   2300.00      2015

   John  21    Senior Software Eng.   4899.00      2011

 Connor  24      Software Developer   1900.00      2017

  Here is the List of all the Programmers who know C++ in the R&D Department: 
  ---------------------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

  Julie  12     Mainframe Sys.Prog.   2150.00      2013      Mary         5         C++

 Albert  13                OS Prog.   2300.00      2015      Mary         9         C++

 Listing All Project IDs:  5 9 6 8
-------------------------
Process 7244 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mbreakpoint 1.1[0m
    frame #0: [33m0x000000010000e264[0m program`main at [36mmain.cpp[0m:[33m106[0m:[33m7[0m
[33m  [0m 103 		cout << "\n-------------------------\n";
[33m  [0m 104 	
[33m  [0m 105 		
[33m->[0m 106 		cout [4m<<[0m "The Highest R&D Employee Salary is: " << RnD.CalculateMaxSalary(RnD.EMPLOYEE) << endl;
[33m  [0m 107 		cout << "The Highest R&D Programmer Salary is: " << RnD.CalculateMaxSalary(RnD.PROGRAMMER) << endl;
[33m  [0m 108 		cout << "The Highest R&D Software Architect Salary is: " << RnD.CalculateMaxSalary(RnD.SOFTWAREARCHITECTS) << endl;
[33m  [0m 109 		cout << "\n";
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gbr list
Current breakpoints:
1: file = 'main.cpp', line = 106, exact_match = 0, locations = 1, resolved = 1, hit count = 2
  1.1: where = program`main + 4416 at main.cpp:106:7, address = 0x000000010000e264, resolved, hit count = 2 

(lldb) [1G[2m(lldb) [0m[8Gel 1
[0;1;31merror: [0m'el' is not a valid command.
(lldb) [1G[2m(lldb) [0m[8Gdel 1
[0;1;31merror: [0m'del' is not a valid command.
(lldb) [1G[2m(lldb) [0m[8Gbr del 1.1
0 breakpoints deleted; 1 breakpoint locations disabled.
(lldb) [1G[2m(lldb) [0m[8Gbr del 1
1 breakpoints deleted; 0 breakpoint locations disabled.
(lldb) [1G[2m(lldb) [0m[8Grun
There is a running process, kill it and restart?: [Y/n] Y
Process 7244 exited with status = 9 (0x00000009) 
Process 7252 launched: '/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode/program' (arm64)
  Here is the List of all the Staff in the R&D Department: 
  ------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

   Josh   1   Technology Specialist   3000.00      2015

   Mary   2         Project Manager   5500.00      2010

   Marc   3    Research Team Leader   8000.00      2007

   Mike  11        Multimedia Prog.   2500.00      2014

  Julie  12     Mainframe Sys.Prog.   2150.00      2013

 Albert  13                OS Prog.   2300.00      2015

   John  21    Senior Software Eng.   4899.00      2011

 Connor  24      Software Developer   1900.00      2017
  Here is the List of all the Staff in the IT Department: 
  ------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

    Roy  32           Network Prog.   1900.00      2016

   Jane  35                  Tester   1500.00      2018

 Removing Mike from the company: Succeeded
 -------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

   Josh   1   Technology Specialist   3000.00      2015

   Mary   2         Project Manager   5500.00      2010

   Marc   3    Research Team Leader   8000.00      2007

  Julie  12     Mainframe Sys.Prog.   2150.00      2013

 Albert  13                OS Prog.   2300.00      2015

   John  21    Senior Software Eng.   4899.00      2011

 Connor  24      Software Developer   1900.00      2017

  Here is the List of all the Programmers who know C++ in the R&D Department: 
  ---------------------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

  Julie  12     Mainframe Sys.Prog.   2150.00      2013      Mary         5         C++

 Albert  13                OS Prog.   2300.00      2015      Mary         9         C++

 Listing All Project IDs:  5 9 6 8
-------------------------
The Highest R&D Employee Salary is: 8000.00
The Highest R&D Programmer Salary is: 2300.00
The Highest R&D Software Architect Salary is: 1900.00

The Average R&D Employee Salary is: 2666
The Average R&D Programmer Salary is: 1150
The Average R&D Software Architect Salary is: 3399

The Average IT Employee Salary is: 0
The Average IT Programmer Salary is: 750
The Average IT Software Architect Salary is: 0

Process 7252 exited with status = 0 (0x00000000) 
(lldb) [1G[2m(lldb) [0m[8Grun[1G[2m(lldb) [0m[11Gbr del 1[1G[2m(lldb) [0m[16G.1[1G[2m(lldb) [0m[18G[8G[3Pdel 1[K[1G[2m(lldb) [0m[13G[8Gel 1[K[1G[2m(lldb) [0m[12Gbr list[1G[2m(lldb) [0m[15G[8Grun[K[1G[2m(lldb) [0m[11Gframe variable[1G[2m(lldb) [0m[22G[8Grun[K[1G[2m(lldb) [0m[11Gb main.cpp:106[1G[2m(lldb) [0m[22G
Breakpoint 2: where = program`main + 4416 at main.cpp:106:7, address = 0x000000010000e264
(lldb) [1G[2m(lldb) [0m[8Grun
Process 7260 launched: '/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode/program' (arm64)
  Here is the List of all the Staff in the R&D Department: 
  ------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

   Josh   1   Technology Specialist   3000.00      2015

   Mary   2         Project Manager   5500.00      2010

   Marc   3    Research Team Leader   8000.00      2007

   Mike  11        Multimedia Prog.   2500.00      2014

  Julie  12     Mainframe Sys.Prog.   2150.00      2013

 Albert  13                OS Prog.   2300.00      2015

   John  21    Senior Software Eng.   4899.00      2011

 Connor  24      Software Developer   1900.00      2017
  Here is the List of all the Staff in the IT Department: 
  ------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

    Roy  32           Network Prog.   1900.00      2016

   Jane  35                  Tester   1500.00      2018

 Removing Mike from the company: Succeeded
 -------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

   Josh   1   Technology Specialist   3000.00      2015

   Mary   2         Project Manager   5500.00      2010

   Marc   3    Research Team Leader   8000.00      2007

  Julie  12     Mainframe Sys.Prog.   2150.00      2013

 Albert  13                OS Prog.   2300.00      2015

   John  21    Senior Software Eng.   4899.00      2011

 Connor  24      Software Developer   1900.00      2017

  Here is the List of all the Programmers who know C++ in the R&D Department: 
  ---------------------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

  Julie  12     Mainframe Sys.Prog.   2150.00      2013      Mary         5         C++

 Albert  13                OS Prog.   2300.00      2015      Mary         9         C++

 Listing All Project IDs:  5 9 6 8
-------------------------
Process 7260 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mbreakpoint 2.1[0m
    frame #0: [33m0x000000010000e264[0m program`main at [36mmain.cpp[0m:[33m106[0m:[33m7[0m
[33m  [0m 103 		cout << "\n-------------------------\n";
[33m  [0m 104 	
[33m  [0m 105 		
[33m->[0m 106 		cout [4m<<[0m "The Highest R&D Employee Salary is: " << RnD.CalculateMaxSalary(RnD.EMPLOYEE) << endl;
[33m  [0m 107 		cout << "The Highest R&D Programmer Salary is: " << RnD.CalculateMaxSalary(RnD.PROGRAMMER) << endl;
[33m  [0m 108 		cout << "The Highest R&D Software Architect Salary is: " << RnD.CalculateMaxSalary(RnD.SOFTWAREARCHITECTS) << endl;
[33m  [0m 109 		cout << "\n";
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
The Highest R&D Employee Salary is: 8000.00
Process 7260 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x000000010000e2b4[0m program`main at [36mmain.cpp[0m:[33m107[0m:[33m7[0m
[33m  [0m 104 	
[33m  [0m 105 		
[33m  [0m 106 		cout << "The Highest R&D Employee Salary is: " << RnD.CalculateMaxSalary(RnD.EMPLOYEE) << endl;
[33m->[0m 107 		cout [4m<<[0m "The Highest R&D Programmer Salary is: " << RnD.CalculateMaxSalary(RnD.PROGRAMMER) << endl;
[33m  [0m 108 		cout << "The Highest R&D Software Architect Salary is: " << RnD.CalculateMaxSalary(RnD.SOFTWAREARCHITECTS) << endl;
[33m  [0m 109 		cout << "\n";
[33m  [0m 110 		cout << "The Average R&D Employee Salary is: " << RnD.CalculateAverageSalary(RnD.EMPLOYEE) << endl;
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
The Highest R&D Programmer Salary is: 2300.00
Process 7260 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x000000010000e304[0m program`main at [36mmain.cpp[0m:[33m108[0m:[33m7[0m
[33m  [0m 105 		
[33m  [0m 106 		cout << "The Highest R&D Employee Salary is: " << RnD.CalculateMaxSalary(RnD.EMPLOYEE) << endl;
[33m  [0m 107 		cout << "The Highest R&D Programmer Salary is: " << RnD.CalculateMaxSalary(RnD.PROGRAMMER) << endl;
[33m->[0m 108 		cout [4m<<[0m "The Highest R&D Software Architect Salary is: " << RnD.CalculateMaxSalary(RnD.SOFTWAREARCHITECTS) << endl;
[33m  [0m 109 		cout << "\n";
[33m  [0m 110 		cout << "The Average R&D Employee Salary is: " << RnD.CalculateAverageSalary(RnD.EMPLOYEE) << endl;
[33m  [0m 111 		cout << "The Average R&D Programmer Salary is: " << RnD.CalculateAverageSalary(RnD.PROGRAMMER) << endl;
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gframe variable
(Department) RnD = {
  Name = "Research and Development"
  ID = -1
  Employees = 0x0000600000201220 size=3
  Programmers = 0x0000600000201240 size=2
  SoftwareArchitects = 0x0000600000201260 size=2
}
(Department) IT = {
  Name = "Info And Tech"
  ID = -1
  Employees = 0x00006000002011a0 size=0
  Programmers = 0x0000600000201280 size=2
  SoftwareArchitects = 0x00006000002012a0 size=0
}
(Employee) E1 = (name = "Josh", age = 0, gender = '\0', ID = 1, phoneNumber = "", jobTitle = "Technology Specialist", salary = 3000, HireYear = 2015)
(Employee) E2 = (name = "Mary", age = 0, gender = '\0', ID = 2, phoneNumber = "", jobTitle = "Project Manager", salary = 5500, HireYear = 2010)
(Employee) E3 = (name = "Marc", age = 0, gender = '\0', ID = 3, phoneNumber = "", jobTitle = "Research Team Leader", salary = 8000, HireYear = 2007)
(Programmer) P1 = {
  Employee = (name = "Mike", age = 0, gender = '\0', ID = 11, phoneNumber = "", jobTitle = "Multimedia Prog.", salary = 2500, HireYear = 2014)
  supervisorName = "Mary"
  ProjectID = 5
  Language = "CSS"
}
(Programmer) P2 = {
  Employee = (name = "Julie", age = 0, gender = '\0', ID = 12, phoneNumber = "", jobTitle = "Mainframe Sys.Prog.", salary = 2150, HireYear = 2013)
  supervisorName = "Mary"
  ProjectID = 5
  Language = "C++"
}
(Programmer) P3 = {
  Employee = (name = "Albert", age = 0, gender = '\0', ID = 13, phoneNumber = "", jobTitle = "OS Prog.", salary = 2300, HireYear = 2015)
  supervisorName = "Mary"
  ProjectID = 9
  Language = "C++"
}
(SoftwareArchitect) SA1 = {
  Employee = (name = "John", age = 1107296256, gender = '\0', ID = 21, phoneNumber = "", jobTitle = "Senior Software Eng.", salary = 4899, HireYear = 2011)
  supervisorName = "Marc"
  ProjectID = 6
  experienceYears = 7
}
(SoftwareArchitect) SA2 = {
  Employee = (name = "Connor", age = 311384, gender = '\x01', ID = 24, phoneNumber = "", jobTitle = "Software Developer", salary = 1900, HireYear = 2017)
  supervisorName = "John"
  ProjectID = 8
  experienceYears = 0
}
(Programmer) P4 = {
  Employee = (name = "Roy", age = 650498728, gender = '\x02', ID = 32, phoneNumber = "", jobTitle = "Network Prog.", salary = 1900, HireYear = 2016)
  supervisorName = "N/A"
  ProjectID = 7
  Language = "JAVA"
}
(Programmer) P5 = {
  Employee = (name = "Jane", age = 0, gender = '\0', ID = 35, phoneNumber = "", jobTitle = "Tester", salary = 1500, HireYear = 2018)
  supervisorName = "Roy"
  ProjectID = 7
  Language = "JAVA"
}
(std::vector<Employee *, std::allocator<Employee *> > *) AllRnDEmployees1 = 0x00006000002012c0 size=8
(std::vector<Employee *, std::allocator<Employee *> > *) AllITEmployees = 0x0000600000201300 size=2
(std::vector<Employee *, std::allocator<Employee *> > *) AllRnDEmployees2 = 0x0000600000201320 size=7
(std::vector<Programmer, std::allocator<Programmer> > *) CppProgrammers = 0x0000600000201340 size=2
(std::vector<int, std::allocator<int> > *) AllProjects = 0x0000600000201360 size=4
(lldb) [1G[2m(lldb) [0m[8Gs
Process 7260 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep in[0m
    frame #0: [33m0x000000010000280c[0m program`Department::CalculateMaxSalary(this=0x000000016fdff1b0, type=SOFTWAREARCHITECTS) at [36mDepartment.cpp[0m:[33m25[0m:[33m9[0m
[33m  [0m 22  	
[33m  [0m 23  	[32mdouble[0m Department::CalculateMaxSalary(StaffTypes type)
[33m  [0m 24  	{
[33m->[0m 25  		[32mdouble[0m [4mmax[0m = [31m0[0m;
[33m  [0m 26  		[32mdouble[0m i = [31m0[0m;
[33m  [0m 27  		[32mswitch[0m (type)
[33m  [0m 28  		{
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 7260 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100002810[0m program`Department::CalculateMaxSalary(this=0x000000016fdff1b0, type=SOFTWAREARCHITECTS) at [36mDepartment.cpp[0m:[33m26[0m:[33m9[0m
[33m  [0m 23  	[32mdouble[0m Department::CalculateMaxSalary(StaffTypes type)
[33m  [0m 24  	{
[33m  [0m 25  		[32mdouble[0m max = [31m0[0m;
[33m->[0m 26  		[32mdouble[0m [4mi[0m = [31m0[0m;
[33m  [0m 27  		[32mswitch[0m (type)
[33m  [0m 28  		{
[33m  [0m 29  		[32mcase[0m Department::EMPLOYEE:
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 7260 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100002814[0m program`Department::CalculateMaxSalary(this=0x000000016fdff1b0, type=SOFTWAREARCHITECTS) at [36mDepartment.cpp[0m:[33m27[0m:[33m10[0m
[33m  [0m 24  	{
[33m  [0m 25  		[32mdouble[0m max = [31m0[0m;
[33m  [0m 26  		[32mdouble[0m i = [31m0[0m;
[33m->[0m 27  		[32mswitch[0m ([4mtype[0m)
[33m  [0m 28  		{
[33m  [0m 29  		[32mcase[0m Department::EMPLOYEE:
[33m  [0m 30  			[32mfor[0m (i = [31m0[0m; i < Employees->size(); i++)
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 7260 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100002998[0m program`Department::CalculateMaxSalary(this=0x000000016fdff1b0, type=SOFTWAREARCHITECTS) at [36mDepartment.cpp[0m:[33m50[0m:[33m10[0m
[33m  [0m 47  			}
[33m  [0m 48  	        [32mbreak[0m;
[33m  [0m 49  		[32mcase[0m Department::SOFTWAREARCHITECTS:
[33m->[0m 50  			[32mfor[0m (i [4m=[0m [31m0[0m; i < SoftwareArchitects->size(); i++)
[33m  [0m 51  			{
[33m  [0m 52  	
[33m  [0m 53  				[32mif[0m (SoftwareArchitects->at(i).getSalary()>max)
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 7260 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x00000001000029d0[0m program`Department::CalculateMaxSalary(this=0x000000016fdff1b0, type=SOFTWAREARCHITECTS) at [36mDepartment.cpp[0m:[33m53[0m:[33m8[0m
[33m  [0m 50  			[32mfor[0m (i = [31m0[0m; i < SoftwareArchitects->size(); i++)
[33m  [0m 51  			{
[33m  [0m 52  	
[33m->[0m 53  				[32mif[0m ([4mSoftwareArchitects[0m->at(i).getSalary()>max)
[33m  [0m 54  				{
[33m  [0m 55  	                max = SoftwareArchitects->at(i).getSalary();
[33m  [0m 56  				}
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gframe variable
(Department *) this = 0x000000016fdff1b0
(Department::StaffTypes) type = SOFTWAREARCHITECTS
(double) max = 0
(double) i = 0
(lldb) [1G[2m(lldb) [0m[8Gn
Process 7260 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x00000001000029fc[0m program`Department::CalculateMaxSalary(this=0x000000016fdff1b0, type=SOFTWAREARCHITECTS) at [36mDepartment.cpp[0m:[33m55[0m:[33m23[0m
[33m  [0m 52  	
[33m  [0m 53  				[32mif[0m (SoftwareArchitects->at(i).getSalary()>max)
[33m  [0m 54  				{
[33m->[0m 55  	                max = [4mSoftwareArchitects[0m->at(i).getSalary();
[33m  [0m 56  				}
[33m  [0m 57  	                max = SoftwareArchitects->at(i).getSalary();
[33m  [0m 58  			}
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gf[K[1G[2m(lldb) [0m[8Gn
Process 7260 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100002a14[0m program`Department::CalculateMaxSalary(this=0x000000016fdff1b0, type=SOFTWAREARCHITECTS) at [36mDepartment.cpp[0m:[33m56[0m:[33m4[0m
[33m  [0m 53  				[32mif[0m (SoftwareArchitects->at(i).getSalary()>max)
[33m  [0m 54  				{
[33m  [0m 55  	                max = SoftwareArchitects->at(i).getSalary();
[33m->[0m 56  				[4m}[0m
[33m  [0m 57  	                max = SoftwareArchitects->at(i).getSalary();
[33m  [0m 58  			}
[33m  [0m 59  			[32mbreak[0m;
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gframe variable
(Department *) this = 0x000000016fdff1b0
(Department::StaffTypes) type = SOFTWAREARCHITECTS
(double) max = 4899
(double) i = 0
(lldb) [1G[2m(lldb) [0m[8Gline 57 is the problem what hw[K[1G[2m(lldb) [0m[37G[K[1G[2m(lldb) [0m[36Gwhat
[0;1;31merror: [0m'line' is not a valid command.
(lldb) [1G[2m(lldb) [0m[8Gexit
Quitting LLDB will kill one or more processes. Do you really want to proceed: [Y /n] Y
[1m[7m%[27m[1m[0m                                                                                ]7;file://corinnes-mbp.lan/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode[0m[27m[24m[Jcorinnejones@corinnes-mbp buggyCode % [K[?2004hlls[?2004l
CorinneJones.txt		program
Department.cpp			program.dSYM
Department.h			programmerClass.cpp
employeeClass.cpp		programmerClass.h
employeeClass.h			softwarearchitectClass.cpp
main.cpp			softwarearchitectClass.h
[1m[7m%[27m[1m[0m                                                                                ]7;file://corinnes-mbp.lan/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode[0m[27m[24m[Jcorinnejones@corinnes-mbp buggyCode % [K[?2004hvvim Department.cpp[?2004l
[?1049h[>4;2m[?1h=[?2004h[?1004h[1;24r[?12h[?12l[22;2t[22;1t[27m[29m[m[H[2J[?25l[24;1H"Department.cpp" [dos] 198L, 4128B[2;1H▽[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#include "Department.h"[2;1H[K[3;1H[K[5;1HDepartment::Department()
{[7;9HEmployees = new vector<Employee>();[8;9HProgrammers = new vector <Programmer>();[9;9HSoftwareArchitects = new vector<SoftwareArchitect>();[10;9HName = "";[11;9HID = 0;
}

Department::Department(string N, int id)
{[16;9HEmployees = new vector<Employee>();[17;9HProgrammers = new vector <Programmer>();[18;9HSoftwareArchitects = new vector<SoftwareArchitect>();[19;9HName = N;[20;9H(id > 0) ? ID = -1 : ID = id;
}

double Department::CalculateMaxSalary(StaffTypes type)[1;1H[?25h[?4m



[?25l
[106m{[12;1H}[6;1H[?25h[?25l[m{[12;1H}[7;8H[?25h[8;8H[9;8H[10;8H[11;8H[?25l[6;1H[106m{[12;1H}[?25h[?25l[m[6;1H{[12;1H}
[?25h
[?25l
[106m{[21;1H}[15;1H[?25h[?25l[m{[21;1H}[16;8H[?25h[17;8H[18;8H[19;8H[20;8H[?25l[15;1H[106m{[21;1H}[?25h[?25l[m[15;1H{[21;1H}
[?25h
[?25l[1;23r[23;1H
[1;24r[23;1H{[24;1H[K[23;1H[?25h[?25l[1;23r[23;1H
[1;24r[23;9Hdouble max = 0;[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;9Hdouble i = 0;[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;9Hswitch (type)[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;9H{[?25h[?25l[1;23r[23;1H
[1;24r[23;9Hcase Department::EMPLOYEE:[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;17Hfor (i = 0; i < Employees->size(); i++)[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;17H{[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;1H[?25h[?25l[1;23r[23;1H
[1;24r[23;25Hif (Employees->at(i).getSalary()>max)[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;25H{[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;33Hmax = Employees->at(i).getSalary();[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;25H}[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;17H}[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;17Hbreak;[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;9Hcase Department::PROGRAMMER:[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;17Hfor (i = 0; i < Programmers->size(); i++)[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;17H{[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;1H[?25h[?25l[1;23r[23;1H
[1;24r[23;25Hif (Programmers->at(i).getSalary()>max)[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;25H{[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;33Hmax = Programmers->at(i).getSalary();[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;25H}[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;17H}[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;9Hbreak;[?25h[?25l[1;23r[23;1H
[1;24r[23;9Hcase Department::SOFTWAREARCHITECTS:[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;17Hfor (i = 0; i < SoftwareArchitects->size(); i++)[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;17H{[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;1H[?25h[?25l[1;23r[23;1H
[1;24r[23;25Hif (SoftwareArchitects->at(i).getSalary()>max)[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;25H{[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;17Hmax = SoftwareArchitects->at(i).getSalary();[?25h[?25l[1;23r[23;1H
[1;24r[23;25H}[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;17Hmax = SoftwareArchitects->at(i).getSalary();[?25h[?25l[1;23r[23;1H
[1;24r[23;17H}[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;17Hbreak;[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;9Hdefault:[23;8H[?25h[22;8H[21;8H[20;1H             [?25l[24;1H[1m-- INSERT --[20;14H[?25h[m   max = SoftwareArchitects->a[?25lt[106m([mi[106m)[?25h[?25l([?25h[?25l[mi[?25h[?25l[1C[?25h[?25l(i).[?25hgetSalar[?25ly[106m()[?25h[?25l([?25h[?25l)[?25h[?25l[m();[?25h[?25l[106m()[m[20;60H[K[20;60H[?25h[?25l([20;59H[K[20;59H[?25h[?25l[20;58H[K[20;58H[?25h[?25l[20;57H[K[20;57H[?25h[?25l[20;56H[K[20;56H[?25h[?25l[20;55H[K[20;55H[?25h[?25l[20;54H[K[20;54H[?25h[?25l[20;53H[K[20;53H[?25h[?25l[20;52H[K[20;52H[?25h[?25l[20;51H[K[20;51H[?25h[?25l[20;50H[K[20;50H[?25h[?25l[20;49H[K[20;49H[?25h[?25l[106m([mi[106m)[m[20;48H[K[20;48H[?25h[?25l([20;47H[K[20;47H[?25h[?25l[20;46H[K[20;46H[?25h[?25l[20;45H[K[20;45H[?25h[?25l[20;44H[K[20;44H[?25h[?25l[20;43H[K[20;43H[?25h[?25l[20;42H[K[20;42H[?25h[?25l[20;41H[K[20;41H[?25h[?25l[20;40H[K[20;40H[?25h[?25l[20;39H[K[20;39H[?25h[?25l[20;38H[K[20;38H[?25h[?25l[20;37H[K[20;37H[?25h[?25l[20;36H[K[20;36H[?25h[?25l[20;35H[K[20;35H[?25h[?25l[20;34H[K[20;34H[?25h[?25l[20;33H[K[20;33H[?25h[?25l[20;32H[K[20;32H[?25h[?25l[20;31H[K[20;31H[?25h[?25l[20;30H[K[20;30H[?25h[?25l[20;29H[K[20;29H[?25h[?25l[20;28H[K[20;28H[?25h[?25l[20;27H[K[20;27H[?25h[?25l[20;26H[K[20;26H[?25h[?25l[20;25H[K[20;25H[?25h[?25l[20;24H[K[20;24H[?25h[?25l[20;23H[K[20;23H[?25h[?25l[?25h[?25l[20;21H[K[20;21H[?25h[?25l[?25h[?25l[20;19H[K[20;19H[?25h[?25l[20;18H[K[20;18H[?25h[?25l[20;17H[K[20;17H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[24;1H[K[20;9H[?25l[?25h[?25l[24;1H:[?25hwq[?25l[?2004l[>4;m"Department.cpp" [dos] 198L, 4077B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?1049l[?25h[>4;m[1m[7m%[27m[1m[0m                                                                                ]7;file://corinnes-mbp.lan/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode[0m[27m[24m[Jcorinnejones@corinnes-mbp buggyCode % [K[?2004hvim Department.cpp[18Dls                [16Dlldb program[12Dvim Department.cpp[14DemployeeClass.cpp[21Dls                   [19Dvim Department.cpp[18Dlldb program      [12Dvim main.cpp[12Dcat[9C[12Dls          [10Dlldb program[12Dclang++ *.cpp -g -O0  -o program[?2004l
[1m[7m%[27m[1m[0m                                                                                ]7;file://corinnes-mbp.lan/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode[0m[27m[24m[Jcorinnejones@corinnes-mbp buggyCode % [K[?2004hclang++ *.cpp -g -O0  -o program[32Dvim Department.cpp  [2C          [14D[18Dls                [16Dlldb program[12Dvim Department.cpp[18Dlldb program      [?2004l
(lldb) target create "program"
[2mLocating external symbol file for program...[0m[K[2K[2mLoading Apple DWARF index for program...[0m[K[2K[2mLocating external symbol file for dyld...[0m[K[2K[2mParsing symbol table for dyld...[0m[K[2K[2mLocating external symbol file for libc++.1.dylib...[0m[K[2K[2mParsing symbol table for libc++.1.dylib...[0m[K[2K[2mLocating external symbol file for libSystem.B.dylib...[0m[K[2K[2mParsing symbol table for libSystem.B.dylib...[0m[K[2K[2mLocating external symbol file for libc++abi.dylib...[0m[K[2K[2mParsing symbol table for libc++abi.dylib...[0m[K[2K[2mLocating external symbol file for libcache.dylib...[0m[K[2K[2mParsing symbol table for libcache.dylib...[0m[K[2K[2mLocating external symbol file for libcommonCrypto.dylib...[0m[K[2K[2mParsing symbol table for libcommonCrypto.dylib...[0m[K[2K[2mLocating external symbol file for libcompiler_rt.dylib...[0m[K[2K[2mParsing symbol table for libcompiler_rt.dylib...[0m[K[2K[2mLocating external symbol file for libcopyfile.dylib...[0m[K[2K[2mParsing symbol table for libcopyfile.dylib...[0m[K[2K[2mLocating external symbol file for libcorecrypto.dylib...[0m[K[2K[2mParsing symbol table for libcorecrypto.dylib...[0m[K[2K[2mLocating external symbol file for libdispatch.dylib...[0m[K[2K[2mParsing symbol table for libdispatch.dylib...[0m[K[2K[2mLocating external symbol file for libdyld.dylib...[0m[K[2K[2mParsing symbol table for libdyld.dylib...[0m[K[2K[2mLocating external symbol file for libkeymgr.dylib...[0m[K[2K[2mParsing symbol table for libkeymgr.dylib...[0m[K[2K[2mLocating external symbol file for libmacho.dylib...[0m[K[2K[2mParsing symbol table for libmacho.dylib...[0m[K[2K[2mLocating external symbol file for libquarantine.dylib...[0m[K[2K[2mParsing symbol table for libquarantine.dylib...[0m[K[2K[2mLocating external symbol file for libremovefile.dylib...[0m[K[2K[2mParsing symbol table for libremovefile.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_asl.dylib...[0m[K[2K[2mParsing symbol table for libsystem_asl.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_blocks.dylib...[0m[K[2K[2mParsing symbol table for libsystem_blocks.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_c.dylib...[0m[K[2K[2mParsing symbol table for libsystem_c.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_collections.dylib...[0m[K[2K[2mParsing symbol table for libsystem_collections.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_configuration.dylib...[0m[K[2K[2mParsing symbol table for libsystem_configuration.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_containermanager.dylib...[0m[K[2K[2mParsing symbol table for libsystem_containermanager.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_coreservices.dylib...[0m[K[2K[2mParsing symbol table for libsystem_coreservices.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_darwin.dylib...[0m[K[2K[2mParsing symbol table for libsystem_darwin.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_dnssd.dylib...[0m[K[2K[2mParsing symbol table for libsystem_dnssd.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_featureflags.dylib...[0m[K[2K[2mParsing symbol table for libsystem_featureflags.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_info.dylib...[0m[K[2K[2mParsing symbol table for libsystem_info.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_m.dylib...[0m[K[2K[2mParsing symbol table for libsystem_m.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_malloc.dylib...[0m[K[2K[2mParsing symbol table for libsystem_malloc.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_networkextension.dylib...[0m[K[2K[2mParsing symbol table for libsystem_networkextension.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_notify.dylib...[0m[K[2K[2mParsing symbol table for libsystem_notify.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_sandbox.dylib...[0m[K[2K[2mParsing symbol table for libsystem_sandbox.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_secinit.dylib...[0m[K[2K[2mParsing symbol table for libsystem_secinit.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_kernel.dylib...[0m[K[2K[2mParsing symbol table for libsystem_kernel.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_platform.dylib...[0m[K[2K[2mParsing symbol table for libsystem_platform.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_pthread.dylib...[0m[K[2K[2mParsing symbol table for libsystem_pthread.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_symptoms.dylib...[0m[K[2K[2mParsing symbol table for libsystem_symptoms.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_trace.dylib...[0m[K[2K[2mParsing symbol table for libsystem_trace.dylib...[0m[K[2K[2mLocating external symbol file for libunwind.dylib...[0m[K[2K[2mParsing symbol table for libunwind.dylib...[0m[K[2K[2mLocating external symbol file for libxpc.dylib...[0m[K[2K[2mParsing symbol table for libxpc.dylib...[0m[K[2K[2mLocating external symbol file for libobjc.A.dylib...[0m[K[2K[2mParsing symbol table for libobjc.A.dylib...[0m[K[2K[2mLocating external symbol file for liboah.dylib...[0m[K[2K[2mParsing symbol table for liboah.dylib...[0m[K[2K[2mParsing symbol table for program...[0m[K[2KCurrent executable set to '/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode/program' (arm64).
(lldb) [1G[2m(lldb) [0m[8Gbr [1G[2m(lldb) [0m[10G[K[1G[2m(lldb) [0m[9G list
Breakpoint 1: no locations (pending).
WARNING:  Unable to resolve breakpoint to any actual locations.
(lldb) [1G[2m(lldb) [0m[8Gbr list
Current breakpoints:
1: name = 'list', locations = 0 (pending)

(lldb) [1G[2m(lldb) [0m[8Gbr del 1
1 breakpoints deleted; 0 breakpoint locations disabled.
(lldb) [1G[2m(lldb) [0m[8Grun
Process 7303 launched: '/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode/program' (arm64)
  Here is the List of all the Staff in the R&D Department: 
  ------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

   Josh   1   Technology Specialist   3000.00      2015

   Mary   2         Project Manager   5500.00      2010

   Marc   3    Research Team Leader   8000.00      2007

   Mike  11        Multimedia Prog.   2500.00      2014

  Julie  12     Mainframe Sys.Prog.   2150.00      2013

 Albert  13                OS Prog.   2300.00      2015

   John  21    Senior Software Eng.   4899.00      2011

 Connor  24      Software Developer   1900.00      2017
  Here is the List of all the Staff in the IT Department: 
  ------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

    Roy  32           Network Prog.   1900.00      2016

   Jane  35                  Tester   1500.00      2018

 Removing Mike from the company: Succeeded
 -------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

   Josh   1   Technology Specialist   3000.00      2015

   Mary   2         Project Manager   5500.00      2010

   Marc   3    Research Team Leader   8000.00      2007

  Julie  12     Mainframe Sys.Prog.   2150.00      2013

 Albert  13                OS Prog.   2300.00      2015

   John  21    Senior Software Eng.   4899.00      2011

 Connor  24      Software Developer   1900.00      2017

  Here is the List of all the Programmers who know C++ in the R&D Department: 
  ---------------------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

  Julie  12     Mainframe Sys.Prog.   2150.00      2013      Mary         5         C++

 Albert  13                OS Prog.   2300.00      2015      Mary         9         C++

 Listing All Project IDs:  5 9 6 8
-------------------------
The Highest R&D Employee Salary is: 8000.00
The Highest R&D Programmer Salary is: 2300.00
The Highest R&D Software Architect Salary is: 4899.00

The Average R&D Employee Salary is: 2666
The Average R&D Programmer Salary is: 1150
The Average R&D Software Architect Salary is: 3399

The Average IT Employee Salary is: 0
The Average IT Programmer Salary is: 750
The Average IT Software Architect Salary is: 0

Process 7303 exited with status = 0 (0x00000000) 
(lldb) [1G[2m(lldb) [0m[8Gb main.cpp:110
Breakpoint 2: where = program`main + 4676 at main.cpp:110:7, address = 0x000000010000e368
(lldb) [1G[2m(lldb) [0m[8Grun
Process 7318 launched: '/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode/program' (arm64)
  Here is the List of all the Staff in the R&D Department: 
  ------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

   Josh   1   Technology Specialist   3000.00      2015

   Mary   2         Project Manager   5500.00      2010

   Marc   3    Research Team Leader   8000.00      2007

   Mike  11        Multimedia Prog.   2500.00      2014

  Julie  12     Mainframe Sys.Prog.   2150.00      2013

 Albert  13                OS Prog.   2300.00      2015

   John  21    Senior Software Eng.   4899.00      2011

 Connor  24      Software Developer   1900.00      2017
  Here is the List of all the Staff in the IT Department: 
  ------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

    Roy  32           Network Prog.   1900.00      2016

   Jane  35                  Tester   1500.00      2018

 Removing Mike from the company: Succeeded
 -------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

   Josh   1   Technology Specialist   3000.00      2015

   Mary   2         Project Manager   5500.00      2010

   Marc   3    Research Team Leader   8000.00      2007

  Julie  12     Mainframe Sys.Prog.   2150.00      2013

 Albert  13                OS Prog.   2300.00      2015

   John  21    Senior Software Eng.   4899.00      2011

 Connor  24      Software Developer   1900.00      2017

  Here is the List of all the Programmers who know C++ in the R&D Department: 
  ---------------------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

  Julie  12     Mainframe Sys.Prog.   2150.00      2013      Mary         5         C++

 Albert  13                OS Prog.   2300.00      2015      Mary         9         C++

 Listing All Project IDs:  5 9 6 8
-------------------------
The Highest R&D Employee Salary is: 8000.00
The Highest R&D Programmer Salary is: 2300.00
The Highest R&D Software Architect Salary is: 4899.00

Process 7318 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mbreakpoint 2.1[0m
    frame #0: [33m0x000000010000e368[0m program`main at [36mmain.cpp[0m:[33m110[0m:[33m7[0m
[33m  [0m 107 		cout << "The Highest R&D Programmer Salary is: " << RnD.CalculateMaxSalary(RnD.PROGRAMMER) << endl;
[33m  [0m 108 		cout << "The Highest R&D Software Architect Salary is: " << RnD.CalculateMaxSalary(RnD.SOFTWAREARCHITECTS) << endl;
[33m  [0m 109 		cout << "\n";
[33m->[0m 110 		cout [4m<<[0m "The Average R&D Employee Salary is: " << RnD.CalculateAverageSalary(RnD.EMPLOYEE) << endl;
[33m  [0m 111 		cout << "The Average R&D Programmer Salary is: " << RnD.CalculateAverageSalary(RnD.PROGRAMMER) << endl;
[33m  [0m 112 		cout << "The Average R&D Software Architect Salary is: " << RnD.CalculateAverageSalary(RnD.SOFTWAREARCHITECTS) << endl;
[33m  [0m 113 		cout << "\n";
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gs
Process 7318 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep in[0m
    frame #0: [33m0x0000000100002c34[0m program`Department::CalculateAverageSalary(this=0x000000016fdff1b0, type=EMPLOYEE) at [36mDepartment.cpp[0m:[33m70[0m:[33m6[0m
[33m  [0m 67  	[32mint[0m Department::CalculateAverageSalary(StaffTypes type)
[33m  [0m 68  	{
[33m  [0m 69  	    [32mdouble[0m sum;
[33m->[0m 70  		sum [4m=[0m [31m0.0[0m;
[33m  [0m 71  		[32mint[0m i;
[33m  [0m 72  		[32mswitch[0m (type)
[33m  [0m 73  		{
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gframe variable
(Department *) this = 0x000000016fdff1b0
(Department::StaffTypes) type = EMPLOYEE
(double) sum = 3.9441773189546088E-314
(int) i = 1
(lldb) [1G[2m(lldb) [0m[8Gn
Process 7318 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100002c38[0m program`Department::CalculateAverageSalary(this=0x000000016fdff1b0, type=EMPLOYEE) at [36mDepartment.cpp[0m:[33m72[0m:[33m10[0m
[33m  [0m 69  	    [32mdouble[0m sum;
[33m  [0m 70  		sum = [31m0.0[0m;
[33m  [0m 71  		[32mint[0m i;
[33m->[0m 72  		[32mswitch[0m ([4mtype[0m)
[33m  [0m 73  		{
[33m  [0m 74  		[32mcase[0m Department::EMPLOYEE:		
[33m  [0m 75  			[32mfor[0m (i = [31m0[0m; i < Employees->size(); i++)
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 7318 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100002c78[0m program`Department::CalculateAverageSalary(this=0x000000016fdff1b0, type=EMPLOYEE) at [36mDepartment.cpp[0m:[33m75[0m:[33m10[0m
[33m  [0m 72  		[32mswitch[0m (type)
[33m  [0m 73  		{
[33m  [0m 74  		[32mcase[0m Department::EMPLOYEE:		
[33m->[0m 75  			[32mfor[0m (i [4m=[0m [31m0[0m; i < Employees->size(); i++)
[33m  [0m 76  			{
[33m  [0m 77  				sum = Employees->at(i).getSalary();
[33m  [0m 78  			}
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 7318 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100002cac[0m program`Department::CalculateAverageSalary(this=0x000000016fdff1b0, type=EMPLOYEE) at [36mDepartment.cpp[0m:[33m77[0m:[33m10[0m
[33m  [0m 74  		[32mcase[0m Department::EMPLOYEE:		
[33m  [0m 75  			[32mfor[0m (i = [31m0[0m; i < Employees->size(); i++)
[33m  [0m 76  			{
[33m->[0m 77  				sum = [4mEmployees[0m->at(i).getSalary();
[33m  [0m 78  			}
[33m  [0m 79  			[32mbreak[0m;
[33m  [0m 80  		[32mcase[0m Department::PROGRAMMER:
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 7318 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100002cc0[0m program`Department::CalculateAverageSalary(this=0x000000016fdff1b0, type=EMPLOYEE) at [36mDepartment.cpp[0m:[33m78[0m:[33m3[0m
[33m  [0m 75  			[32mfor[0m (i = [31m0[0m; i < Employees->size(); i++)
[33m  [0m 76  			{
[33m  [0m 77  				sum = Employees->at(i).getSalary();
[33m->[0m 78  			[4m}[0m
[33m  [0m 79  			[32mbreak[0m;
[33m  [0m 80  		[32mcase[0m Department::PROGRAMMER:
[33m  [0m 81  			[32mfor[0m (i = [31m0[0m; i < Programmers->size(); i++)
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gframe variable
(Department *) this = 0x000000016fdff1b0
(Department::StaffTypes) type = EMPLOYEE
(double) sum = 3000
(int) i = 0
(lldb) [1G[2m(lldb) [0m[8Gn
Process 7318 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100002cc4[0m program`Department::CalculateAverageSalary(this=0x000000016fdff1b0, type=EMPLOYEE) at [36mDepartment.cpp[0m:[33m75[0m:[33m39[0m
[33m  [0m 72  		[32mswitch[0m (type)
[33m  [0m 73  		{
[33m  [0m 74  		[32mcase[0m Department::EMPLOYEE:		
[33m->[0m 75  			[32mfor[0m (i = [31m0[0m; i < Employees->size(); i[4m++[0m)
[33m  [0m 76  			{
[33m  [0m 77  				sum = Employees->at(i).getSalary();
[33m  [0m 78  			}
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 7318 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100002cac[0m program`Department::CalculateAverageSalary(this=0x000000016fdff1b0, type=EMPLOYEE) at [36mDepartment.cpp[0m:[33m77[0m:[33m10[0m
[33m  [0m 74  		[32mcase[0m Department::EMPLOYEE:		
[33m  [0m 75  			[32mfor[0m (i = [31m0[0m; i < Employees->size(); i++)
[33m  [0m 76  			{
[33m->[0m 77  				sum = [4mEmployees[0m->at(i).getSalary();
[33m  [0m 78  			}
[33m  [0m 79  			[32mbreak[0m;
[33m  [0m 80  		[32mcase[0m Department::PROGRAMMER:
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 7318 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100002cc0[0m program`Department::CalculateAverageSalary(this=0x000000016fdff1b0, type=EMPLOYEE) at [36mDepartment.cpp[0m:[33m78[0m:[33m3[0m
[33m  [0m 75  			[32mfor[0m (i = [31m0[0m; i < Employees->size(); i++)
[33m  [0m 76  			{
[33m  [0m 77  				sum = Employees->at(i).getSalary();
[33m->[0m 78  			[4m}[0m
[33m  [0m 79  			[32mbreak[0m;
[33m  [0m 80  		[32mcase[0m Department::PROGRAMMER:
[33m  [0m 81  			[32mfor[0m (i = [31m0[0m; i < Programmers->size(); i++)
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 7318 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100002cc4[0m program`Department::CalculateAverageSalary(this=0x000000016fdff1b0, type=EMPLOYEE) at [36mDepartment.cpp[0m:[33m75[0m:[33m39[0m
[33m  [0m 72  		[32mswitch[0m (type)
[33m  [0m 73  		{
[33m  [0m 74  		[32mcase[0m Department::EMPLOYEE:		
[33m->[0m 75  			[32mfor[0m (i = [31m0[0m; i < Employees->size(); i[4m++[0m)
[33m  [0m 76  			{
[33m  [0m 77  				sum = Employees->at(i).getSalary();
[33m  [0m 78  			}
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 7318 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100002cac[0m program`Department::CalculateAverageSalary(this=0x000000016fdff1b0, type=EMPLOYEE) at [36mDepartment.cpp[0m:[33m77[0m:[33m10[0m
[33m  [0m 74  		[32mcase[0m Department::EMPLOYEE:		
[33m  [0m 75  			[32mfor[0m (i = [31m0[0m; i < Employees->size(); i++)
[33m  [0m 76  			{
[33m->[0m 77  				sum = [4mEmployees[0m->at(i).getSalary();
[33m  [0m 78  			}
[33m  [0m 79  			[32mbreak[0m;
[33m  [0m 80  		[32mcase[0m Department::PROGRAMMER:
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 7318 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100002cc0[0m program`Department::CalculateAverageSalary(this=0x000000016fdff1b0, type=EMPLOYEE) at [36mDepartment.cpp[0m:[33m78[0m:[33m3[0m
[33m  [0m 75  			[32mfor[0m (i = [31m0[0m; i < Employees->size(); i++)
[33m  [0m 76  			{
[33m  [0m 77  				sum = Employees->at(i).getSalary();
[33m->[0m 78  			[4m}[0m
[33m  [0m 79  			[32mbreak[0m;
[33m  [0m 80  		[32mcase[0m Department::PROGRAMMER:
[33m  [0m 81  			[32mfor[0m (i = [31m0[0m; i < Programmers->size(); i++)
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gframe f[K[1G[2m(lldb) [0m[14Gvariable
(Department *) this = 0x000000016fdff1b0
(Department::StaffTypes) type = EMPLOYEE
(double) sum = 8000
(int) i = 2
(lldb) [1G[2m(lldb) [0m[8Gn
Process 7318 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100002cc4[0m program`Department::CalculateAverageSalary(this=0x000000016fdff1b0, type=EMPLOYEE) at [36mDepartment.cpp[0m:[33m75[0m:[33m39[0m
[33m  [0m 72  		[32mswitch[0m (type)
[33m  [0m 73  		{
[33m  [0m 74  		[32mcase[0m Department::EMPLOYEE:		
[33m->[0m 75  			[32mfor[0m (i = [31m0[0m; i < Employees->size(); i[4m++[0m)
[33m  [0m 76  			{
[33m  [0m 77  				sum = Employees->at(i).getSalary();
[33m  [0m 78  			}
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 7318 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100002cd4[0m program`Department::CalculateAverageSalary(this=0x000000016fdff1b0, type=EMPLOYEE) at [36mDepartment.cpp[0m:[33m79[0m:[33m3[0m
[33m  [0m 76  			{
[33m  [0m 77  				sum = Employees->at(i).getSalary();
[33m  [0m 78  			}
[33m->[0m 79  			[32m[4mbreak[0m[0m;
[33m  [0m 80  		[32mcase[0m Department::PROGRAMMER:
[33m  [0m 81  			[32mfor[0m (i = [31m0[0m; i < Programmers->size(); i++)
[33m  [0m 82  			{
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gframe variable
(Department *) this = 0x000000016fdff1b0
(Department::StaffTypes) type = EMPLOYEE
(double) sum = 8000
(int) i = 3
(lldb) [1G[2m(lldb) [0m[8Gn
Process 7318 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100002db0[0m program`Department::CalculateAverageSalary(this=0x000000016fdff1b0, type=EMPLOYEE) at [36mDepartment.cpp[0m:[33m97[0m:[33m12[0m
[33m  [0m 94  			[32mbreak[0m;
[33m  [0m 95  		}
[33m  [0m 96  	
[33m->[0m 97  	    [32mreturn[0m [4msum[0m/i;
[33m  [0m 98  	}
[33m  [0m 99  	
[33m  [0m 100 	vector<Employee*> *Department::getAllStaff()
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gframe variable
(Department *) this = 0x000000016fdff1b0
(Department::StaffTypes) type = EMPLOYEE
(double) sum = 8000
(int) i = 3
(lldb) [1G[2m(lldb) [0m[8Gc
Process 7318 resuming
The Average R&D Employee Salary is: 2666
The Average R&D Programmer Salary is: 1150
The Average R&D Software Architect Salary is: 3399

The Average IT Employee Salary is: 0
The Average IT Programmer Salary is: 750
The Average IT Software Architect Salary is: 0

Process 7318 exited with status = 0 (0x00000000) 
(lldb) [1G[2m(lldb) [0m[8Gru[K[1G[2m(lldb) [0m[9G[K[1G[2m(lldb) [0m[8Grun
Process 7446 launched: '/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode/program' (arm64)
  Here is the List of all the Staff in the R&D Department: 
  ------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

   Josh   1   Technology Specialist   3000.00      2015

   Mary   2         Project Manager   5500.00      2010

   Marc   3    Research Team Leader   8000.00      2007

   Mike  11        Multimedia Prog.   2500.00      2014

  Julie  12     Mainframe Sys.Prog.   2150.00      2013

 Albert  13                OS Prog.   2300.00      2015

   John  21    Senior Software Eng.   4899.00      2011

 Connor  24      Software Developer   1900.00      2017
  Here is the List of all the Staff in the IT Department: 
  ------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

    Roy  32           Network Prog.   1900.00      2016

   Jane  35                  Tester   1500.00      2018

 Removing Mike from the company: Succeeded
 -------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

   Josh   1   Technology Specialist   3000.00      2015

   Mary   2         Project Manager   5500.00      2010

   Marc   3    Research Team Leader   8000.00      2007

  Julie  12     Mainframe Sys.Prog.   2150.00      2013

 Albert  13                OS Prog.   2300.00      2015

   John  21    Senior Software Eng.   4899.00      2011

 Connor  24      Software Developer   1900.00      2017

  Here is the List of all the Programmers who know C++ in the R&D Department: 
  ---------------------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

  Julie  12     Mainframe Sys.Prog.   2150.00      2013      Mary         5         C++

 Albert  13                OS Prog.   2300.00      2015      Mary         9         C++

 Listing All Project IDs:  5 9 6 8
-------------------------
The Highest R&D Employee Salary is: 8000.00
The Highest R&D Programmer Salary is: 2300.00
The Highest R&D Software Architect Salary is: 4899.00

Process 7446 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mbreakpoint 2.1[0m
    frame #0: [33m0x000000010000e368[0m program`main at [36mmain.cpp[0m:[33m110[0m:[33m7[0m
[33m  [0m 107 		cout << "The Highest R&D Programmer Salary is: " << RnD.CalculateMaxSalary(RnD.PROGRAMMER) << endl;
[33m  [0m 108 		cout << "The Highest R&D Software Architect Salary is: " << RnD.CalculateMaxSalary(RnD.SOFTWAREARCHITECTS) << endl;
[33m  [0m 109 		cout << "\n";
[33m->[0m 110 		cout [4m<<[0m "The Average R&D Employee Salary is: " << RnD.CalculateAverageSalary(RnD.EMPLOYEE) << endl;
[33m  [0m 111 		cout << "The Average R&D Programmer Salary is: " << RnD.CalculateAverageSalary(RnD.PROGRAMMER) << endl;
[33m  [0m 112 		cout << "The Average R&D Software Architect Salary is: " << RnD.CalculateAverageSalary(RnD.SOFTWAREARCHITECTS) << endl;
[33m  [0m 113 		cout << "\n";
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gs
Process 7446 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep in[0m
    frame #0: [33m0x0000000100002c34[0m program`Department::CalculateAverageSalary(this=0x000000016fdff1b0, type=EMPLOYEE) at [36mDepartment.cpp[0m:[33m70[0m:[33m6[0m
[33m  [0m 67  	[32mint[0m Department::CalculateAverageSalary(StaffTypes type)
[33m  [0m 68  	{
[33m  [0m 69  	    [32mdouble[0m sum;
[33m->[0m 70  		sum [4m=[0m [31m0.0[0m;
[33m  [0m 71  		[32mint[0m i;
[33m  [0m 72  		[32mswitch[0m (type)
[33m  [0m 73  		{
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 7446 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100002c38[0m program`Department::CalculateAverageSalary(this=0x000000016fdff1b0, type=EMPLOYEE) at [36mDepartment.cpp[0m:[33m72[0m:[33m10[0m
[33m  [0m 69  	    [32mdouble[0m sum;
[33m  [0m 70  		sum = [31m0.0[0m;
[33m  [0m 71  		[32mint[0m i;
[33m->[0m 72  		[32mswitch[0m ([4mtype[0m)
[33m  [0m 73  		{
[33m  [0m 74  		[32mcase[0m Department::EMPLOYEE:		
[33m  [0m 75  			[32mfor[0m (i = [31m0[0m; i < Employees->size(); i++)
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 7446 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100002c78[0m program`Department::CalculateAverageSalary(this=0x000000016fdff1b0, type=EMPLOYEE) at [36mDepartment.cpp[0m:[33m75[0m:[33m10[0m
[33m  [0m 72  		[32mswitch[0m (type)
[33m  [0m 73  		{
[33m  [0m 74  		[32mcase[0m Department::EMPLOYEE:		
[33m->[0m 75  			[32mfor[0m (i [4m=[0m [31m0[0m; i < Employees->size(); i++)
[33m  [0m 76  			{
[33m  [0m 77  				sum = Employees->at(i).getSalary();
[33m  [0m 78  			}
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 7446 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100002cac[0m program`Department::CalculateAverageSalary(this=0x000000016fdff1b0, type=EMPLOYEE) at [36mDepartment.cpp[0m:[33m77[0m:[33m10[0m
[33m  [0m 74  		[32mcase[0m Department::EMPLOYEE:		
[33m  [0m 75  			[32mfor[0m (i = [31m0[0m; i < Employees->size(); i++)
[33m  [0m 76  			{
[33m->[0m 77  				sum = [4mEmployees[0m->at(i).getSalary();
[33m  [0m 78  			}
[33m  [0m 79  			[32mbreak[0m;
[33m  [0m 80  		[32mcase[0m Department::PROGRAMMER:
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 7446 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100002cc0[0m program`Department::CalculateAverageSalary(this=0x000000016fdff1b0, type=EMPLOYEE) at [36mDepartment.cpp[0m:[33m78[0m:[33m3[0m
[33m  [0m 75  			[32mfor[0m (i = [31m0[0m; i < Employees->size(); i++)
[33m  [0m 76  			{
[33m  [0m 77  				sum = Employees->at(i).getSalary();
[33m->[0m 78  			[4m}[0m
[33m  [0m 79  			[32mbreak[0m;
[33m  [0m 80  		[32mcase[0m Department::PROGRAMMER:
[33m  [0m 81  			[32mfor[0m (i = [31m0[0m; i < Programmers->size(); i++)
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gframe variable
(Department *) this = 0x000000016fdff1b0
(Department::StaffTypes) type = EMPLOYEE
(double) sum = 3000
(int) i = 0
(lldb) [1G[2m(lldb) [0m[8Gn
Process 7446 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100002cc4[0m program`Department::CalculateAverageSalary(this=0x000000016fdff1b0, type=EMPLOYEE) at [36mDepartment.cpp[0m:[33m75[0m:[33m39[0m
[33m  [0m 72  		[32mswitch[0m (type)
[33m  [0m 73  		{
[33m  [0m 74  		[32mcase[0m Department::EMPLOYEE:		
[33m->[0m 75  			[32mfor[0m (i = [31m0[0m; i < Employees->size(); i[4m++[0m)
[33m  [0m 76  			{
[33m  [0m 77  				sum = Employees->at(i).getSalary();
[33m  [0m 78  			}
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 7446 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100002cac[0m program`Department::CalculateAverageSalary(this=0x000000016fdff1b0, type=EMPLOYEE) at [36mDepartment.cpp[0m:[33m77[0m:[33m10[0m
[33m  [0m 74  		[32mcase[0m Department::EMPLOYEE:		
[33m  [0m 75  			[32mfor[0m (i = [31m0[0m; i < Employees->size(); i++)
[33m  [0m 76  			{
[33m->[0m 77  				sum = [4mEmployees[0m->at(i).getSalary();
[33m  [0m 78  			}
[33m  [0m 79  			[32mbreak[0m;
[33m  [0m 80  		[32mcase[0m Department::PROGRAMMER:
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gframe variable
(Department *) this = 0x000000016fdff1b0
(Department::StaffTypes) type = EMPLOYEE
(double) sum = 3000
(int) i = 1
(lldb) [1G[2m(lldb) [0m[8Gn
Process 7446 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100002cc0[0m program`Department::CalculateAverageSalary(this=0x000000016fdff1b0, type=EMPLOYEE) at [36mDepartment.cpp[0m:[33m78[0m:[33m3[0m
[33m  [0m 75  			[32mfor[0m (i = [31m0[0m; i < Employees->size(); i++)
[33m  [0m 76  			{
[33m  [0m 77  				sum = Employees->at(i).getSalary();
[33m->[0m 78  			[4m}[0m
[33m  [0m 79  			[32mbreak[0m;
[33m  [0m 80  		[32mcase[0m Department::PROGRAMMER:
[33m  [0m 81  			[32mfor[0m (i = [31m0[0m; i < Programmers->size(); i++)
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gframe variable
(Department *) this = 0x000000016fdff1b0
(Department::StaffTypes) type = EMPLOYEE
(double) sum = 5500
(int) i = 1
(lldb) [1G[2m(lldb) [0m[8GGOT IT NOT +=
[0;1;31merror: [0m'GOT' is not a valid command.
(lldb) [1G[2m(lldb) [0m[8Gexit
Quitting LLDB will kill one or more processes. Do you really want to proceed: [Y /n] Y
[1m[7m%[27m[1m[0m                                                                                ]7;file://corinnes-mbp.lan/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode[0m[27m[24m[Jcorinnejones@corinnes-mbp buggyCode % [K[?2004hlls[?2004l
CorinneJones.txt		program
Department.cpp			program.dSYM
Department.h			programmerClass.cpp
employeeClass.cpp		programmerClass.h
employeeClass.h			softwarearchitectClass.cpp
main.cpp			softwarearchitectClass.h
[1m[7m%[27m[1m[0m                                                                                ]7;file://corinnes-mbp.lan/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode[0m[27m[24m[Jcorinnejones@corinnes-mbp buggyCode % [K[?2004hvvim C Department.cpp[?2004l
[?1049h[>4;2m[?1h=[?2004h[?1004h[1;24r[?12h[?12l[22;2t[22;1t[27m[29m[m[H[2J[?25l[24;1H"Department.cpp" [dos] 198L, 4077B[2;1H▽[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#include "Department.h"[2;1H[K[3;1H[K[5;1HDepartment::Department()
{[7;9HEmployees = new vector<Employee>();[8;9HProgrammers = new vector <Programmer>();[9;9HSoftwareArchitects = new vector<SoftwareArchitect>();[10;9HName = "";[11;9HID = 0;
}

Department::Department(string N, int id)
{[16;9HEmployees = new vector<Employee>();[17;9HProgrammers = new vector <Programmer>();[18;9HSoftwareArchitects = new vector<SoftwareArchitect>();[19;9HName = N;[20;9H(id > 0) ? ID = -1 : ID = id;
}

double Department::CalculateMaxSalary(StaffTypes type)[1;1H[?25h[?4m



[?25l
[106m{[12;1H}[6;1H[?25h[?25l[m{[12;1H}[7;8H[?25h[8;8H[9;8H[10;8H[11;8H[?25l[6;1H[106m{[12;1H}[?25h[?25l[m[6;1H{[12;1H}
[?25h
[?25l
[106m{[21;1H}[15;1H[?25h[?25l[m{[21;1H}[16;8H[?25h[17;8H[18;8H[19;8H[20;8H[?25l[15;1H[106m{[21;1H}[?25h[?25l[m[15;1H{[21;1H}
[?25h
[?25l[1;23r[23;1H
[1;24r[23;1H{[24;1H[K[23;1H[?25h[?25l[1;23r[23;1H
[1;24r[23;9Hdouble max = 0;[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;9Hdouble i = 0;[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;9Hswitch (type)[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;9H{[?25h[?25l[1;23r[23;1H
[1;24r[23;9Hcase Department::EMPLOYEE:[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;17Hfor (i = 0; i < Employees->size(); i++)[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;17H{[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;1H[?25h[?25l[1;23r[23;1H
[1;24r[23;25Hif (Employees->at(i).getSalary()>max)[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;25H{[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;33Hmax = Employees->at(i).getSalary();[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;25H}[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;17H}[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;17Hbreak;[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;9Hcase Department::PROGRAMMER:[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;17Hfor (i = 0; i < Programmers->size(); i++)[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;17H{[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;1H[?25h[?25l[1;23r[23;1H
[1;24r[23;25Hif (Programmers->at(i).getSalary()>max)[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;25H{[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;33Hmax = Programmers->at(i).getSalary();[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;25H}[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;17H}[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;9Hbreak;[?25h[?25l[1;23r[23;1H
[1;24r[23;9Hcase Department::SOFTWAREARCHITECTS:[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;17Hfor (i = 0; i < SoftwareArchitects->size(); i++)[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;17H{[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;1H[?25h[?25l[1;23r[23;1H
[1;24r[23;25Hif (SoftwareArchitects->at(i).getSalary()>max)[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;25H{[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;17Hmax = SoftwareArchitects->at(i).getSalary();[?25h[?25l[1;23r[23;1H
[1;24r[23;25H}[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;1H[?25h[?25l[1;23r[23;1H
[1;24r[23;17H}[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;17Hbreak;[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;9Hdefault:[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;17Hbreak;[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;9H}[?25h[?25l[1;23r[23;1H
[1;24r[23;1H[?25h[?25l[1;23r[23;1H
[1;24r[23;9Hreturn max;[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;1H}[?25h[?25l[1;23r[23;1H
[1;24r[23;1H[?25h[?25l[1;23r[23;1H
[1;24r[23;1Hint Department::CalculateAverageSalary(StaffTypes type)[?25h[?25l[1;23r[23;1H
[1;24r[23;1H{[?25h[?25l[1;23r[23;1H
[1;24r[23;5Hdouble sum;[?25h[?25l[1;23r[23;1H
[1;24r[23;9Hsum = 0.0;[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;9Hint i;[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;9Hswitch (type)[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;9H{[?25h[?25l[1;23r[23;1H
[1;24r[23;9Hcase Department::EMPLOYEE:[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;17Hfor (i = 0; i < Employees->size(); i++)[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;17H{[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;25Hsum = Employees->at(i).getSalary();[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;17H}[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;17Hbreak;[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;9Hcase Department::PROGRAMMER:[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;17Hfor (i = 0; i < Programmers->size(); i++)[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;17H{[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;25Hsum = Programmers->at(i).getSalary();[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;17H}[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;17Hbreak;[23;8H[?25h[?25l[1;23r[23;1H
[1;24r[23;9Hcase Department::SOFTWAREARCHITECTS:[23;8H[?25h[22;8H[21;8H[20;8H[19;8H[18;8H[17;8H[16;8H[15;8H[14;8H[13;8H[12;8H[11;8H[12;8H[13;8H[14;8H[15;8H[16;8H[17;8H[?25l[24;1H[1m-- INSERT --[17;1H[?25h[8C[mcase[16;9H[15;9H[14;9H[8C[8Csum[?25l[13;17H[106m{[15;17H}[13;18H[?25h[?25l[m{[15;17H}[12;28H[?25h[11;28H[12;28H[?25l[13;17H[106m{[15;17H}[13;18H[?25h[?25l[m{[15;17H}[14;28H[?25h[?25l+ = Employees->at(i).getSalary();[14;29H[?25h [?25l= Employees->at(i).getSalary();[14;60H[K[14;29H[?25h[?25l += Employees->at(i).getSalary();[14;29H[?25h[?25l[13;17H[106m{[15;17H}[?25h[?25l[m[13;17H{[15;17H}[16;23H[?25h[17;29H[18;29H[?25l[19;17H[106m{[21;17H}[19;18H[?25h[?25l[m{[21;17H}[20;29H[?25h[?25l+= Programmers->at(i).getSalary();[20;30H[?25h[?25l[19;17H[106m{[21;17H}[?25h[?25l[m[19;17H{[21;17H}[22;23H[?25h[23;30H[?25l[1;23r[23;1H
[1;24r[23;17Hfor (i = 0; i < SoftwareArchitects->size(); i++)[23;30H[?25h[?25l[1;23r[23;1H
[1;24r[23;17H{[?25h[?25l[1;23r[23;1H
[1;24r[23;25Hsum += SoftwareArchitects->at(i).getSalary();[23;30H[?25h[?25l[1;23r[23;1H
[1;24r[21;17H[106m{[23;17H}[?25h[?25l[1;23r[m[23;1H
[1;24r[20;17H{[22;17H}[23;17Hbreak;[?25h[?25l[1;23r[23;1H
[1;24r[23;9Hdefault:[?25h[?25l[1;23r[23;1H
[1;24r[23;17Hsum = -1;[?25h[?25l[1;23r[23;1H
[1;24r[23;17Hbreak;[?25h[?25l[1;23r[23;1H
[1;24r[1;9H[106m{[23;9H}[?25h[?25l[1;23r[m[23;1H
[1;24r[22;9H}
[?25h[?25l[1;23r[23;1H
[1;24r[23;5Hreturn sum/i;[?25h[?25l[1;23r[23;1H
[1;24r[23;1H}[?25h[?25l[1;23r[23;1H
[1;24r[23;1H[?25h[22;2H[21;18H[20;1H[19;10H[18;23H[17;26H[16;17H[15;23H[?25l[12;17H[106m{[14;17H}[?25h[?25l[m[12;17H{[14;17H}[13;30H[?25h[?25l[12;17H[106m{[14;17H}[12;18H[?25h[?25l[m{[14;17H}[11;30H[?25h[10;30H[9;23H[?25l[6;17H[106m{[8;17H}[?25h[?25l[m[6;17H{[8;17H}[7;30H[?25h[?25l[6;17H[106m{[8;17H}[6;18H[?25h[?25l[m{[8;17H}[5;30H[?25h[4;30H[3;23H[2;18H[1;30H[?25l[1;23r[1;1H[L[1;24r[1;17H[106m{[3;17H}[1;18H[?25h[?25l[1;23r[m[1;1H[L[1;24r[1;17Hfor (i = 0; i < Employees->size(); i++)[2;17H{[4;17H}[1;30H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9Hcase Department::EMPLOYEE:[?25h[?25l[1;23r[1;1H[L[1;24r[1;9H[106m{[23;9H}[1;10H[?25h[?25l[1;23r[m[1;1H[L[1;24r[1;9Hswitch [106m([mtype[106m)[m[2;9H{[1;22H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9Hint i;[2;16H(type)[1;15H[?25h[?25l[1;23r[1;1H[L[1;24r[1;9Hsum = 0.0;[?25h[?25l[1;23r[1;1H[L[1;24r[1;5Hdouble sum;[?25h[?25l[1;23r[1;1H[L[1;24r[1;1H{[?25h[2;16H[3;19H[4;15H[?25l=;[?25h[?25l0;[?25h[?25l;[4;16H[K[4;15H[?25h[?25l;[4;15H[K[4;14H[?25h[5;14H[6;10H[7;14H[8;9H[24;1H[K[8;8H[?25l[?25h[?25l[24;1H:[?25hwq[?25l[?2004l[>4;m"Department.cpp" [dos] 198L, 4079B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?1049l[?25h[>4;m[1m[7m%[27m[1m[0m                                                                                ]7;file://corinnes-mbp.lan/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode[0m[27m[24m[Jcorinnejones@corinnes-mbp buggyCode % [K[?2004hvim Department.cpp[18Dls                [16Dlldb program[12Dclang++ *.cpp -g -O0  -o program[?2004l
[1m[7m%[27m[1m[0m                                                                                ]7;file://corinnes-mbp.lan/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode[0m[27m[24m[Jcorinnejones@corinnes-mbp buggyCode % [K[?2004hclang++ *.cpp -g -O0  -o program[32Dvim Department.cpp  [2C          [14D[18Dls                [16Dlldb program[?2004l
(lldb) target create "program"
[2mLocating external symbol file for program...[0m[K[2K[2mLoading Apple DWARF index for program...[0m[K[2K[2mLocating external symbol file for dyld...[0m[K[2K[2mParsing symbol table for dyld...[0m[K[2K[2mLocating external symbol file for libc++.1.dylib...[0m[K[2K[2mParsing symbol table for libc++.1.dylib...[0m[K[2K[2mLocating external symbol file for libSystem.B.dylib...[0m[K[2K[2mParsing symbol table for libSystem.B.dylib...[0m[K[2K[2mLocating external symbol file for libc++abi.dylib...[0m[K[2K[2mParsing symbol table for libc++abi.dylib...[0m[K[2K[2mLocating external symbol file for libcache.dylib...[0m[K[2K[2mParsing symbol table for libcache.dylib...[0m[K[2K[2mLocating external symbol file for libcommonCrypto.dylib...[0m[K[2K[2mParsing symbol table for libcommonCrypto.dylib...[0m[K[2K[2mLocating external symbol file for libcompiler_rt.dylib...[0m[K[2K[2mParsing symbol table for libcompiler_rt.dylib...[0m[K[2K[2mLocating external symbol file for libcopyfile.dylib...[0m[K[2K[2mParsing symbol table for libcopyfile.dylib...[0m[K[2K[2mLocating external symbol file for libcorecrypto.dylib...[0m[K[2K[2mParsing symbol table for libcorecrypto.dylib...[0m[K[2K[2mLocating external symbol file for libdispatch.dylib...[0m[K[2K[2mParsing symbol table for libdispatch.dylib...[0m[K[2K[2mLocating external symbol file for libdyld.dylib...[0m[K[2K[2mParsing symbol table for libdyld.dylib...[0m[K[2K[2mLocating external symbol file for libkeymgr.dylib...[0m[K[2K[2mParsing symbol table for libkeymgr.dylib...[0m[K[2K[2mLocating external symbol file for libmacho.dylib...[0m[K[2K[2mParsing symbol table for libmacho.dylib...[0m[K[2K[2mLocating external symbol file for libquarantine.dylib...[0m[K[2K[2mParsing symbol table for libquarantine.dylib...[0m[K[2K[2mLocating external symbol file for libremovefile.dylib...[0m[K[2K[2mParsing symbol table for libremovefile.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_asl.dylib...[0m[K[2K[2mParsing symbol table for libsystem_asl.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_blocks.dylib...[0m[K[2K[2mParsing symbol table for libsystem_blocks.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_c.dylib...[0m[K[2K[2mParsing symbol table for libsystem_c.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_collections.dylib...[0m[K[2K[2mParsing symbol table for libsystem_collections.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_configuration.dylib...[0m[K[2K[2mParsing symbol table for libsystem_configuration.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_containermanager.dylib...[0m[K[2K[2mParsing symbol table for libsystem_containermanager.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_coreservices.dylib...[0m[K[2K[2mParsing symbol table for libsystem_coreservices.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_darwin.dylib...[0m[K[2K[2mParsing symbol table for libsystem_darwin.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_dnssd.dylib...[0m[K[2K[2mParsing symbol table for libsystem_dnssd.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_featureflags.dylib...[0m[K[2K[2mParsing symbol table for libsystem_featureflags.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_info.dylib...[0m[K[2K[2mParsing symbol table for libsystem_info.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_m.dylib...[0m[K[2K[2mParsing symbol table for libsystem_m.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_malloc.dylib...[0m[K[2K[2mParsing symbol table for libsystem_malloc.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_networkextension.dylib...[0m[K[2K[2mParsing symbol table for libsystem_networkextension.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_notify.dylib...[0m[K[2K[2mParsing symbol table for libsystem_notify.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_sandbox.dylib...[0m[K[2K[2mParsing symbol table for libsystem_sandbox.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_secinit.dylib...[0m[K[2K[2mParsing symbol table for libsystem_secinit.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_kernel.dylib...[0m[K[2K[2mParsing symbol table for libsystem_kernel.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_platform.dylib...[0m[K[2K[2mParsing symbol table for libsystem_platform.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_pthread.dylib...[0m[K[2K[2mParsing symbol table for libsystem_pthread.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_symptoms.dylib...[0m[K[2K[2mParsing symbol table for libsystem_symptoms.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_trace.dylib...[0m[K[2K[2mParsing symbol table for libsystem_trace.dylib...[0m[K[2K[2mLocating external symbol file for libunwind.dylib...[0m[K[2K[2mParsing symbol table for libunwind.dylib...[0m[K[2K[2mLocating external symbol file for libxpc.dylib...[0m[K[2K[2mParsing symbol table for libxpc.dylib...[0m[K[2K[2mLocating external symbol file for libobjc.A.dylib...[0m[K[2K[2mParsing symbol table for libobjc.A.dylib...[0m[K[2K[2mLocating external symbol file for liboah.dylib...[0m[K[2K[2mParsing symbol table for liboah.dylib...[0m[K[2K[2mParsing symbol table for program...[0m[K[2KCurrent executable set to '/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode/program' (arm64).
(lldb) [1G[2m(lldb) [0m[8Grun
Process 7485 launched: '/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode/program' (arm64)
  Here is the List of all the Staff in the R&D Department: 
  ------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

   Josh   1   Technology Specialist   3000.00      2015

   Mary   2         Project Manager   5500.00      2010

   Marc   3    Research Team Leader   8000.00      2007

   Mike  11        Multimedia Prog.   2500.00      2014

  Julie  12     Mainframe Sys.Prog.   2150.00      2013

 Albert  13                OS Prog.   2300.00      2015

   John  21    Senior Software Eng.   4899.00      2011

 Connor  24      Software Developer   1900.00      2017
  Here is the List of all the Staff in the IT Department: 
  ------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

    Roy  32           Network Prog.   1900.00      2016

   Jane  35                  Tester   1500.00      2018

 Removing Mike from the company: Succeeded
 -------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

   Josh   1   Technology Specialist   3000.00      2015

   Mary   2         Project Manager   5500.00      2010

   Marc   3    Research Team Leader   8000.00      2007

  Julie  12     Mainframe Sys.Prog.   2150.00      2013

 Albert  13                OS Prog.   2300.00      2015

   John  21    Senior Software Eng.   4899.00      2011

 Connor  24      Software Developer   1900.00      2017

  Here is the List of all the Programmers who know C++ in the R&D Department: 
  ---------------------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

  Julie  12     Mainframe Sys.Prog.   2150.00      2013      Mary         5         C++

 Albert  13                OS Prog.   2300.00      2015      Mary         9         C++

 Listing All Project IDs:  5 9 6 8
-------------------------
The Highest R&D Employee Salary is: 8000.00
The Highest R&D Programmer Salary is: 2300.00
The Highest R&D Software Architect Salary is: 4899.00

The Average R&D Employee Salary is: 5500
The Average R&D Programmer Salary is: 2225
The Average R&D Software Architect Salary is: 3399

The Average IT Employee Salary is: 0
The Average IT Programmer Salary is: 1700
The Average IT Software Architect Salary is: 0

Process 7485 exited with status = 0 (0x00000000) 
(lldb) [1G[2m(lldb) [0m[8Ge[K[1G[2m(lldb) [0m[8Gbr list
No breakpoints currently set.
(lldb) [1G[2m(lldb) [0m[8Gb list
Breakpoint 1: no locations (pending).
WARNING:  Unable to resolve breakpoint to any actual locations.
(lldb) [1G[2m(lldb) [0m[8Gbr list
Current breakpoints:
1: name = 'list', locations = 0 (pending)

(lldb) [1G[2m(lldb) [0m[8Gdel br 1
[0;1;31merror: [0m'del' is not a valid command.
(lldb) [1G[2m(lldb) [0m[8Gdelete br 1
[0;1;31merror: [0m'delete' is not a valid command.
(lldb) [1G[2m(lldb) [0m[8Gbr delete 1
1 breakpoints deleted; 0 breakpoint locations disabled.
(lldb) [1G[2m(lldb) [0m[8Gbr de[K[1G[2m(lldb) [0m[12G[K[1G[2m(lldb) [0m[11G[1G[2m(lldb) [0m[10G[K[1G[2m(lldb) [0m[9G[K[1G[2m(lldb) [0m[8Grun[K[1G[2m(lldb) [0m[10G[K[1G[2m(lldb) [0m[9G[K[1G[2m(lldb) [0m[8Grun
Process 7641 launched: '/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode/program' (arm64)
  Here is the List of all the Staff in the R&D Department: 
  ------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

   Josh   1   Technology Specialist   3000.00      2015

   Mary   2         Project Manager   5500.00      2010

   Marc   3    Research Team Leader   8000.00      2007

   Mike  11        Multimedia Prog.   2500.00      2014

  Julie  12     Mainframe Sys.Prog.   2150.00      2013

 Albert  13                OS Prog.   2300.00      2015

   John  21    Senior Software Eng.   4899.00      2011

 Connor  24      Software Developer   1900.00      2017
  Here is the List of all the Staff in the IT Department: 
  ------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

    Roy  32           Network Prog.   1900.00      2016

   Jane  35                  Tester   1500.00      2018

 Removing Mike from the company: Succeeded
 -------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

   Josh   1   Technology Specialist   3000.00      2015

   Mary   2         Project Manager   5500.00      2010

   Marc   3    Research Team Leader   8000.00      2007

  Julie  12     Mainframe Sys.Prog.   2150.00      2013

 Albert  13                OS Prog.   2300.00      2015

   John  21    Senior Software Eng.   4899.00      2011

 Connor  24      Software Developer   1900.00      2017

  Here is the List of all the Programmers who know C++ in the R&D Department: 
  ---------------------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

  Julie  12     Mainframe Sys.Prog.   2150.00      2013      Mary         5         C++

 Albert  13                OS Prog.   2300.00      2015      Mary         9         C++

 Listing All Project IDs:  5 9 6 8
-------------------------
The Highest R&D Employee Salary is: 8000.00
The Highest R&D Programmer Salary is: 2300.00
The Highest R&D Software Architect Salary is: 4899.00

The Average R&D Employee Salary is: 5500
The Average R&D Programmer Salary is: 2225
The Average R&D Software Architect Salary is: 3399

The Average IT Employee Salary is: 0
The Average IT Programmer Salary is: 1700
The Average IT Software Architect Salary is: 0

Process 7641 exited with status = 0 (0x00000000) 
(lldb) [1G[2m(lldb) [0m[8Gb main.cpp [1G[2m(lldb) [0m[18G:51
Breakpoint 2: where = program`main + 1836 at main.cpp:51:2, address = 0x000000010000d850
(lldb) [1G[2m(lldb) [0m[8Grun
Process 7655 launched: '/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode/program' (arm64)
  Here is the List of all the Staff in the R&D Department: 
  ------------------------------------------------------------
Process 7655 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mbreakpoint 2.1[0m
    frame #0: [33m0x000000010000d850[0m program`main at [36mmain.cpp[0m:[33m51[0m:[33m2[0m
[33m  [0m 48  	
[33m  [0m 49  		cout << "  Here is the List of all the Staff in the R&D Department: \n";
[33m  [0m 50  		cout << "  ------------------------------------------------------------\n";
[33m->[0m 51  		[4mprintHeader[0m();
[33m  [0m 52  		[35m//a Employee Vector that holds all types of staff[0m
[33m  [0m 53  	    vector<Employee*> *AllRnDEmployees1 = RnD.getAllStaff();
[33m  [0m 54  	
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years
Process 7655 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x000000010000d85c[0m program`main at [36mmain.cpp[0m:[33m53[0m:[33m47[0m
[33m  [0m 50  		cout << "  ------------------------------------------------------------\n";
[33m  [0m 51  		printHeader();
[33m  [0m 52  		[35m//a Employee Vector that holds all types of staff[0m
[33m->[0m 53  	    vector<Employee*> *AllRnDEmployees1 = RnD.[4mgetAllStaff[0m();
[33m  [0m 54  	
[33m  [0m 55  	    [32mfor[0m ([32munsigned[0m i = [31m0[0m; i < AllRnDEmployees1->size(); i++)
[33m  [0m 56  		{
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gframe bar[K[1G[2m(lldb) [0m[16G[K[1G[2m(lldb) [0m[15G[K[1G[2m(lldb) [0m[14Gvariables
invalid command 'frame variables'.
(lldb) [1G[2m(lldb) [0m[8Gfame variable
[0;1;31merror: [0m'fame' is not a valid command.
(lldb) [1G[2m(lldb) [0m[8Gframe variable
(Department) RnD = {
  Name = "Research and Development"
  ID = -1
  Employees = 0x00006000002040e0 size=3
  Programmers = 0x0000600000204100 size=3
  SoftwareArchitects = 0x0000600000204120 size=2
}
(Department) IT = {
  Name = "Info And Tech"
  ID = -1
  Employees = 0x00006000002040c0 size=0
  Programmers = 0x0000600000204140 size=2
  SoftwareArchitects = 0x0000600000204160 size=0
}
(Employee) E1 = (name = "Josh", age = 0, gender = '\0', ID = 1, phoneNumber = "", jobTitle = "Technology Specialist", salary = 3000, HireYear = 2015)
(Employee) E2 = (name = "Mary", age = 0, gender = '\0', ID = 2, phoneNumber = "", jobTitle = "Project Manager", salary = 5500, HireYear = 2010)
(Employee) E3 = (name = "Marc", age = 0, gender = '\0', ID = 3, phoneNumber = "", jobTitle = "Research Team Leader", salary = 8000, HireYear = 2007)
(Programmer) P1 = {
  Employee = (name = "Mike", age = 0, gender = '\0', ID = 11, phoneNumber = "", jobTitle = "Multimedia Prog.", salary = 2500, HireYear = 2014)
  supervisorName = "Mary"
  ProjectID = 5
  Language = "CSS"
}
(Programmer) P2 = {
  Employee = (name = "Julie", age = 0, gender = '\0', ID = 12, phoneNumber = "", jobTitle = "Mainframe Sys.Prog.", salary = 2150, HireYear = 2013)
  supervisorName = "Mary"
  ProjectID = 5
  Language = "C++"
}
(Programmer) P3 = {
  Employee = (name = "Albert", age = 0, gender = '\0', ID = 13, phoneNumber = "", jobTitle = "OS Prog.", salary = 2300, HireYear = 2015)
  supervisorName = "Mary"
  ProjectID = 9
  Language = "C++"
}
(SoftwareArchitect) SA1 = {
  Employee = (name = "John", age = 1107296256, gender = '\0', ID = 21, phoneNumber = "", jobTitle = "Senior Software Eng.", salary = 4899, HireYear = 2011)
  supervisorName = "Marc"
  ProjectID = 6
  experienceYears = 7
}
(SoftwareArchitect) SA2 = {
  Employee = (name = "Connor", age = 311384, gender = '\x01', ID = 24, phoneNumber = "", jobTitle = "Software Developer", salary = 1900, HireYear = 2017)
  supervisorName = "John"
  ProjectID = 8
  experienceYears = 0
}
(Programmer) P4 = {
  Employee = (name = "Roy", age = 650498728, gender = '\x02', ID = 32, phoneNumber = "", jobTitle = "Network Prog.", salary = 1900, HireYear = 2016)
  supervisorName = "N/A"
  ProjectID = 7
  Language = "JAVA"
}
(Programmer) P5 = {
  Employee = (name = "Jane", age = 0, gender = '\0', ID = 35, phoneNumber = "", jobTitle = "Tester", salary = 1500, HireYear = 2018)
  supervisorName = "Roy"
  ProjectID = 7
  Language = "JAVA"
}
(std::vector<Employee *, std::allocator<Employee *> > *) AllRnDEmployees1 = 0xf555800180a129e8 size=0
(std::vector<Employee *, std::allocator<Employee *> > *) AllITEmployees = 0x000000016fdfed00 size=0
(std::vector<Employee *, std::allocator<Employee *> > *) AllRnDEmployees2 = nullptr
(std::vector<Programmer, std::allocator<Programmer> > *) CppProgrammers = 0x000000016fdfe850 size=0
(std::vector<int, std::allocator<int> > *) AllProjects = 0x997a8001809f3fb0 size=0
(lldb) [1G[2m(lldb) [0m[8Gn
Process 7655 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x000000010000d874[0m program`main at [36mmain.cpp[0m:[33m55[0m:[33m19[0m
[33m  [0m 52  		[35m//a Employee Vector that holds all types of staff[0m
[33m  [0m 53  	    vector<Employee*> *AllRnDEmployees1 = RnD.getAllStaff();
[33m  [0m 54  	
[33m->[0m 55  	    [32mfor[0m ([32munsigned[0m [4mi[0m = [31m0[0m; i < AllRnDEmployees1->size(); i++)
[33m  [0m 56  		{
[33m  [0m 57  			cout << "\n";
[33m  [0m 58  			[35m//using Base Class Pointers to Call the print function if each Type[0m
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 7655 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x000000010000d8b0[0m program`main at [36mmain.cpp[0m:[33m57[0m:[33m8[0m
[33m  [0m 54  	
[33m  [0m 55  	    [32mfor[0m ([32munsigned[0m i = [31m0[0m; i < AllRnDEmployees1->size(); i++)
[33m  [0m 56  		{
[33m->[0m 57  			cout [4m<<[0m "\n";
[33m  [0m 58  			[35m//using Base Class Pointers to Call the print function if each Type[0m
[33m  [0m 59  	        AllRnDEmployees1->at(i)->print();
[33m  [0m 60  		}
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn

Process 7655 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x000000010000d8bc[0m program`main at [36mmain.cpp[0m:[33m59[0m:[33m9[0m
[33m  [0m 56  		{
[33m  [0m 57  			cout << "\n";
[33m  [0m 58  			[35m//using Base Class Pointers to Call the print function if each Type[0m
[33m->[0m 59  	        [4mAllRnDEmployees1[0m->at(i)->print();
[33m  [0m 60  		}
[33m  [0m 61  	
[33m  [0m 62  		cout << "  Here is the List of all the Staff in the IT Department: \n";
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gs
Process 7655 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep in[0m
    frame #0: [33m0x000000010000c340[0m program`Employee::print(this=0x0000000100204080) at [36memployeeClass.cpp[0m:[33m51[0m:[33m10[0m
[33m  [0m 48  	}
[33m  [0m 49  	
[33m  [0m 50  	[32mvoid[0m Employee::print() {
[33m->[0m 51  		cout << [4msetw[0m([31m7[0m) << getName()
[33m  [0m 52  			<< setw([31m4[0m) << getID()
[33m  [0m 53  			<< setw([31m24[0m) << getJobTitle()
[33m  [0m 54  			<< setw([31m10[0m) << setprecision([31m2[0m) << fixed << getSalary()
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gnn[K[1G[2m(lldb) [0m[9G
Process 7655 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x000000010000c388[0m program`Employee::print(this=0x0000000100204080) at [36memployeeClass.cpp[0m:[33m52[0m:[33m6[0m
[33m  [0m 49  	
[33m  [0m 50  	[32mvoid[0m Employee::print() {
[33m  [0m 51  		cout << setw([31m7[0m) << getName()
[33m->[0m 52  			<< [4msetw[0m([31m4[0m) << getID()
[33m  [0m 53  			<< setw([31m24[0m) << getJobTitle()
[33m  [0m 54  			<< setw([31m10[0m) << setprecision([31m2[0m) << fixed << getSalary()
[33m  [0m 55  			<< setw([31m10[0m) << getHireYear()
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 7655 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x000000010000c3d0[0m program`Employee::print(this=0x0000000100204080) at [36memployeeClass.cpp[0m:[33m53[0m:[33m6[0m
[33m  [0m 50  	[32mvoid[0m Employee::print() {
[33m  [0m 51  		cout << setw([31m7[0m) << getName()
[33m  [0m 52  			<< setw([31m4[0m) << getID()
[33m->[0m 53  			<< [4msetw[0m([31m24[0m) << getJobTitle()
[33m  [0m 54  			<< setw([31m10[0m) << setprecision([31m2[0m) << fixed << getSalary()
[33m  [0m 55  			<< setw([31m10[0m) << getHireYear()
[33m  [0m 56  				  << "\n";
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 7655 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x000000010000c420[0m program`Employee::print(this=0x0000000100204080) at [36memployeeClass.cpp[0m:[33m54[0m:[33m6[0m
[33m  [0m 51  		cout << setw([31m7[0m) << getName()
[33m  [0m 52  			<< setw([31m4[0m) << getID()
[33m  [0m 53  			<< setw([31m24[0m) << getJobTitle()
[33m->[0m 54  			<< [4msetw[0m([31m10[0m) << setprecision([31m2[0m) << fixed << getSalary()
[33m  [0m 55  			<< setw([31m10[0m) << getHireYear()
[33m  [0m 56  				  << "\n";
[33m  [0m 57  	}
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gc
Process 7655 resuming
   Josh   1   Technology Specialist   3000.00      2015

   Mary   2         Project Manager   5500.00      2010

   Marc   3    Research Team Leader   8000.00      2007

   Mike  11        Multimedia Prog.   2500.00      2014

  Julie  12     Mainframe Sys.Prog.   2150.00      2013

 Albert  13                OS Prog.   2300.00      2015

   John  21    Senior Software Eng.   4899.00      2011

 Connor  24      Software Developer   1900.00      2017
  Here is the List of all the Staff in the IT Department: 
  ------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

    Roy  32           Network Prog.   1900.00      2016

   Jane  35                  Tester   1500.00      2018

 Removing Mike from the company: Succeeded
 -------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

   Josh   1   Technology Specialist   3000.00      2015

   Mary   2         Project Manager   5500.00      2010

   Marc   3    Research Team Leader   8000.00      2007

  Julie  12     Mainframe Sys.Prog.   2150.00      2013

 Albert  13                OS Prog.   2300.00      2015

   John  21    Senior Software Eng.   4899.00      2011

 Connor  24      Software Developer   1900.00      2017

  Here is the List of all the Programmers who know C++ in the R&D Department: 
  ---------------------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

  Julie  12     Mainframe Sys.Prog.   2150.00      2013      Mary         5         C++

 Albert  13                OS Prog.   2300.00      2015      Mary         9         C++

 Listing All Project IDs:  5 9 6 8
-------------------------
The Highest R&D Employee Salary is: 8000.00
The Highest R&D Programmer Salary is: 2300.00
The Highest R&D Software Architect Salary is: 4899.00

The Average R&D Employee Salary is: 5500
The Average R&D Programmer Salary is: 2225
The Average R&D Software Architect Salary is: 3399

The Average IT Employee Salary is: 0
The Average IT Programmer Salary is: 1700
The Average IT Software Architect Salary is: 0

Process 7655 exited with status = 0 (0x00000000) 
(lldb) [1G[2m(lldb) [0m[8Gbr list
Current breakpoints:
2: file = 'main.cpp', line = 51, exact_match = 0, locations = 1, resolved = 1, hit count = 1
  2.1: where = program`main + 1836 at main.cpp:51:2, address = 0x000000010000d850, resolved, hit count = 1 

(lldb) [1G[2m(lldb) [0m[8Gbr del 2
1 breakpoints deleted; 0 breakpoint locations disabled.
(lldb) [1G[2m(lldb) [0m[8Gbr del 2.1
[0;1;31merror: [0mNo breakpoints exist to be deleted.
(lldb) [1G[2m(lldb) [0m[8Gb main.cpp [1G[2m(lldb) [0m[18G:28
Breakpoint 3: where = program`main + 524 at main.cpp:28:16, address = 0x000000010000d330
(lldb) [1G[2m(lldb) [0m[8Gb main.cpp:71
Breakpoint 4: where = program`main + 3568 at main.cpp:71:9, address = 0x000000010000df14
(lldb) [1G[2m(lldb) [0m[8Grun
Process 7833 launched: '/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode/program' (arm64)
Process 7833 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mbreakpoint 3.1[0m
    frame #0: [33m0x000000010000d330[0m program`main at [36mmain.cpp[0m:[33m28[0m:[33m16[0m
[33m  [0m 25  		RnD.Employees->push_back(E2);
[33m  [0m 26  		RnD.Employees->push_back(E3);
[33m  [0m 27  	
[33m->[0m 28  		Programmer P1([4m"Mike"[0m, [31m11[0m, "Multimedia Prog.", [31m2500[0m, [31m2014[0m, E2.getName(), [31m5[0m, "CSS");
[33m  [0m 29  		Programmer P2("Julie", [31m12[0m, "Mainframe Sys.Prog.", [31m2150[0m, [31m2013[0m, E2.getName(), [31m5[0m, "C++");
[33m  [0m 30  		Programmer P3("Albert", [31m13[0m, "OS Prog.", [31m2300[0m, [31m2015[0m, E2.getName(), [31m9[0m, "C++");
[33m  [0m 31  	 
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gs
Process 7833 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep in[0m
    frame #0: [33m0x000000010000c28c[0m program`Employee::getName(this=0x000000016fdff038) const at [36memployeeClass.cpp[0m:[33m30[0m:[33m9[0m
[33m  [0m 27  	
[33m  [0m 28  	[35m/* Accessor Functions */[0m
[33m  [0m 29  	string Employee::getName() [32mconst[0m {
[33m->[0m 30  		[32mreturn[0m [4mname[0m;
[33m  [0m 31  	}
[33m  [0m 32  	
[33m  [0m 33  	[32mlong[0m Employee::getID() [32mconst[0m {
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gframe variable
(const Employee *) this = 0x000000016fdff038
(lldb) [1G[2m(lldb) [0m[8Gn
Process 7833 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x000000010000d358[0m program`main at [36mmain.cpp[0m:[33m28[0m:[33m63[0m
[33m  [0m 25  		RnD.Employees->push_back(E2);
[33m  [0m 26  		RnD.Employees->push_back(E3);
[33m  [0m 27  	
[33m->[0m 28  		Programmer P1("Mike", [31m11[0m, "Multimedia Prog.", [31m2500[0m, [31m2014[0m, E2.[4mgetName[0m(), [31m5[0m, "CSS");
[33m  [0m 29  		Programmer P2("Julie", [31m12[0m, "Mainframe Sys.Prog.", [31m2150[0m, [31m2013[0m, E2.getName(), [31m5[0m, "C++");
[33m  [0m 30  		Programmer P3("Albert", [31m13[0m, "OS Prog.", [31m2300[0m, [31m2015[0m, E2.getName(), [31m9[0m, "C++");
[33m  [0m 31  	 
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gframe variable
(Department) RnD = {
  Name = "Research and Development"
  ID = -1
  Employees = 0x0000600000201260 size=3
  Programmers = 0x0000600000201280 size=0
  SoftwareArchitects = 0x00006000002012a0 size=0
}
(Department) IT = {
  Name = "Info And Tech"
  ID = -1
  Employees = 0x0000600000201240 size=0
  Programmers = 0x00006000002012c0 size=0
  SoftwareArchitects = 0x00006000002012e0 size=0
}
(Employee) E1 = (name = "Josh", age = 0, gender = '\0', ID = 1, phoneNumber = "", jobTitle = "Technology Specialist", salary = 3000, HireYear = 2015)
(Employee) E2 = (name = "Mary", age = 0, gender = '\0', ID = 2, phoneNumber = "", jobTitle = "Project Manager", salary = 5500, HireYear = 2010)
(Employee) E3 = (name = "Marc", age = 0, gender = '\0', ID = 3, phoneNumber = "", jobTitle = "Research Team Leader", salary = 8000, HireYear = 2007)
(Programmer) P1 = {
  Employee = (name = "", age = 0, gender = '\0', ID = 0, phoneNumber = "", jobTitle = "", salary = 0, HireYear = 0)
  supervisorName = ""
  ProjectID = 0
  Language = ""
}
(Programmer) P2 = {
  Employee = (name = "", age = 0, gender = '\0', ID = 0, phoneNumber = "", jobTitle = "", salary = 0, HireYear = 0)
  supervisorName = ""
  ProjectID = 0
  Language = ""
}
(Programmer) P3 = {
  Employee = (name = "", age = 0, gender = '\0', ID = 0, phoneNumber = "", jobTitle = "", salary = 0, HireYear = 0)
  supervisorName = ""
  ProjectID = 0
  Language = ""
}
(SoftwareArchitect) SA1 = {
  Employee = (name = "", age = 1107296256, gender = '\0', ID = -2137088248, phoneNumber = "", jobTitle = "", salary = 0, HireYear = 0)
  supervisorName = ""
  ProjectID = 0
  experienceYears = 0
}
(SoftwareArchitect) SA2 = {
  Employee = (name = "", age = 311384, gender = '\x01', ID = 312832, phoneNumber = "", jobTitle = "", salary = 4.9406564584124654E-324, HireYear = 0)
  supervisorName = ""
  ProjectID = 1107296256
  experienceYears = 0
}
(Programmer) P4 = {
  Employee = (name = "", age = 650498728, gender = '\x02', ID = 650538496, phoneNumber = "", jobTitle = "", salary = 4.5653805454280693E-314, HireYear = 650498000)
  supervisorName = ""
  ProjectID = 650495520
  Language = ""
}
(Programmer) P5 = {
  Employee = (name = "", age = 0, gender = '\0', ID = 0, phoneNumber = "", jobTitle = "", salary = 4.565379968359395E-314, HireYear = 650541552)
  supervisorName = ""
  ProjectID = 650540112
  Language = ""
}
(std::vector<Employee *, std::allocator<Employee *> > *) AllRnDEmployees1 = 0xec6b000180a129e8 size=0
(std::vector<Employee *, std::allocator<Employee *> > *) AllITEmployees = 0x000000016fdfed00 size=0
(std::vector<Employee *, std::allocator<Employee *> > *) AllRnDEmployees2 = nullptr
(std::vector<Programmer, std::allocator<Programmer> > *) CppProgrammers = 0x000000016fdfe850 size=0
(std::vector<int, std::allocator<int> > *) AllProjects = 0x160f0001809f3fb0 size=0
(lldb) [1G[2m(lldb) [0m[8Gc
Process 7833 resuming
  Here is the List of all the Staff in the R&D Department: 
  ------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

   Josh   1   Technology Specialist   3000.00      2015

   Mary   2         Project Manager   5500.00      2010

   Marc   3    Research Team Leader   8000.00      2007

   Mike  11        Multimedia Prog.   2500.00      2014

  Julie  12     Mainframe Sys.Prog.   2150.00      2013

 Albert  13                OS Prog.   2300.00      2015

   John  21    Senior Software Eng.   4899.00      2011

 Connor  24      Software Developer   1900.00      2017
  Here is the List of all the Staff in the IT Department: 
  ------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

Process 7833 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mbreakpoint 4.1[0m
    frame #0: [33m0x000000010000df14[0m program`main at [36mmain.cpp[0m:[33m71[0m:[33m9[0m
[33m  [0m 68  		{
[33m  [0m 69  			cout << "\n";
[33m  [0m 70  			[35m//using Base Class Pointers to Call the print function if each Type[0m
[33m->[0m 71  	        [4mAllITEmployees[0m->at(i)->print();
[33m  [0m 72  		}
[33m  [0m 73  	
[33m  [0m 74  		cout << "\n Removing Mike from the company: ";
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gs
Process 7833 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep in[0m
    frame #0: [33m0x000000010000c340[0m program`Employee::print(this=0x0000000100204440) at [36memployeeClass.cpp[0m:[33m51[0m:[33m10[0m
[33m  [0m 48  	}
[33m  [0m 49  	
[33m  [0m 50  	[32mvoid[0m Employee::print() {
[33m->[0m 51  		cout << [4msetw[0m([31m7[0m) << getName()
[33m  [0m 52  			<< setw([31m4[0m) << getID()
[33m  [0m 53  			<< setw([31m24[0m) << getJobTitle()
[33m  [0m 54  			<< setw([31m10[0m) << setprecision([31m2[0m) << fixed << getSalary()
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gc
Process 7833 resuming
    Roy  32           Network Prog.   1900.00      2016

Process 7833 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mbreakpoint 4.1[0m
    frame #0: [33m0x000000010000df14[0m program`main at [36mmain.cpp[0m:[33m71[0m:[33m9[0m
[33m  [0m 68  		{
[33m  [0m 69  			cout << "\n";
[33m  [0m 70  			[35m//using Base Class Pointers to Call the print function if each Type[0m
[33m->[0m 71  	        [4mAllITEmployees[0m->at(i)->print();
[33m  [0m 72  		}
[33m  [0m 73  	
[33m  [0m 74  		cout << "\n Removing Mike from the company: ";
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gs
Process 7833 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep in[0m
    frame #0: [33m0x000000010000c340[0m program`Employee::print(this=0x00000001002044e0) at [36memployeeClass.cpp[0m:[33m51[0m:[33m10[0m
[33m  [0m 48  	}
[33m  [0m 49  	
[33m  [0m 50  	[32mvoid[0m Employee::print() {
[33m->[0m 51  		cout << [4msetw[0m([31m7[0m) << getName()
[33m  [0m 52  			<< setw([31m4[0m) << getID()
[33m  [0m 53  			<< setw([31m24[0m) << getJobTitle()
[33m  [0m 54  			<< setw([31m10[0m) << setprecision([31m2[0m) << fixed << getSalary()
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gc
Process 7833 resuming
   Jane  35                  Tester   1500.00      2018

 Removing Mike from the company: Succeeded
 -------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

   Josh   1   Technology Specialist   3000.00      2015

   Mary   2         Project Manager   5500.00      2010

   Marc   3    Research Team Leader   8000.00      2007

  Julie  12     Mainframe Sys.Prog.   2150.00      2013

 Albert  13                OS Prog.   2300.00      2015

   John  21    Senior Software Eng.   4899.00      2011

 Connor  24      Software Developer   1900.00      2017

  Here is the List of all the Programmers who know C++ in the R&D Department: 
  ---------------------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

  Julie  12     Mainframe Sys.Prog.   2150.00      2013      Mary         5         C++

 Albert  13                OS Prog.   2300.00      2015      Mary         9         C++

 Listing All Project IDs:  5 9 6 8
-------------------------
The Highest R&D Employee Salary is: 8000.00
The Highest R&D Programmer Salary is: 2300.00
The Highest R&D Software Architect Salary is: 4899.00

The Average R&D Employee Salary is: 5500
The Average R&D Programmer Salary is: 2225
The Average R&D Software Architect Salary is: 3399

The Average IT Employee Salary is: 0
The Average IT Programmer Salary is: 1700
The Average IT Software Architect Salary is: 0

Process 7833 exited with status = 0 (0x00000000) 
(lldb) [1G[2m(lldb) [0m[8Gbr[K[1G[2m(lldb) [0m[9G list
Breakpoint 5: no locations (pending).
WARNING:  Unable to resolve breakpoint to any actual locations.
(lldb) [1G[2m(lldb) [0m[8Gbr list
Current breakpoints:
3: file = 'main.cpp', line = 28, exact_match = 0, locations = 1, resolved = 1, hit count = 1
  3.1: where = program`main + 524 at main.cpp:28:16, address = 0x000000010000d330, resolved, hit count = 1 

4: file = 'main.cpp', line = 71, exact_match = 0, locations = 1, resolved = 1, hit count = 2
  4.1: where = program`main + 3568 at main.cpp:71:9, address = 0x000000010000df14, resolved, hit count = 2 

5: name = 'list', locations = 0 (pending)

(lldb) [1G[2m(lldb) [0m[8Gb delete 3
Breakpoint 6: no locations (pending).
WARNING:  Unable to resolve breakpoint to any actual locations.
(lldb) [1G[2m(lldb) [0m[8Gbr del 3
1 breakpoints deleted; 0 breakpoint locations disabled.
(lldb) [1G[2m(lldb) [0m[8Gbr del 4
1 breakpoints deleted; 0 breakpoint locations disabled.
(lldb) [1G[2m(lldb) [0m[8Gbr del 5
1 breakpoints deleted; 0 breakpoint locations disabled.
(lldb) [1G[2m(lldb) [0m[8Gj[K[1G[2m(lldb) [0m[8Gbr list
Current breakpoints:
6: name = 'delete 3', locations = 0 (pending)

(lldb) [1G[2m(lldb) [0m[8Gbr del 6
1 breakpoints deleted; 0 breakpoint locations disabled.
(lldb) [1G[2m(lldb) [0m[8Gbr list
No breakpoints currently set.
(lldb) [1G[2m(lldb) [0m[8Gb main:[K[1G[2m(lldb) [0m[14G.cpp:28
Breakpoint 7: where = program`main + 524 at main.cpp:28:16, address = 0x000000010000d330
(lldb) [1G[2m(lldb) [0m[8Gb main.cpp:59
Breakpoint 8: where = program`main + 1944 at main.cpp:59:9, address = 0x000000010000d8bc
(lldb) [1G[2m(lldb) [0m[8Gbr list
Current breakpoints:
7: file = 'main.cpp', line = 28, exact_match = 0, locations = 1
  7.1: where = program`main + 524 at main.cpp:28:16, address = 0x000000010000d330, unresolved, hit count = 0 

8: file = 'main.cpp', line = 59, exact_match = 0, locations = 1
  8.1: where = program`main + 1944 at main.cpp:59:9, address = 0x000000010000d8bc, unresolved, hit count = 0 

(lldb) [1G[2m(lldb) [0m[8Grun
Process 7927 launched: '/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode/program' (arm64)
Process 7927 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mbreakpoint 7.1[0m
    frame #0: [33m0x000000010000d330[0m program`main at [36mmain.cpp[0m:[33m28[0m:[33m16[0m
[33m  [0m 25  		RnD.Employees->push_back(E2);
[33m  [0m 26  		RnD.Employees->push_back(E3);
[33m  [0m 27  	
[33m->[0m 28  		Programmer P1([4m"Mike"[0m, [31m11[0m, "Multimedia Prog.", [31m2500[0m, [31m2014[0m, E2.getName(), [31m5[0m, "CSS");
[33m  [0m 29  		Programmer P2("Julie", [31m12[0m, "Mainframe Sys.Prog.", [31m2150[0m, [31m2013[0m, E2.getName(), [31m5[0m, "C++");
[33m  [0m 30  		Programmer P3("Albert", [31m13[0m, "OS Prog.", [31m2300[0m, [31m2015[0m, E2.getName(), [31m9[0m, "C++");
[33m  [0m 31  	 
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gs
Process 7927 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep in[0m
    frame #0: [33m0x000000010000c28c[0m program`Employee::getName(this=0x000000016fdff038) const at [36memployeeClass.cpp[0m:[33m30[0m:[33m9[0m
[33m  [0m 27  	
[33m  [0m 28  	[35m/* Accessor Functions */[0m
[33m  [0m 29  	string Employee::getName() [32mconst[0m {
[33m->[0m 30  		[32mreturn[0m [4mname[0m;
[33m  [0m 31  	}
[33m  [0m 32  	
[33m  [0m 33  	[32mlong[0m Employee::getID() [32mconst[0m {
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gframe fv[K[1G[2m(lldb) [0m[15G[K[1G[2m(lldb) [0m[14Gvariable
(const Employee *) this = 0x000000016fdff038
(lldb) [1G[2m(lldb) [0m[8Gn
Process 7927 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x000000010000d358[0m program`main at [36mmain.cpp[0m:[33m28[0m:[33m63[0m
[33m  [0m 25  		RnD.Employees->push_back(E2);
[33m  [0m 26  		RnD.Employees->push_back(E3);
[33m  [0m 27  	
[33m->[0m 28  		Programmer P1("Mike", [31m11[0m, "Multimedia Prog.", [31m2500[0m, [31m2014[0m, E2.[4mgetName[0m(), [31m5[0m, "CSS");
[33m  [0m 29  		Programmer P2("Julie", [31m12[0m, "Mainframe Sys.Prog.", [31m2150[0m, [31m2013[0m, E2.getName(), [31m5[0m, "C++");
[33m  [0m 30  		Programmer P3("Albert", [31m13[0m, "OS Prog.", [31m2300[0m, [31m2015[0m, E2.getName(), [31m9[0m, "C++");
[33m  [0m 31  	 
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gc
Process 7927 resuming
  Here is the List of all the Staff in the R&D Department: 
  ------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

Process 7927 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mbreakpoint 8.1[0m
    frame #0: [33m0x000000010000d8bc[0m program`main at [36mmain.cpp[0m:[33m59[0m:[33m9[0m
[33m  [0m 56  		{
[33m  [0m 57  			cout << "\n";
[33m  [0m 58  			[35m//using Base Class Pointers to Call the print function if each Type[0m
[33m->[0m 59  	        [4mAllRnDEmployees1[0m->at(i)->print();
[33m  [0m 60  		}
[33m  [0m 61  	
[33m  [0m 62  		cout << "  Here is the List of all the Staff in the IT Department: \n";
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gs
Process 7927 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep in[0m
    frame #0: [33m0x000000010000c340[0m program`Employee::print(this=0x0000000100204080) at [36memployeeClass.cpp[0m:[33m51[0m:[33m10[0m
[33m  [0m 48  	}
[33m  [0m 49  	
[33m  [0m 50  	[32mvoid[0m Employee::print() {
[33m->[0m 51  		cout << [4msetw[0m([31m7[0m) << getName()
[33m  [0m 52  			<< setw([31m4[0m) << getID()
[33m  [0m 53  			<< setw([31m24[0m) << getJobTitle()
[33m  [0m 54  			<< setw([31m10[0m) << setprecision([31m2[0m) << fixed << getSalary()
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 7927 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x000000010000c388[0m program`Employee::print(this=0x0000000100204080) at [36memployeeClass.cpp[0m:[33m52[0m:[33m6[0m
[33m  [0m 49  	
[33m  [0m 50  	[32mvoid[0m Employee::print() {
[33m  [0m 51  		cout << setw([31m7[0m) << getName()
[33m->[0m 52  			<< [4msetw[0m([31m4[0m) << getID()
[33m  [0m 53  			<< setw([31m24[0m) << getJobTitle()
[33m  [0m 54  			<< setw([31m10[0m) << setprecision([31m2[0m) << fixed << getSalary()
[33m  [0m 55  			<< setw([31m10[0m) << getHireYear()
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 7927 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x000000010000c3d0[0m program`Employee::print(this=0x0000000100204080) at [36memployeeClass.cpp[0m:[33m53[0m:[33m6[0m
[33m  [0m 50  	[32mvoid[0m Employee::print() {
[33m  [0m 51  		cout << setw([31m7[0m) << getName()
[33m  [0m 52  			<< setw([31m4[0m) << getID()
[33m->[0m 53  			<< [4msetw[0m([31m24[0m) << getJobTitle()
[33m  [0m 54  			<< setw([31m10[0m) << setprecision([31m2[0m) << fixed << getSalary()
[33m  [0m 55  			<< setw([31m10[0m) << getHireYear()
[33m  [0m 56  				  << "\n";
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 7927 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x000000010000c420[0m program`Employee::print(this=0x0000000100204080) at [36memployeeClass.cpp[0m:[33m54[0m:[33m6[0m
[33m  [0m 51  		cout << setw([31m7[0m) << getName()
[33m  [0m 52  			<< setw([31m4[0m) << getID()
[33m  [0m 53  			<< setw([31m24[0m) << getJobTitle()
[33m->[0m 54  			<< [4msetw[0m([31m10[0m) << setprecision([31m2[0m) << fixed << getSalary()
[33m  [0m 55  			<< setw([31m10[0m) << getHireYear()
[33m  [0m 56  				  << "\n";
[33m  [0m 57  	}
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 7927 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x000000010000c4a8[0m program`Employee::print(this=0x0000000100204080) at [36memployeeClass.cpp[0m:[33m55[0m:[33m6[0m
[33m  [0m 52  			<< setw([31m4[0m) << getID()
[33m  [0m 53  			<< setw([31m24[0m) << getJobTitle()
[33m  [0m 54  			<< setw([31m10[0m) << setprecision([31m2[0m) << fixed << getSalary()
[33m->[0m 55  			<< [4msetw[0m([31m10[0m) << getHireYear()
[33m  [0m 56  				  << "\n";
[33m  [0m 57  	}
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 7927 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x000000010000c4f8[0m program`Employee::print(this=0x0000000100204080) at [36memployeeClass.cpp[0m:[33m56[0m:[33m6[0m
[33m  [0m 53  			<< setw([31m24[0m) << getJobTitle()
[33m  [0m 54  			<< setw([31m10[0m) << setprecision([31m2[0m) << fixed << getSalary()
[33m  [0m 55  			<< setw([31m10[0m) << getHireYear()
[33m->[0m 56  				  [4m<<[0m "\n";
[33m  [0m 57  	}
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
   Josh   1   Technology Specialist   3000.00      2015
Process 7927 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x000000010000c504[0m program`Employee::print(this=0x0000000100204080) at [36memployeeClass.cpp[0m:[33m51[0m:[33m2[0m
[33m  [0m 48  	}
[33m  [0m 49  	
[33m  [0m 50  	[32mvoid[0m Employee::print() {
[33m->[0m 51  		[4mcout[0m << setw([31m7[0m) << getName()
[33m  [0m 52  			<< setw([31m4[0m) << getID()
[33m  [0m 53  			<< setw([31m24[0m) << getJobTitle()
[33m  [0m 54  			<< setw([31m10[0m) << setprecision([31m2[0m) << fixed << getSalary()
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 7927 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x000000010000c514[0m program`Employee::print(this=0x0000000100204080) at [36memployeeClass.cpp[0m:[33m57[0m:[33m1[0m
[33m  [0m 54  			<< setw([31m10[0m) << setprecision([31m2[0m) << fixed << getSalary()
[33m  [0m 55  			<< setw([31m10[0m) << getHireYear()
[33m  [0m 56  				  << "\n";
[33m->[0m 57  	[4m}[0m
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 7927 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x000000010000d8e0[0m program`main at [36mmain.cpp[0m:[33m59[0m:[33m34[0m
[33m  [0m 56  		{
[33m  [0m 57  			cout << "\n";
[33m  [0m 58  			[35m//using Base Class Pointers to Call the print function if each Type[0m
[33m->[0m 59  	        AllRnDEmployees1->at(i)->[4mprint[0m();
[33m  [0m 60  		}
[33m  [0m 61  	
[33m  [0m 62  		cout << "  Here is the List of all the Staff in the IT Department: \n";
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Grun
There is a running process, kill it and restart?: [Y/n] Y
Process 7927 exited with status = 9 (0x00000009) 
Process 7948 launched: '/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode/program' (arm64)
Process 7948 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mbreakpoint 7.1[0m
    frame #0: [33m0x000000010000d330[0m program`main at [36mmain.cpp[0m:[33m28[0m:[33m16[0m
[33m  [0m 25  		RnD.Employees->push_back(E2);
[33m  [0m 26  		RnD.Employees->push_back(E3);
[33m  [0m 27  	
[33m->[0m 28  		Programmer P1([4m"Mike"[0m, [31m11[0m, "Multimedia Prog.", [31m2500[0m, [31m2014[0m, E2.getName(), [31m5[0m, "CSS");
[33m  [0m 29  		Programmer P2("Julie", [31m12[0m, "Mainframe Sys.Prog.", [31m2150[0m, [31m2013[0m, E2.getName(), [31m5[0m, "C++");
[33m  [0m 30  		Programmer P3("Albert", [31m13[0m, "OS Prog.", [31m2300[0m, [31m2015[0m, E2.getName(), [31m9[0m, "C++");
[33m  [0m 31  	 
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gc
Process 7948 resuming
  Here is the List of all the Staff in the R&D Department: 
  ------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

Process 7948 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mbreakpoint 8.1[0m
    frame #0: [33m0x000000010000d8bc[0m program`main at [36mmain.cpp[0m:[33m59[0m:[33m9[0m
[33m  [0m 56  		{
[33m  [0m 57  			cout << "\n";
[33m  [0m 58  			[35m//using Base Class Pointers to Call the print function if each Type[0m
[33m->[0m 59  	        [4mAllRnDEmployees1[0m->at(i)->print();
[33m  [0m 60  		}
[33m  [0m 61  	
[33m  [0m 62  		cout << "  Here is the List of all the Staff in the IT Department: \n";
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
   Josh   1   Technology Specialist   3000.00      2015
Process 7948 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x000000010000d8e4[0m program`main at [36mmain.cpp[0m:[33m60[0m:[33m2[0m
[33m  [0m 57  			cout << "\n";
[33m  [0m 58  			[35m//using Base Class Pointers to Call the print function if each Type[0m
[33m  [0m 59  	        AllRnDEmployees1->at(i)->print();
[33m->[0m 60  		[4m}[0m
[33m  [0m 61  	
[33m  [0m 62  		cout << "  Here is the List of all the Staff in the IT Department: \n";
[33m  [0m 63  		cout << "  ------------------------------------------------------------\n";
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 7948 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x000000010000d8e8[0m program`main at [36mmain.cpp[0m:[33m55[0m:[33m57[0m
[33m  [0m 52  		[35m//a Employee Vector that holds all types of staff[0m
[33m  [0m 53  	    vector<Employee*> *AllRnDEmployees1 = RnD.getAllStaff();
[33m  [0m 54  	
[33m->[0m 55  	    [32mfor[0m ([32munsigned[0m i = [31m0[0m; i < AllRnDEmployees1->size(); i[4m++[0m)
[33m  [0m 56  		{
[33m  [0m 57  			cout << "\n";
[33m  [0m 58  			[35m//using Base Class Pointers to Call the print function if each Type[0m
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 7948 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x000000010000d8b0[0m program`main at [36mmain.cpp[0m:[33m57[0m:[33m8[0m
[33m  [0m 54  	
[33m  [0m 55  	    [32mfor[0m ([32munsigned[0m i = [31m0[0m; i < AllRnDEmployees1->size(); i++)
[33m  [0m 56  		{
[33m->[0m 57  			cout [4m<<[0m "\n";
[33m  [0m 58  			[35m//using Base Class Pointers to Call the print function if each Type[0m
[33m  [0m 59  	        AllRnDEmployees1->at(i)->print();
[33m  [0m 60  		}
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn

Process 7948 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mbreakpoint 8.1[0m
    frame #0: [33m0x000000010000d8bc[0m program`main at [36mmain.cpp[0m:[33m59[0m:[33m9[0m
[33m  [0m 56  		{
[33m  [0m 57  			cout << "\n";
[33m  [0m 58  			[35m//using Base Class Pointers to Call the print function if each Type[0m
[33m->[0m 59  	        [4mAllRnDEmployees1[0m->at(i)->print();
[33m  [0m 60  		}
[33m  [0m 61  	
[33m  [0m 62  		cout << "  Here is the List of all the Staff in the IT Department: \n";
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
   Mary   2         Project Manager   5500.00      2010
Process 7948 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x000000010000d8e4[0m program`main at [36mmain.cpp[0m:[33m60[0m:[33m2[0m
[33m  [0m 57  			cout << "\n";
[33m  [0m 58  			[35m//using Base Class Pointers to Call the print function if each Type[0m
[33m  [0m 59  	        AllRnDEmployees1->at(i)->print();
[33m->[0m 60  		[4m}[0m
[33m  [0m 61  	
[33m  [0m 62  		cout << "  Here is the List of all the Staff in the IT Department: \n";
[33m  [0m 63  		cout << "  ------------------------------------------------------------\n";
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 7948 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x000000010000d8e8[0m program`main at [36mmain.cpp[0m:[33m55[0m:[33m57[0m
[33m  [0m 52  		[35m//a Employee Vector that holds all types of staff[0m
[33m  [0m 53  	    vector<Employee*> *AllRnDEmployees1 = RnD.getAllStaff();
[33m  [0m 54  	
[33m->[0m 55  	    [32mfor[0m ([32munsigned[0m i = [31m0[0m; i < AllRnDEmployees1->size(); i[4m++[0m)
[33m  [0m 56  		{
[33m  [0m 57  			cout << "\n";
[33m  [0m 58  			[35m//using Base Class Pointers to Call the print function if each Type[0m
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 7948 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x000000010000d8b0[0m program`main at [36mmain.cpp[0m:[33m57[0m:[33m8[0m
[33m  [0m 54  	
[33m  [0m 55  	    [32mfor[0m ([32munsigned[0m i = [31m0[0m; i < AllRnDEmployees1->size(); i++)
[33m  [0m 56  		{
[33m->[0m 57  			cout [4m<<[0m "\n";
[33m  [0m 58  			[35m//using Base Class Pointers to Call the print function if each Type[0m
[33m  [0m 59  	        AllRnDEmployees1->at(i)->print();
[33m  [0m 60  		}
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gfa[K[1G[2m(lldb) [0m[9Grame variable
(Department) RnD = {
  Name = "Research and Development"
  ID = -1
  Employees = 0x0000600000201220 size=3
  Programmers = 0x0000600000201240 size=3
  SoftwareArchitects = 0x0000600000201260 size=2
}
(Department) IT = {
  Name = "Info And Tech"
  ID = -1
  Employees = 0x00006000002011a0 size=0
  Programmers = 0x0000600000201280 size=2
  SoftwareArchitects = 0x00006000002012a0 size=0
}
(Employee) E1 = (name = "Josh", age = 0, gender = '\0', ID = 1, phoneNumber = "", jobTitle = "Technology Specialist", salary = 3000, HireYear = 2015)
(Employee) E2 = (name = "Mary", age = 0, gender = '\0', ID = 2, phoneNumber = "", jobTitle = "Project Manager", salary = 5500, HireYear = 2010)
(Employee) E3 = (name = "Marc", age = 0, gender = '\0', ID = 3, phoneNumber = "", jobTitle = "Research Team Leader", salary = 8000, HireYear = 2007)
(Programmer) P1 = {
  Employee = (name = "Mike", age = 0, gender = '\0', ID = 11, phoneNumber = "", jobTitle = "Multimedia Prog.", salary = 2500, HireYear = 2014)
  supervisorName = "Mary"
  ProjectID = 5
  Language = "CSS"
}
(Programmer) P2 = {
  Employee = (name = "Julie", age = 0, gender = '\0', ID = 12, phoneNumber = "", jobTitle = "Mainframe Sys.Prog.", salary = 2150, HireYear = 2013)
  supervisorName = "Mary"
  ProjectID = 5
  Language = "C++"
}
(Programmer) P3 = {
  Employee = (name = "Albert", age = 0, gender = '\0', ID = 13, phoneNumber = "", jobTitle = "OS Prog.", salary = 2300, HireYear = 2015)
  supervisorName = "Mary"
  ProjectID = 9
  Language = "C++"
}
(SoftwareArchitect) SA1 = {
  Employee = (name = "John", age = 1107296256, gender = '\0', ID = 21, phoneNumber = "", jobTitle = "Senior Software Eng.", salary = 4899, HireYear = 2011)
  supervisorName = "Marc"
  ProjectID = 6
  experienceYears = 7
}
(SoftwareArchitect) SA2 = {
  Employee = (name = "Connor", age = 311384, gender = '\x01', ID = 24, phoneNumber = "", jobTitle = "Software Developer", salary = 1900, HireYear = 2017)
  supervisorName = "John"
  ProjectID = 8
  experienceYears = 0
}
(Programmer) P4 = {
  Employee = (name = "Roy", age = 650498728, gender = '\x02', ID = 32, phoneNumber = "", jobTitle = "Network Prog.", salary = 1900, HireYear = 2016)
  supervisorName = "N/A"
  ProjectID = 7
  Language = "JAVA"
}
(Programmer) P5 = {
  Employee = (name = "Jane", age = 0, gender = '\0', ID = 35, phoneNumber = "", jobTitle = "Tester", salary = 1500, HireYear = 2018)
  supervisorName = "Roy"
  ProjectID = 7
  Language = "JAVA"
}
(std::vector<Employee *, std::allocator<Employee *> > *) AllRnDEmployees1 = 0x000060000020c000 size=8
(std::vector<Employee *, std::allocator<Employee *> > *) AllITEmployees = 0x000000016fdfed00 size=0
(std::vector<Employee *, std::allocator<Employee *> > *) AllRnDEmployees2 = nullptr
(std::vector<Programmer, std::allocator<Programmer> > *) CppProgrammers = 0x000000016fdfe850 size=0
(std::vector<int, std::allocator<int> > *) AllProjects = 0x6c1a0001809f3fb0 size=0
(unsigned int) i = 2
(lldb) [1G[2m(lldb) [0m[8Gn

Process 7948 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mbreakpoint 8.1[0m
    frame #0: [33m0x000000010000d8bc[0m program`main at [36mmain.cpp[0m:[33m59[0m:[33m9[0m
[33m  [0m 56  		{
[33m  [0m 57  			cout << "\n";
[33m  [0m 58  			[35m//using Base Class Pointers to Call the print function if each Type[0m
[33m->[0m 59  	        [4mAllRnDEmployees1[0m->at(i)->print();
[33m  [0m 60  		}
[33m  [0m 61  	
[33m  [0m 62  		cout << "  Here is the List of all the Staff in the IT Department: \n";
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
   Marc   3    Research Team Leader   8000.00      2007
Process 7948 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x000000010000d8e4[0m program`main at [36mmain.cpp[0m:[33m60[0m:[33m2[0m
[33m  [0m 57  			cout << "\n";
[33m  [0m 58  			[35m//using Base Class Pointers to Call the print function if each Type[0m
[33m  [0m 59  	        AllRnDEmployees1->at(i)->print();
[33m->[0m 60  		[4m}[0m
[33m  [0m 61  	
[33m  [0m 62  		cout << "  Here is the List of all the Staff in the IT Department: \n";
[33m  [0m 63  		cout << "  ------------------------------------------------------------\n";
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 7948 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x000000010000d8e8[0m program`main at [36mmain.cpp[0m:[33m55[0m:[33m57[0m
[33m  [0m 52  		[35m//a Employee Vector that holds all types of staff[0m
[33m  [0m 53  	    vector<Employee*> *AllRnDEmployees1 = RnD.getAllStaff();
[33m  [0m 54  	
[33m->[0m 55  	    [32mfor[0m ([32munsigned[0m i = [31m0[0m; i < AllRnDEmployees1->size(); i[4m++[0m)
[33m  [0m 56  		{
[33m  [0m 57  			cout << "\n";
[33m  [0m 58  			[35m//using Base Class Pointers to Call the print function if each Type[0m
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 7948 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x000000010000d8b0[0m program`main at [36mmain.cpp[0m:[33m57[0m:[33m8[0m
[33m  [0m 54  	
[33m  [0m 55  	    [32mfor[0m ([32munsigned[0m i = [31m0[0m; i < AllRnDEmployees1->size(); i++)
[33m  [0m 56  		{
[33m->[0m 57  			cout [4m<<[0m "\n";
[33m  [0m 58  			[35m//using Base Class Pointers to Call the print function if each Type[0m
[33m  [0m 59  	        AllRnDEmployees1->at(i)->print();
[33m  [0m 60  		}
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn

Process 7948 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mbreakpoint 8.1[0m
    frame #0: [33m0x000000010000d8bc[0m program`main at [36mmain.cpp[0m:[33m59[0m:[33m9[0m
[33m  [0m 56  		{
[33m  [0m 57  			cout << "\n";
[33m  [0m 58  			[35m//using Base Class Pointers to Call the print function if each Type[0m
[33m->[0m 59  	        [4mAllRnDEmployees1[0m->at(i)->print();
[33m  [0m 60  		}
[33m  [0m 61  	
[33m  [0m 62  		cout << "  Here is the List of all the Staff in the IT Department: \n";
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gframe variable
(Department) RnD = {
  Name = "Research and Development"
  ID = -1
  Employees = 0x0000600000201220 size=3
  Programmers = 0x0000600000201240 size=3
  SoftwareArchitects = 0x0000600000201260 size=2
}
(Department) IT = {
  Name = "Info And Tech"
  ID = -1
  Employees = 0x00006000002011a0 size=0
  Programmers = 0x0000600000201280 size=2
  SoftwareArchitects = 0x00006000002012a0 size=0
}
(Employee) E1 = (name = "Josh", age = 0, gender = '\0', ID = 1, phoneNumber = "", jobTitle = "Technology Specialist", salary = 3000, HireYear = 2015)
(Employee) E2 = (name = "Mary", age = 0, gender = '\0', ID = 2, phoneNumber = "", jobTitle = "Project Manager", salary = 5500, HireYear = 2010)
(Employee) E3 = (name = "Marc", age = 0, gender = '\0', ID = 3, phoneNumber = "", jobTitle = "Research Team Leader", salary = 8000, HireYear = 2007)
(Programmer) P1 = {
  Employee = (name = "Mike", age = 0, gender = '\0', ID = 11, phoneNumber = "", jobTitle = "Multimedia Prog.", salary = 2500, HireYear = 2014)
  supervisorName = "Mary"
  ProjectID = 5
  Language = "CSS"
}
(Programmer) P2 = {
  Employee = (name = "Julie", age = 0, gender = '\0', ID = 12, phoneNumber = "", jobTitle = "Mainframe Sys.Prog.", salary = 2150, HireYear = 2013)
  supervisorName = "Mary"
  ProjectID = 5
  Language = "C++"
}
(Programmer) P3 = {
  Employee = (name = "Albert", age = 0, gender = '\0', ID = 13, phoneNumber = "", jobTitle = "OS Prog.", salary = 2300, HireYear = 2015)
  supervisorName = "Mary"
  ProjectID = 9
  Language = "C++"
}
(SoftwareArchitect) SA1 = {
  Employee = (name = "John", age = 1107296256, gender = '\0', ID = 21, phoneNumber = "", jobTitle = "Senior Software Eng.", salary = 4899, HireYear = 2011)
  supervisorName = "Marc"
  ProjectID = 6
  experienceYears = 7
}
(SoftwareArchitect) SA2 = {
  Employee = (name = "Connor", age = 311384, gender = '\x01', ID = 24, phoneNumber = "", jobTitle = "Software Developer", salary = 1900, HireYear = 2017)
  supervisorName = "John"
  ProjectID = 8
  experienceYears = 0
}
(Programmer) P4 = {
  Employee = (name = "Roy", age = 650498728, gender = '\x02', ID = 32, phoneNumber = "", jobTitle = "Network Prog.", salary = 1900, HireYear = 2016)
  supervisorName = "N/A"
  ProjectID = 7
  Language = "JAVA"
}
(Programmer) P5 = {
  Employee = (name = "Jane", age = 0, gender = '\0', ID = 35, phoneNumber = "", jobTitle = "Tester", salary = 1500, HireYear = 2018)
  supervisorName = "Roy"
  ProjectID = 7
  Language = "JAVA"
}
(std::vector<Employee *, std::allocator<Employee *> > *) AllRnDEmployees1 = 0x000060000020c000 size=8
(std::vector<Employee *, std::allocator<Employee *> > *) AllITEmployees = 0x000000016fdfed00 size=0
(std::vector<Employee *, std::allocator<Employee *> > *) AllRnDEmployees2 = nullptr
(std::vector<Programmer, std::allocator<Programmer> > *) CppProgrammers = 0x000000016fdfe850 size=0
(std::vector<int, std::allocator<int> > *) AllProjects = 0x6c1a0001809f3fb0 size=0
(unsigned int) i = 3
(lldb) [1G[2m(lldb) [0m[8Gn
   Mike  11        Multimedia Prog.   2500.00      2014
Process 7948 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x000000010000d8e4[0m program`main at [36mmain.cpp[0m:[33m60[0m:[33m2[0m
[33m  [0m 57  			cout << "\n";
[33m  [0m 58  			[35m//using Base Class Pointers to Call the print function if each Type[0m
[33m  [0m 59  	        AllRnDEmployees1->at(i)->print();
[33m->[0m 60  		[4m}[0m
[33m  [0m 61  	
[33m  [0m 62  		cout << "  Here is the List of all the Staff in the IT Department: \n";
[33m  [0m 63  		cout << "  ------------------------------------------------------------\n";
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gc
Process 7948 resuming

Process 7948 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mbreakpoint 8.1[0m
    frame #0: [33m0x000000010000d8bc[0m program`main at [36mmain.cpp[0m:[33m59[0m:[33m9[0m
[33m  [0m 56  		{
[33m  [0m 57  			cout << "\n";
[33m  [0m 58  			[35m//using Base Class Pointers to Call the print function if each Type[0m
[33m->[0m 59  	        [4mAllRnDEmployees1[0m->at(i)->print();
[33m  [0m 60  		}
[33m  [0m 61  	
[33m  [0m 62  		cout << "  Here is the List of all the Staff in the IT Department: \n";
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gc
Process 7948 resuming
  Julie  12     Mainframe Sys.Prog.   2150.00      2013

Process 7948 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mbreakpoint 8.1[0m
    frame #0: [33m0x000000010000d8bc[0m program`main at [36mmain.cpp[0m:[33m59[0m:[33m9[0m
[33m  [0m 56  		{
[33m  [0m 57  			cout << "\n";
[33m  [0m 58  			[35m//using Base Class Pointers to Call the print function if each Type[0m
[33m->[0m 59  	        [4mAllRnDEmployees1[0m->at(i)->print();
[33m  [0m 60  		}
[33m  [0m 61  	
[33m  [0m 62  		cout << "  Here is the List of all the Staff in the IT Department: \n";
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gc
Process 7948 resuming
 Albert  13                OS Prog.   2300.00      2015

Process 7948 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mbreakpoint 8.1[0m
    frame #0: [33m0x000000010000d8bc[0m program`main at [36mmain.cpp[0m:[33m59[0m:[33m9[0m
[33m  [0m 56  		{
[33m  [0m 57  			cout << "\n";
[33m  [0m 58  			[35m//using Base Class Pointers to Call the print function if each Type[0m
[33m->[0m 59  	        [4mAllRnDEmployees1[0m->at(i)->print();
[33m  [0m 60  		}
[33m  [0m 61  	
[33m  [0m 62  		cout << "  Here is the List of all the Staff in the IT Department: \n";
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gs
Process 7948 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep in[0m
    frame #0: [33m0x000000010000c340[0m program`Employee::print(this=0x0000000100204080) at [36memployeeClass.cpp[0m:[33m51[0m:[33m10[0m
[33m  [0m 48  	}
[33m  [0m 49  	
[33m  [0m 50  	[32mvoid[0m Employee::print() {
[33m->[0m 51  		cout << [4msetw[0m([31m7[0m) << getName()
[33m  [0m 52  			<< setw([31m4[0m) << getID()
[33m  [0m 53  			<< setw([31m24[0m) << getJobTitle()
[33m  [0m 54  			<< setw([31m10[0m) << setprecision([31m2[0m) << fixed << getSalary()
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gframe variable
(Employee *) this = 0x0000000100204080
(lldb) [1G[2m(lldb) [0m[8Gc
Process 7948 resuming
   John  21    Senior Software Eng.   4899.00      2011

Process 7948 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mbreakpoint 8.1[0m
    frame #0: [33m0x000000010000d8bc[0m program`main at [36mmain.cpp[0m:[33m59[0m:[33m9[0m
[33m  [0m 56  		{
[33m  [0m 57  			cout << "\n";
[33m  [0m 58  			[35m//using Base Class Pointers to Call the print function if each Type[0m
[33m->[0m 59  	        [4mAllRnDEmployees1[0m->at(i)->print();
[33m  [0m 60  		}
[33m  [0m 61  	
[33m  [0m 62  		cout << "  Here is the List of all the Staff in the IT Department: \n";
Target 0: (program) stopped.
(lldb) [1G[2m(lldb) [0m[8Gframe variable
(Department) RnD = {
  Name = "Research and Development"
  ID = -1
  Employees = 0x0000600000201220 size=3
  Programmers = 0x0000600000201240 size=3
  SoftwareArchitects = 0x0000600000201260 size=2
}
(Department) IT = {
  Name = "Info And Tech"
  ID = -1
  Employees = 0x00006000002011a0 size=0
  Programmers = 0x0000600000201280 size=2
  SoftwareArchitects = 0x00006000002012a0 size=0
}
(Employee) E1 = (name = "Josh", age = 0, gender = '\0', ID = 1, phoneNumber = "", jobTitle = "Technology Specialist", salary = 3000, HireYear = 2015)
(Employee) E2 = (name = "Mary", age = 0, gender = '\0', ID = 2, phoneNumber = "", jobTitle = "Project Manager", salary = 5500, HireYear = 2010)
(Employee) E3 = (name = "Marc", age = 0, gender = '\0', ID = 3, phoneNumber = "", jobTitle = "Research Team Leader", salary = 8000, HireYear = 2007)
(Programmer) P1 = {
  Employee = (name = "Mike", age = 0, gender = '\0', ID = 11, phoneNumber = "", jobTitle = "Multimedia Prog.", salary = 2500, HireYear = 2014)
  supervisorName = "Mary"
  ProjectID = 5
  Language = "CSS"
}
(Programmer) P2 = {
  Employee = (name = "Julie", age = 0, gender = '\0', ID = 12, phoneNumber = "", jobTitle = "Mainframe Sys.Prog.", salary = 2150, HireYear = 2013)
  supervisorName = "Mary"
  ProjectID = 5
  Language = "C++"
}
(Programmer) P3 = {
  Employee = (name = "Albert", age = 0, gender = '\0', ID = 13, phoneNumber = "", jobTitle = "OS Prog.", salary = 2300, HireYear = 2015)
  supervisorName = "Mary"
  ProjectID = 9
  Language = "C++"
}
(SoftwareArchitect) SA1 = {
  Employee = (name = "John", age = 1107296256, gender = '\0', ID = 21, phoneNumber = "", jobTitle = "Senior Software Eng.", salary = 4899, HireYear = 2011)
  supervisorName = "Marc"
  ProjectID = 6
  experienceYears = 7
}
(SoftwareArchitect) SA2 = {
  Employee = (name = "Connor", age = 311384, gender = '\x01', ID = 24, phoneNumber = "", jobTitle = "Software Developer", salary = 1900, HireYear = 2017)
  supervisorName = "John"
  ProjectID = 8
  experienceYears = 0
}
(Programmer) P4 = {
  Employee = (name = "Roy", age = 650498728, gender = '\x02', ID = 32, phoneNumber = "", jobTitle = "Network Prog.", salary = 1900, HireYear = 2016)
  supervisorName = "N/A"
  ProjectID = 7
  Language = "JAVA"
}
(Programmer) P5 = {
  Employee = (name = "Jane", age = 0, gender = '\0', ID = 35, phoneNumber = "", jobTitle = "Tester", salary = 1500, HireYear = 2018)
  supervisorName = "Roy"
  ProjectID = 7
  Language = "JAVA"
}
(std::vector<Employee *, std::allocator<Employee *> > *) AllRnDEmployees1 = 0x000060000020c000 size=8
(std::vector<Employee *, std::allocator<Employee *> > *) AllITEmployees = 0x000000016fdfed00 size=0
(std::vector<Employee *, std::allocator<Employee *> > *) AllRnDEmployees2 = nullptr
(std::vector<Programmer, std::allocator<Programmer> > *) CppProgrammers = 0x000000016fdfe850 size=0
(std::vector<int, std::allocator<int> > *) AllProjects = 0x6c1a0001809f3fb0 size=0
(unsigned int) i = 7
(lldb) [1G[2m(lldb) [0m[8Gexit
Quitting LLDB will kill one or more processes. Do you really want to proceed: [Y /n] y
[1m[7m%[27m[1m[0m                                                                                ]7;file://corinnes-mbp.lan/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode[0m[27m[24m[Jcorinnejones@corinnes-mbp buggyCode % [K[?2004hY[?2004l
zsh: command not found: Y
[1m[7m%[27m[1m[0m                                                                                ]7;file://corinnes-mbp.lan/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode[0m[27m[24m[Jcorinnejones@corinnes-mbp buggyCode % [K[?2004heexit[?2004l                                                                                                            ]7;file://corinnes-mbp.lan/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode[0m[27m[24m[Jcorinnejones@corinnes-mbp buggyCode % [K[?2004hexitY   lldb program[12Dclang++ *.cpp -g -O0  -o program[32Dlldb program        [2C          [20D[12Dclang++ *.cpp -g -O0  -o program[?2004l
[1m[7m%[27m[1m[0m                                                                                                              ]7;file://corinnes-mbp.lan/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode[0m[27m[24m[Jcorinnejones@corinnes-mbp buggyCode % [K[?2004hclang++ *.cpp -g -O0  -o program[32Dexit                [2C          [28DY   lldb program[12Dclang++ *.cpp -g -O0  -o program[32Dlldb program        [2C          [20D[?2004l
(lldb) target create "program"
[2mLocating external symbol file for program...[0m[K[2K[2mLoading Apple DWARF index for program...[0m[K[2K[2mLocating external symbol file for dyld...[0m[K[2K[2mParsing symbol table for dyld...[0m[K[2K[2mLocating external symbol file for libc++.1.dylib...[0m[K[2K[2mParsing symbol table for libc++.1.dylib...[0m[K[2K[2mLocating external symbol file for libSystem.B.dylib...[0m[K[2K[2mParsing symbol table for libSystem.B.dylib...[0m[K[2K[2mLocating external symbol file for libc++abi.dylib...[0m[K[2K[2mParsing symbol table for libc++abi.dylib...[0m[K[2K[2mLocating external symbol file for libcache.dylib...[0m[K[2K[2mParsing symbol table for libcache.dylib...[0m[K[2K[2mLocating external symbol file for libcommonCrypto.dylib...[0m[K[2K[2mParsing symbol table for libcommonCrypto.dylib...[0m[K[2K[2mLocating external symbol file for libcompiler_rt.dylib...[0m[K[2K[2mParsing symbol table for libcompiler_rt.dylib...[0m[K[2K[2mLocating external symbol file for libcopyfile.dylib...[0m[K[2K[2mParsing symbol table for libcopyfile.dylib...[0m[K[2K[2mLocating external symbol file for libcorecrypto.dylib...[0m[K[2K[2mParsing symbol table for libcorecrypto.dylib...[0m[K[2K[2mLocating external symbol file for libdispatch.dylib...[0m[K[2K[2mParsing symbol table for libdispatch.dylib...[0m[K[2K[2mLocating external symbol file for libdyld.dylib...[0m[K[2K[2mParsing symbol table for libdyld.dylib...[0m[K[2K[2mLocating external symbol file for libkeymgr.dylib...[0m[K[2K[2mParsing symbol table for libkeymgr.dylib...[0m[K[2K[2mLocating external symbol file for libmacho.dylib...[0m[K[2K[2mParsing symbol table for libmacho.dylib...[0m[K[2K[2mLocating external symbol file for libquarantine.dylib...[0m[K[2K[2mParsing symbol table for libquarantine.dylib...[0m[K[2K[2mLocating external symbol file for libremovefile.dylib...[0m[K[2K[2mParsing symbol table for libremovefile.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_asl.dylib...[0m[K[2K[2mParsing symbol table for libsystem_asl.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_blocks.dylib...[0m[K[2K[2mParsing symbol table for libsystem_blocks.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_c.dylib...[0m[K[2K[2mParsing symbol table for libsystem_c.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_collections.dylib...[0m[K[2K[2mParsing symbol table for libsystem_collections.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_configuration.dylib...[0m[K[2K[2mParsing symbol table for libsystem_configuration.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_containermanager.dylib...[0m[K[2K[2mParsing symbol table for libsystem_containermanager.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_coreservices.dylib...[0m[K[2K[2mParsing symbol table for libsystem_coreservices.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_darwin.dylib...[0m[K[2K[2mParsing symbol table for libsystem_darwin.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_dnssd.dylib...[0m[K[2K[2mParsing symbol table for libsystem_dnssd.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_featureflags.dylib...[0m[K[2K[2mParsing symbol table for libsystem_featureflags.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_info.dylib...[0m[K[2K[2mParsing symbol table for libsystem_info.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_m.dylib...[0m[K[2K[2mParsing symbol table for libsystem_m.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_malloc.dylib...[0m[K[2K[2mParsing symbol table for libsystem_malloc.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_networkextension.dylib...[0m[K[2K[2mParsing symbol table for libsystem_networkextension.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_notify.dylib...[0m[K[2K[2mParsing symbol table for libsystem_notify.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_sandbox.dylib...[0m[K[2K[2mParsing symbol table for libsystem_sandbox.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_secinit.dylib...[0m[K[2K[2mParsing symbol table for libsystem_secinit.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_kernel.dylib...[0m[K[2K[2mParsing symbol table for libsystem_kernel.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_platform.dylib...[0m[K[2K[2mParsing symbol table for libsystem_platform.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_pthread.dylib...[0m[K[2K[2mParsing symbol table for libsystem_pthread.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_symptoms.dylib...[0m[K[2K[2mParsing symbol table for libsystem_symptoms.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_trace.dylib...[0m[K[2K[2mParsing symbol table for libsystem_trace.dylib...[0m[K[2K[2mLocating external symbol file for libunwind.dylib...[0m[K[2K[2mParsing symbol table for libunwind.dylib...[0m[K[2K[2mLocating external symbol file for libxpc.dylib...[0m[K[2K[2mParsing symbol table for libxpc.dylib...[0m[K[2K[2mLocating external symbol file for libobjc.A.dylib...[0m[K[2K[2mParsing symbol table for libobjc.A.dylib...[0m[K[2K[2mLocating external symbol file for liboah.dylib...[0m[K[2K[2mParsing symbol table for liboah.dylib...[0m[K[2K[2mParsing symbol table for program...[0m[K[2KCurrent executable set to '/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode/program' (arm64).
(lldb) [1G[2m(lldb) [0m[8Gls[K[1G[2m(lldb) [0m[9G[K[1G[2m(lldb) [0m[8Gexit
[1m[7m%[27m[1m[0m                                                                                                              ]7;file://corinnes-mbp.lan/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode[0m[27m[24m[Jcorinnejones@corinnes-mbp buggyCode % [K[?2004hlls[?2004l
CorinneJones copy.txt		employeeClass.h			programmerClass.h
CorinneJones.txt		main.cpp			softwarearchitectClass.cpp
Department.cpp			program				softwarearchitectClass.h
Department.h			program.dSYM
employeeClass.cpp		programmerClass.cpp
[1m[7m%[27m[1m[0m                                                                                                              ]7;file://corinnes-mbp.lan/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode[0m[27m[24m[Jcorinnejones@corinnes-mbp buggyCode % [K[?2004hvvim e employee.  eClass.h[?2004l
[?1049h[>4;2m[?1h=[?2004h[?1004h[1;35r[?12h[?12l[22;2t[22;1t[27m[29m[m[H[2J[?25l[35;1H"employeeClass.h" 33L, 621B[2;1H▽[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#ifndef EMPLOYEECLASS_H_
#define EMPLOYEECLASS_H_[2;25H[K[3;1H[K[4;1H#include <iostream>
#include <iomanip>
#include <string>

using namespace std;

class Employee {[11;9Hstring name;[12;9Hint age;[13;9Hchar gender;[14;9Hint ID;[15;9Hstring phoneNumber;[16;9Hstring jobTitle;[17;9Hdouble salary;[18;9Hint HireYear;
public:[20;9H/* Default constructor */[21;9HEmployee();[22;9H/* Constructor w/ parameters */
    Employee(string nme, int id, string jbTtle, double slry,int yr);[24;9H/* Accessor Functions */[25;9Hstring getName() const;[26;9Hlong getID() const;[27;9Hstring getJobTitle() const;[28;9Hdouble getSalary() const;[29;9Hint getHireYear() const;
    void print();
};

#endif /* EMPLOYEECLASS_H_ */
[94m~                                                                                                             [1;1H[?25h[?4m[?25l[m[35;1H[1m-- INSERT --[m[35;13H[K[1;1H[?25h


























[8Cd[29;10H[30;10H[?25lvvoid print();    v[?25h[?25livoid print();[30;7H[?25h[?25lrvoid print();[30;8H[?25h[?25ltvoid print();[30;9H[?25h[?25luvoid print();[30;10H[?25h[?25lavoid print();[30;11H[?25h[?25llvoid print();[30;12H[?25h[?25l void print();[30;13H[?25h[35;1H[K[30;12H[?25l[?25h[?25l[35;1H:[?25hwq[?25l[?2004l[>4;m"employeeClass.h" 33L, 629B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?1049l[?25h[>4;m[1m[7m%[27m[1m[0m                                                                                                              ]7;file://corinnes-mbp.lan/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode[0m[27m[24m[Jcorinnejones@corinnes-mbp buggyCode % [K[?2004hvvim softwarearchitectClass.h[?2004l
[?1049h[>4;2m[?1h=[?2004h[?1004h[1;35r[?12h[?12l[22;2t[22;1t[27m[29m[m[H[2J[?25l[35;1H"softwarearchitectClass.h" 25L, 633B[2;1H▽[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H#ifndef SOFTWAREARCHITECTCLASS_H_
#define SOFTWAREARCHITECTCLASS_H_[2;34H[K[3;1H[K[4;1H#include "employeeClass.h"
#include <string>
using namespace std;

class SoftwareArchitect : public Employee {[9;9Hstring supervisorName;[10;9Hint ProjectID;[11;9Hint experienceYears;
public:[13;9H/* Default constructor */[14;9HSoftwareArchitect();[15;9H/* Constructor w/ parameters */[16;9HSoftwareArchitect(string nme, long id, string jobTtle, double slry, int yr,[17;17Hstring superName, int projectid, int exp);[18;9H/* Accessor Functions */[19;9Hstring getSupervisorName() const;[20;9Hint getProjectID() const;[21;9Hint getExperienceYears() const;[22;9Hvoid print();
};

#endif /* SOFTWAREARCHITECTCLASS_H_ */
[94m~                                                                                                             [27;1H~                                                                                                             [28;1H~                                                                                                             [29;1H~                                                                                                             [30;1H~                                                                                                             [31;1H~                                                                                                             [32;1H~                                                                                                             [33;1H~                                                                                                             [34;1H~                                                                                                             [1;1H[?25h[?4m[?25l[m[35;1H[1m-- INSERT --[m[35;13H[K[1;1H[?25h









[8Cint experienceY[12;8H[13;24H[14;24H[15;24H[16;24H[17;24H[18;24H[19;24H[20;24H[21;24H[22;22H[?25l[106m()[?25h[?25l[m() ;[?25h[?25lo;[?25h[?25lv;[?25h[?25le;[?25h[?25lr;[?25h[?25lr;[?25h[?25li;[?25h[?25ld;[?25h[?25le;[?25h[35;1H[K[22;29H[?25l[?25h[?25l[35;1H:[?25hwq[?25l[?2004l[>4;m"softwarearchitectClass.h" 25L, 642B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?1049l[?25h[>4;m[1m[7m%[27m[1m[0m                                                                                                              ]7;file://corinnes-mbp.lan/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode[0m[27m[24m[Jcorinnejones@corinnes-mbp buggyCode % [K[?2004hvim softwarearchitectClass.h[24DemployeeClass.h         [9D[19Dls                 [17Dlldb program[12Dclang++ *.cpp -g -O0  -o program[?2004l
In file included from Department.cpp:1:
In file included from ./Department.h:6:
[1m./softwarearchitectClass.h:22:15: [0m[0;1;35mwarning: [0m[1m'override' keyword is a C++11 extension [-Wc++11-extensions][0m
        void print() override;
[0;1;32m                     ^
[0m1 warning generated.
In file included from main.cpp:1:
In file included from ./Department.h:6:
[1m./softwarearchitectClass.h:22:15: [0m[0;1;35mwarning: [0m[1m'override' keyword is a C++11 extension [-Wc++11-extensions][0m
        void print() override;
[0;1;32m                     ^
[0m1 warning generated.
In file included from softwarearchitectClass.cpp:1:
[1m./softwarearchitectClass.h:22:15: [0m[0;1;35mwarning: [0m[1m'override' keyword is a C++11 extension [-Wc++11-extensions][0m
        void print() override;
[0;1;32m                     ^
[0m1 warning generated.
[1m[7m%[27m[1m[0m                                                                                                              ]7;file://corinnes-mbp.lan/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode[0m[27m[24m[Jcorinnejones@corinnes-mbp buggyCode % [K[?2004hclang++ *.cpp -g -O0  -o program[32Dvim softwarearchitectClass.h    [24DemployeeClass.h         [9D[19Dls                 [17Dvim employeeClass.h[15DsoftwarearchitectClass.h[28Dclang++ *.cpp -g -O0  -o program[32D                    [2C          [32Dclang++ *.cpp -g -O0  -o program[32Dvim softwarearchitectClass.h    [24DemployeeClass.h         [9D[19Dls                 [17Dlldb program[?2004l
(lldb) target create "program"
[2mLocating external symbol file for program...[0m[K[2K[2mLoading Apple DWARF index for program...[0m[K[2K[2mLocating external symbol file for dyld...[0m[K[2K[2mParsing symbol table for dyld...[0m[K[2K[2mLocating external symbol file for libc++.1.dylib...[0m[K[2K[2mParsing symbol table for libc++.1.dylib...[0m[K[2K[2mLocating external symbol file for libSystem.B.dylib...[0m[K[2K[2mParsing symbol table for libSystem.B.dylib...[0m[K[2K[2mLocating external symbol file for libc++abi.dylib...[0m[K[2K[2mParsing symbol table for libc++abi.dylib...[0m[K[2K[2mLocating external symbol file for libcache.dylib...[0m[K[2K[2mParsing symbol table for libcache.dylib...[0m[K[2K[2mLocating external symbol file for libcommonCrypto.dylib...[0m[K[2K[2mParsing symbol table for libcommonCrypto.dylib...[0m[K[2K[2mLocating external symbol file for libcompiler_rt.dylib...[0m[K[2K[2mParsing symbol table for libcompiler_rt.dylib...[0m[K[2K[2mLocating external symbol file for libcopyfile.dylib...[0m[K[2K[2mParsing symbol table for libcopyfile.dylib...[0m[K[2K[2mLocating external symbol file for libcorecrypto.dylib...[0m[K[2K[2mParsing symbol table for libcorecrypto.dylib...[0m[K[2K[2mLocating external symbol file for libdispatch.dylib...[0m[K[2K[2mParsing symbol table for libdispatch.dylib...[0m[K[2K[2mLocating external symbol file for libdyld.dylib...[0m[K[2K[2mParsing symbol table for libdyld.dylib...[0m[K[2K[2mLocating external symbol file for libkeymgr.dylib...[0m[K[2K[2mParsing symbol table for libkeymgr.dylib...[0m[K[2K[2mLocating external symbol file for libmacho.dylib...[0m[K[2K[2mParsing symbol table for libmacho.dylib...[0m[K[2K[2mLocating external symbol file for libquarantine.dylib...[0m[K[2K[2mParsing symbol table for libquarantine.dylib...[0m[K[2K[2mLocating external symbol file for libremovefile.dylib...[0m[K[2K[2mParsing symbol table for libremovefile.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_asl.dylib...[0m[K[2K[2mParsing symbol table for libsystem_asl.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_blocks.dylib...[0m[K[2K[2mParsing symbol table for libsystem_blocks.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_c.dylib...[0m[K[2K[2mParsing symbol table for libsystem_c.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_collections.dylib...[0m[K[2K[2mParsing symbol table for libsystem_collections.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_configuration.dylib...[0m[K[2K[2mParsing symbol table for libsystem_configuration.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_containermanager.dylib...[0m[K[2K[2mParsing symbol table for libsystem_containermanager.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_coreservices.dylib...[0m[K[2K[2mParsing symbol table for libsystem_coreservices.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_darwin.dylib...[0m[K[2K[2mParsing symbol table for libsystem_darwin.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_dnssd.dylib...[0m[K[2K[2mParsing symbol table for libsystem_dnssd.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_featureflags.dylib...[0m[K[2K[2mParsing symbol table for libsystem_featureflags.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_info.dylib...[0m[K[2K[2mParsing symbol table for libsystem_info.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_m.dylib...[0m[K[2K[2mParsing symbol table for libsystem_m.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_malloc.dylib...[0m[K[2K[2mParsing symbol table for libsystem_malloc.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_networkextension.dylib...[0m[K[2K[2mParsing symbol table for libsystem_networkextension.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_notify.dylib...[0m[K[2K[2mParsing symbol table for libsystem_notify.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_sandbox.dylib...[0m[K[2K[2mParsing symbol table for libsystem_sandbox.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_secinit.dylib...[0m[K[2K[2mParsing symbol table for libsystem_secinit.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_kernel.dylib...[0m[K[2K[2mParsing symbol table for libsystem_kernel.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_platform.dylib...[0m[K[2K[2mParsing symbol table for libsystem_platform.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_pthread.dylib...[0m[K[2K[2mParsing symbol table for libsystem_pthread.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_symptoms.dylib...[0m[K[2K[2mParsing symbol table for libsystem_symptoms.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_trace.dylib...[0m[K[2K[2mParsing symbol table for libsystem_trace.dylib...[0m[K[2K[2mLocating external symbol file for libunwind.dylib...[0m[K[2K[2mParsing symbol table for libunwind.dylib...[0m[K[2K[2mLocating external symbol file for libxpc.dylib...[0m[K[2K[2mParsing symbol table for libxpc.dylib...[0m[K[2K[2mLocating external symbol file for libobjc.A.dylib...[0m[K[2K[2mParsing symbol table for libobjc.A.dylib...[0m[K[2K[2mLocating external symbol file for liboah.dylib...[0m[K[2K[2mParsing symbol table for liboah.dylib...[0m[K[2K[2mParsing symbol table for program...[0m[K[2KCurrent executable set to '/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode/program' (arm64).
(lldb) [1G[2m(lldb) [0m[8Grun
Process 8107 launched: '/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode/program' (arm64)
  Here is the List of all the Staff in the R&D Department: 
  ------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

   Josh   1   Technology Specialist   3000.00      2015

   Mary   2         Project Manager   5500.00      2010

   Marc   3    Research Team Leader   8000.00      2007

   Mike  11        Multimedia Prog.   2500.00      2014      Mary         5         CSS

  Julie  12     Mainframe Sys.Prog.   2150.00      2013      Mary         5         C++

 Albert  13                OS Prog.   2300.00      2015      Mary         9         C++

   John  21    Senior Software Eng.   4899.00      2011      Marc         6                    7

 Connor  24      Software Developer   1900.00      2017      John         8                    0
  Here is the List of all the Staff in the IT Department: 
  ------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

    Roy  32           Network Prog.   1900.00      2016       N/A         7        JAVA

   Jane  35                  Tester   1500.00      2018       Roy         7        JAVA

 Removing Mike from the company: Succeeded
 -------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

   Josh   1   Technology Specialist   3000.00      2015

   Mary   2         Project Manager   5500.00      2010

   Marc   3    Research Team Leader   8000.00      2007

  Julie  12     Mainframe Sys.Prog.   2150.00      2013      Mary         5         C++

 Albert  13                OS Prog.   2300.00      2015      Mary         9         C++

   John  21    Senior Software Eng.   4899.00      2011      Marc         6                    7

 Connor  24      Software Developer   1900.00      2017      John         8                    0

  Here is the List of all the Programmers who know C++ in the R&D Department: 
  ---------------------------------------------------------------------------
   Name  ID          Title            Salary   Year Hired  Supervisor  ProjectID Prog.Lang. #Exp Years

  Julie  12     Mainframe Sys.Prog.   2150.00      2013      Mary         5         C++

 Albert  13                OS Prog.   2300.00      2015      Mary         9         C++

 Listing All Project IDs:  5 9 6 8
-------------------------
The Highest R&D Employee Salary is: 8000.00
The Highest R&D Programmer Salary is: 2300.00
The Highest R&D Software Architect Salary is: 4899.00

The Average R&D Employee Salary is: 5500
The Average R&D Programmer Salary is: 2225
The Average R&D Software Architect Salary is: 3399

The Average IT Employee Salary is: 0
The Average IT Programmer Salary is: 1700
The Average IT Software Architect Salary is: 0

Process 8107 exited with status = 0 (0x00000000) 
(lldb) [1G[2m(lldb) [0m[8Gexit
[1m[7m%[27m[1m[0m                                                                                                              ]7;file://corinnes-mbp.lan/Users/corinnejones/GitHubSchool/Spring2024/CS6015_SoftwareEngineering/Lab2_Debugging/buggyCode[0m[27m[24m[Jcorinnejones@corinnes-mbp buggyCode % [K[?2004heexit[?2004l

Saving session...
...saving history...truncating history files...
...completed.

Script done on Thu Jan 25 13:26:16 2024
